************* Module tagim
C:  1,0: Missing docstring
************* Module tagim.compose_changelog
C:  5,0: Line too long (108/80)
C:  9,0: Line too long (106/80)
C: 10,0: Line too long (96/80)
W: 13,0: Unnecessary semicolon
W: 14,0: Unnecessary semicolon
W: 15,0: Unnecessary semicolon
C: 16,0: Line too long (82/80)
W: 16,0: Unnecessary semicolon
C: 17,0: Line too long (147/80)
W: 17,0: Unnecessary semicolon
W: 18,0: Unnecessary semicolon
C:  1,0: Missing docstring
C:  3,0: Invalid name "changelog" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
************* Module tagim.tagimgui
C:  6,0: Line too long (128/80)
C: 13,0: Line too long (97/80)
C: 16,0: Line too long (111/80)
C: 18,0: Line too long (87/80)
C: 19,0: Line too long (119/80)
C: 38,0: Line too long (114/80)
W: 12,0: TODO:
C: 25,8: Operator not preceded by a space
        modDir=os.path.dirname(os.path.realpath(__file__))
              ^
C: 25,8: Invalid name "modDir" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 26,8: Operator not preceded by a space
        runningDir=os.path.split(modDir)[0]
                  ^
C: 26,8: Invalid name "runningDir" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 29,8: Operator not preceded by a space
        runningDir=os.path.dirname(sys.argv[0])
                  ^
C: 29,8: Invalid name "runningDir" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 30,8: Operator not preceded by a space
        modDir=runningDir
              ^
C: 30,8: Invalid name "modDir" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
W: 33,4: Module import itself
E: 35,8: No name 'forms' in module 'tagim.tagimgui'
F: 35,8: Unable to import 'tagimgui.forms'
E: 41,4: Module 'tagim.tagimgui' has no 'run' member
************* Module tagim.looping_background_image_shuffler
C: 55,0: Line too long (81/80)
C: 59,0: Line too long (83/80)
W: 59,0: Found indentation with tabs instead of spaces
W: 63,0: Found indentation with tabs instead of spaces
W: 63,0: Unnecessary semicolon
W: 64,0: Found indentation with tabs instead of spaces
W: 64,0: Unnecessary semicolon
W: 65,0: Found indentation with tabs instead of spaces
W: 66,0: Found indentation with tabs instead of spaces
C: 67,0: Line too long (89/80)
C: 70,0: Line too long (98/80)
W: 70,0: Found indentation with tabs instead of spaces
W: 72,0: Found indentation with tabs instead of spaces
C: 73,0: Line too long (108/80)
W: 73,0: Found indentation with tabs instead of spaces
W: 74,0: Found indentation with tabs instead of spaces
W: 77,0: Found indentation with tabs instead of spaces
C: 81,0: Line too long (114/80)
C: 87,0: Line too long (81/80)
W: 89,0: Found indentation with tabs instead of spaces
W: 90,0: Found indentation with tabs instead of spaces
W: 91,0: Found indentation with tabs instead of spaces
W: 92,0: Found indentation with tabs instead of spaces
W: 93,0: Found indentation with tabs instead of spaces
W: 94,0: Found indentation with tabs instead of spaces
W: 16,0: TODO:
W: 55,0: TODO: shorter sleep durations (~2 sec) to more frequently check for stop signal
W: 30,0: Relative import 'tg.tagim', should be 'tagim.tg.tagim'
C: 35,0: Invalid name "p" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 50,0: Invalid name "o" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 58,0:shuffle_background_then_sleep: Comma not followed by a space
def shuffle_background_then_sleep(min_period=3600,max_period=None):
                                                 ^^
C: 63,1:shuffle_background_then_sleep: Invalid name "MIN_DELAY" (should match [a-z_][a-z0-9_]{2,30}$)
C: 64,1:shuffle_background_then_sleep: Invalid name "MAX_DELAY" (should match [a-z_][a-z0-9_]{2,30}$)
C: 72,2:shuffle_background_then_sleep: Comma not followed by a space
		dt = random.randint(min(min_period,MAX_DELAY), min(max_period,MAX_DELAY))
                                    ^^
C: 72,2:shuffle_background_then_sleep: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 74,2:shuffle_background_then_sleep: Comma not followed by a space
		dt  = min(max(min_period,MIN_DELAY),MAX_DELAY)
                          ^^
C: 74,2:shuffle_background_then_sleep: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 82,0: Invalid name "stop_event" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 83,0:stop: Missing docstring
W: 83,17:stop: Unused argument 'frame'
W: 83,9:stop: Unused argument 'signum'
C: 89,1: Invalid name "start_time" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 90,1: Invalid name "sleep_time" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 93,3: Invalid name "start_time" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 94,3: Comma not followed by a space
			shuffle_background_then_sleep(2,2) # ignores o.N2
                                  ^^
************* Module tagim.tagim-script
C:  6,0: Line too long (131/80)
C: 18,0: Line too long (102/80)
C: 21,0: Line too long (117/80)
C: 22,0: Line too long (132/80)
C: 23,0: Line too long (110/80)
C: 24,0: Line too long (96/80)
C: 27,0: Line too long (98/80)
C: 37,0: Line too long (98/80)
C: 42,0: Line too long (126/80)
C: 55,0: Line too long (87/80)
C: 59,0: Line too long (90/80)
C: 63,0: Line too long (319/80)
C: 66,0: Line too long (142/80)
C: 69,0: Line too long (102/80)
C: 71,0: Line too long (87/80)
C: 72,0: Line too long (92/80)
C: 76,0: Line too long (105/80)
C: 83,0: Line too long (114/80)
C: 91,0: Line too long (122/80)
C: 92,0: Line too long (93/80)
C: 95,0: Line too long (118/80)
C: 96,0: Line too long (120/80)
C: 99,0: Line too long (117/80)
C:103,0: Line too long (140/80)
C:110,0: Line too long (102/80)
C:117,0: Line too long (114/80)
C:121,0: Line too long (96/80)
C:140,0: Line too long (182/80)
C:143,0: Line too long (147/80)
C:144,0: Line too long (127/80)
C:147,0: Line too long (89/80)
C:148,0: Line too long (98/80)
C:155,0: Line too long (108/80)
C:156,0: Line too long (108/80)
C:159,0: Line too long (86/80)
C:162,0: Line too long (157/80)
C:163,0: Line too long (104/80)
C:165,0: Line too long (82/80)
C:166,0: Line too long (102/80)
C:168,0: Line too long (122/80)
C:169,0: Line too long (109/80)
C:172,0: Line too long (161/80)
C:177,0: Line too long (122/80)
C:183,0: Line too long (108/80)
C:186,0: Line too long (81/80)
C:191,0: Line too long (340/80)
W:212,0: Bad indentation. Found 2 spaces, expected 4
W:213,0: Bad indentation. Found 2 spaces, expected 4
C:226,0: Line too long (89/80)
W:228,0: Unnecessary semicolon
C:234,0: Line too long (209/80)
C:236,0: Line too long (123/80)
C:237,0: Line too long (90/80)
C:249,0: Line too long (90/80)
W:252,0: Bad indentation. Found 2 spaces, expected 4
C:259,0: Line too long (90/80)
C:264,0: Line too long (112/80)
C:275,0: Line too long (118/80)
C:283,0: Line too long (101/80)
C:284,0: Line too long (109/80)
C:297,0: Line too long (90/80)
C:298,0: Line too long (145/80)
C:300,0: Line too long (117/80)
C:302,0: Line too long (121/80)
C:305,0: Line too long (92/80)
C:307,0: Line too long (118/80)
C:309,0: Line too long (121/80)
C:314,0: Line too long (117/80)
C:316,0: Line too long (121/80)
C:331,0: Line too long (101/80)
C:332,0: Line too long (100/80)
C:339,0: Line too long (241/80)
W:354,0: Bad indentation. Found 6 spaces, expected 8
C:360,0: Line too long (121/80)
C:363,0: Line too long (82/80)
C:369,0: Line too long (83/80)
C:372,0: Line too long (92/80)
C:375,0: Line too long (134/80)
C:378,0: Line too long (137/80)
C:387,0: Line too long (85/80)
C:389,0: Line too long (160/80)
C:391,0: Line too long (132/80)
C:395,0: Line too long (96/80)
C:397,0: Line too long (168/80)
C:403,0: Line too long (82/80)
W: 12,0: TODO:
W: 29,0: TODO: optionparser deprecated
W: 42,0: TODO: 'optparse.OptionParser' deprecated, refactor to 'argparse.ArgumentParser' and do something about reverse compatability
W:163,0: TODO: implement an appropriate tag udpated or incorporate into Comment tag
W:166,0: TODO: implement an appropriate tag udpated or incorporate into Comment tag
W:283,0: TODO: extract By-line, Title, and other tags embedded in the Comment, in addition to the "Tags" tag
W:297,0: TODO: find out if there is an EXIF or EXIV tag for the title that should be used instead
W:298,0: TODO: process the image filename and parent folder(s) name(s) to see if together they would make an appropriate default, natural language title
W:300,0: TODO: strip spaces too? put outside of if condition and do only once?
W:305,0: TODO: find out if there is an EXIF or EXIV tag for the by-line that should be used instead
W:307,0: TODO: strip spaces too? put outside of if condition and do only once?
W:312,0: TODO: delete unneccessary (ugly) '\n' newline characters:
W:314,0: TODO: strip spaces too? put outside of if condition and do only once?
W:322,0: TODO: remove this unnecessary check
W:361,0: TODO: need to also write to the ImageMagik "identify" text file
W:391,0: TODO: add command line options for SMTP server selection and/or settings (--smpt=URL+port or --use-postfix or --use-local)
W:397,0: TODO: confirm the contents of the e-mail and preview the image before sending (python gtk dialog box with thumbnail? html page with email and embedded image?)
C:  1,0: Invalid name "tagim-script" (should match (([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$)
W: 31,0: Relative import 'tg.tagim', should be 'tagim.tg.tagim'
W: 33,0: Relative import 'tg.utils', should be 'tagim.tg.utils'
C: 40,0: Invalid name "version" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 55,0: Invalid name "p" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 70,0: Comma not followed by a space
p.add_option('--go', '--og', '--cg', '--mg', '--gc', '--ogps','--mgps','--cgps',
                                                             ^^
             '--overwrite-gps', '--overwritegps', '--overwrite_gps', '--gps-overwrite',
             '--gpsoverwrite', '--gps_overwrite','--move-gps','--change-gps','--change_gps',
             '--changegps',
             dest='overwritegps', default = False,
             action='store_true',
             help='Overwrite the gps position, even if one already appears to be present in the file.', )
C: 77,0: Comma not followed by a space
p.add_option('-r', '--rotate','--rot',
                             ^^
             dest='angle', default = None,
             help='Rotation angle in clockwise degrees.', )
C: 88,0: Comma not followed by a space
p.add_option('-n', '--next','--new','--shuffle',
                           ^^
             dest='shuffle', default = False,
             action='store_true',
             help='Reload another random image for the desktop background (shuffle the deck and chose the next photo).', )
C: 92,0: Comma not followed by a space
p.add_option('-u','--update','--refresh-catalog', '--update-catalog','--catalog','--refresh',
                 ^^
             dest='update', default = False,
             action='store_true',
             help='Find all photos in the default photo directory and build a catalog for use with --shuffle (-n).', )
C: 96,0: Comma not followed by a space
p.add_option('-b', '-d', '--background','--desktop','--desktopbackground','--desktop-background','--desktop_background',
                                       ^^
             dest='background', default = False,
             action='store_true',
             help='Whether to change the background image to reflect the image identified by --filename or --image.')
C:144,0: Comma not followed by a space
p.add_option('-s','--send', '--share','--send-email','--send_email','--share-email','--email','--email-to','--email_to','--to',
                 ^^
             dest='email_to',
             default = None,
             help='Send the modified or tagged image to the e-mail address specified.', )
C:148,0: Comma not followed by a space
p.add_option('-p', '--password', '--pass', '--pw', '--email-password','--email-pw','--email-pass',
                                                                     ^^
             dest='email_pw',
             default =None,
             help="The plaintext password for your gmail account.", )
C:156,0: Comma not followed by a space
p.add_option('--title','--subject','--caption','--heading','--email-subject', '--email_subject','--subject',
                      ^^
             dest='title',
             default ='',
             help="The email subject line, caption, heading, or title for the image.")
C:160,0: Comma not followed by a space
p.add_option('--by','--by-line','--photographer',
                   ^^
             default ='',
             help="The photographer (or possibly the painter or sculptor or actor that is the subject of the photo?). The copyright holder's personal name?")
C:169,0: Comma not followed by a space
p.add_option('--email-resolution', '--email_resolution','--email-res', '--email_res','--resolution', '--res',
                                                       ^^
             dest='email_res',
             default =None,
             help="Size of the image to be e-mailed (shrink if necessary)--number of pixels along the maximum dimension (length or width, whichever is larger).")
C:173,0: Comma not followed by a space
p.add_option('--email-from', '--email_from','--from',
                                           ^^
             dest='email_from',

             default = None,
             help="The email address in the ReplyTo: and From: fields of the email you want to send out with this image.")
C:183,0: Comma not followed by a space
p.add_option('--email-server', '--email_server','--email-url', '--email_url','--email-smtp', '--email_smtp',
                                               ^^
             dest='email_server',
             default ='smtp.gmail.com',
             help="The smtp email server URL (e.g. smtp.gmail.com or localhost)")
C:188,1: Invalid name "o" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:188,4: Invalid name "a" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:196,0: Invalid name "lat_label" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:197,0: Invalid name "lon_label" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:198,0: Invalid name "ref_suffix" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:209,4: Operator not preceded by a space
    o.tag=' '.join(a)
         ^
C:231,0: Invalid name "sequencenum" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:240,8: Invalid name "sequencenum" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:244,0: Comma not followed by a space
if isinstance(sequencenum,int) and not os.path.isfile(o.image_filename):
                         ^^
C:256,8: Operator not preceded by a space
        o.angle=0.0
               ^
C:258,8: Operator not preceded by a space
        o.flip=0
              ^
C:259,4: Operator not preceded by a space
    im=tagim.rotate_image(o.image_filename,angle=round(float(o.angle),2),flip=int(o.flip))
      ^
C:259,4: Invalid name "im" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:260,4: Invalid name "p" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:267,0: Invalid name "im" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:269,0: Invalid name "exif" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:270,0: Invalid name "iptc" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:271,0: Invalid name "xmp" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:273,0: Invalid name "old_comment" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:274,0: Invalid name "clean_comment" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:275,0: Invalid name "tags" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:279,8: Invalid name "old_comment" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:281,4: Invalid name "old_comment" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:286,4: Comma not followed by a space
    (tags,clean_comment) = tagim.extract_tags(old_comment)
         ^^
C:286,5: Invalid name "tags" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:286,10: Invalid name "clean_comment" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:288,4: Invalid name "clean_comment" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:289,4: Invalid name "tags" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:291,0: Invalid name "new_comment" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:300,4: Invalid name "new_comment" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:307,4: Invalid name "new_comment" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:314,4: Invalid name "new_comment" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:328,4: Operator not preceded by a space
    im.comment=new_comment
              ^
C:332,8: Operator not preceded by a space
        d=tagim.exif_gps_strings(o.gps) # produce a dictionary of key/values for gps location string
         ^
C:332,8: Invalid name "d" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
E:341,14: Instance of 'ImageMetadata' has no 'has_key' member
E:341,25: Undefined variable 'DATE_TAG_KEY'
C:342,4: Operator not preceded by a space
    im[tg.tagim.DATE_TAG_KEY]=tagim.parse_date(o.date)
                             ^
E:342,7: Using variable 'tg' before assignment
C:351,4: Invalid name "clargs" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:352,4: Invalid name "cl" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:372,8: Comma not followed by a space
        subprocess.call(['gksudo',"python set_splash_background.py '"+o.image_filename+"'"])
                                 ^^
C:389,8: Comma not followed by a space
        print 'Composing an email to',o.email_to,'from',o.email_from,'with attachment',o.image_filename,'using username',o.email_user,'on server',o.email_server
                                     ^^
C:390,8: Comma not followed by a space
        print '          Email body:',o.email_body
                                     ^^
W:392,8: Relative import 'tg.mail', should be 'tagim.tg.mail'
C:395,12: Comma not followed by a space
            print "Please enter your password for your",o.email_user,"account at",o.email_server
                                                       ^^
C:396,12: Operator not preceded by a space
            o.email_pw=getpass.getpass()
                      ^
W: 38,0: Unused import units
W: 33,0: Unused import zero_if_none
W: 33,0: Unused import sign
W: 38,0: Unused import util
************* Module tagim.tg.set_splash_background
C: 10,0: Line too long (87/80)
W: 10,0: Found indentation with tabs instead of spaces
W: 11,0: Found indentation with tabs instead of spaces
C:  1,0: Missing docstring
************* Module tagim.tg.tz
C:  1,0: Missing docstring
C: 15,4:UTC.utcoffset: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 15,24:UTC.utcoffset: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
W: 15,24:UTC.utcoffset: Unused argument 'dt'
C: 18,4:UTC.tzname: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 18,21:UTC.tzname: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
W: 18,21:UTC.tzname: Unused argument 'dt'
C: 21,4:UTC.dst: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 21,18:UTC.dst: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
W: 21,18:UTC.dst: Unused argument 'dt'
C: 24,0: Invalid name "utc" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
W: 33,4:FixedOffset.__init__: __init__ method from base class 'tzinfo' is not called
C: 37,4:FixedOffset.utcoffset: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 37,24:FixedOffset.utcoffset: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
W: 37,24:FixedOffset.utcoffset: Unused argument 'dt'
C: 40,4:FixedOffset.tzname: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 40,21:FixedOffset.tzname: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
W: 40,21:FixedOffset.tzname: Unused argument 'dt'
C: 43,4:FixedOffset.dst: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 43,18:FixedOffset.dst: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
W: 43,18:FixedOffset.dst: Unused argument 'dt'
C: 58,0:LocalTimezone: Missing docstring
C: 60,4:LocalTimezone.utcoffset: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 60,24:LocalTimezone.utcoffset: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 66,4:LocalTimezone.dst: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 66,18:LocalTimezone.dst: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 72,4:LocalTimezone.tzname: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 72,21:LocalTimezone.tzname: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 75,4:LocalTimezone._isdst: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 75,4:LocalTimezone._isdst: Missing docstring
C: 75,21:LocalTimezone._isdst: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 76,8:LocalTimezone._isdst: Invalid name "tt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 80,8:LocalTimezone._isdst: Invalid name "tt" (should match [a-z_][a-z0-9_]{2,30}$)
R: 75,4:LocalTimezone._isdst: Method could be a function
C: 83,0: Invalid name "Local" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 87,0:first_sunday_on_or_after: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 87,0:first_sunday_on_or_after: Missing docstring
C: 87,29:first_sunday_on_or_after: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C: 90,8:first_sunday_on_or_after: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C:119,0:USTimeZone: Missing docstring
W:121,4:USTimeZone.__init__: __init__ method from base class 'tzinfo' is not called
C:130,4:USTimeZone.tzname: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C:130,21:USTimeZone.tzname: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C:136,4:USTimeZone.utcoffset: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C:136,24:USTimeZone.utcoffset: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C:139,4:USTimeZone.dst: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C:139,18:USTimeZone.dst: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C:169,0: Invalid name "Eastern" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:170,0: Invalid name "Central" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:171,0: Invalid name "Mountain" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:172,0: Invalid name "Pacific" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
************* Module tagim.tg.replace-in-files-script
C: 37,0: Line too long (94/80)
C: 44,0: Line too long (101/80)
C: 56,0: Line too long (104/80)
C: 61,0: Line too long (92/80)
C: 75,0: Line too long (88/80)
C: 89,0: Line too long (85/80)
C: 90,0: Line too long (94/80)
C:110,0: Line too long (83/80)
C:116,0: Line too long (89/80)
C:124,0: Line too long (93/80)
C:149,0: Line too long (101/80)
C:150,0: Line too long (89/80)
C:153,0: Line too long (106/80)
W: 89,0: TODO: extract extension & use in `utils.replace_in_files(extensions=<...>)`
W: 90,0: TODO: DRY this using the default argument from the ArgParser object
W:149,0: TODO: BUG: pipes may not work output doesn't work (e.g. resolve --run cat tagim | grep tag)
W:150,0: TODO: BUG: built-in commands like cat don't work (e.g. resolve --run cat tagim)
C:  1,0: Invalid name "replace-in-files-script" (should match (([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$)
C:  1,0: Missing docstring
W:  5,0: Reimport 'tg.utils' (imported line 111)
W: 30,-1: String statement has no effect
C: 32,0: Invalid name "version" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
W: 82,6:parse_args: Redefining name 'a' from outer scope (line 87)
W: 37,4:parse_args: Redefining name 'p' from outer scope (line 128)
W: 82,4:parse_args: Redefining name 'o' from outer scope (line 87)
C: 34,0:parse_args: Missing docstring
C: 37,4:parse_args: Invalid name "p" (should match [a-z_][a-z0-9_]{2,30}$)
C: 38,4:parse_args: Comma not followed by a space
    p.add_option('-p','--path',
                     ^^
                 default='./',
                 help='Path to folder or file to do the replacement in.',
C: 42,4:parse_args: Comma not followed by a space
    p.add_option('-i','--interactive',
                     ^^
                 action = 'store_true',
                 help='Whether to interractively prompt for confirmation of every file replacement.',
C: 46,4:parse_args: Comma not followed by a space
    p.add_option('-d','--dryrun','--dry-run',
                     ^^
                 action = 'store_true',
                 help='Do not alter any file content.',
C: 50,4:parse_args: Comma not followed by a space
    p.add_option('-n','--non-interactive','--force',
                     ^^
                 action = 'store_true',
                 help='Whether to force replacement without promptin the user.',
C: 54,4:parse_args: Comma not followed by a space
    p.add_option('-b','--bin','--binary',
                     ^^
                 action = 'store_true',
                 help='Replace string in binary files in addition to text files (ascii, unicode, etc).',
C: 58,4:parse_args: Comma not followed by a space
    p.add_option('-x','-e','--ext','--extension','--extensions',
                     ^^
                 dest='ext',
                 default=None,
                 help='Regular expression for extensions of files to do search/replace in.',
C: 63,4:parse_args: Comma not followed by a space
    p.add_option('-f','--from','--from-txt','--from-text',
                     ^^
                 dest='fromtxt',
                 default='',
                 help='Regular expression for the string to be replaced.',
C: 68,4:parse_args: Comma not followed by a space
    p.add_option('-t','--to',
                     ^^
                 default='',
                 help='Raw, litereal string to replace "from" string with.',
C: 72,4:parse_args: Comma not followed by a space
    p.add_option('-v','--verbose',
                     ^^
                 default=False,
                 action='store_true',
                 help='Verbosely print details of every string replaced in every file.',
C: 77,4:parse_args: Comma not followed by a space
    p.add_option('-q','--quiet',
                     ^^
                 default=False,
                 action='store_true',
                 help="Don't print anything except errors and warnings.",
C: 82,4:parse_args: Comma not followed by a space
    o,a = p.parse_args()
     ^^
C: 82,4:parse_args: Invalid name "o" (should match [a-z_][a-z0-9_]{2,30}$)
C: 82,6:parse_args: Invalid name "a" (should match [a-z_][a-z0-9_]{2,30}$)
C: 83,4:parse_args: Comma not followed by a space
    return o,a
            ^^
C: 87,4: Comma not followed by a space
    o,a = parse_args()
     ^^
C: 87,4: Invalid name "o" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 87,6: Invalid name "a" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 90,8: Operator not preceded by a space
        if o.path=='./': # TODO: DRY this using the default argument from the ArgParser object
                 ^^
C: 91,12: Operator not preceded by a space
            o.path=a[0]
                  ^
C: 93,12: Operator not preceded by a space
            o.fromtxt=a[1]
                     ^
C: 95,12: Operator not preceded by a space
            o.to=a[2]
                ^
C: 98,12: Operator not preceded by a space
            o.fromtxt=a[0]
                     ^
C:100,12: Operator not preceded by a space
            o.to=a[1]
                ^
C:103,12: Operator not preceded by a space
            o.fromtxt=a[0]
                     ^
C:124,8: Operator not preceded by a space
        o.path=chr(0).join(a) # these are already split into an array, so this is unnecessary
              ^
C:125,4: Invalid name "paths" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
E:130,36: Undefined variable 'which'
E:152,30: Undefined variable 'which'
C:153,12: Comma not followed by a space
            output = subprocess.Popen([o.run,'{0}'.format(path)], stdout=subprocess.PIPE).communicate()[0]
                                            ^^
E:153,21: Undefined variable 'subprocess'
E:153,73: Undefined variable 'subprocess'
W:  5,0: Unused import tg
************* Module tagim.tg.fdacsvprocessing
E:968,0: invalid syntax
************* Module tagim.tg.preprocess
E:113,0: invalid syntax
************* Module tagim.tg.utils
C: 22,0: Line too long (82/80)
C: 23,0: Line too long (82/80)
C: 24,0: Line too long (82/80)
C: 25,0: Line too long (92/80)
C: 26,0: Line too long (89/80)
C: 50,0: Line too long (129/80)
C: 74,0: Line too long (109/80)
C: 79,0: Line too long (111/80)
C: 84,0: Line too long (88/80)
C: 88,0: Line too long (135/80)
C: 96,0: Line too long (117/80)
W:110,0: Bad indentation. Found 19 spaces, expected 20
W:111,0: Bad indentation. Found 23 spaces, expected 24
W:112,0: Bad indentation. Found 23 spaces, expected 24
W:113,0: Bad indentation. Found 19 spaces, expected 20
W:114,0: Bad indentation. Found 23 spaces, expected 24
W:115,0: Bad indentation. Found 23 spaces, expected 24
C:119,0: Line too long (92/80)
C:125,0: Line too long (89/80)
C:127,0: Line too long (94/80)
C:136,0: Line too long (113/80)
C:198,0: Line too long (107/80)
C:219,0: Line too long (106/80)
C:221,0: Line too long (99/80)
C:234,0: Line too long (97/80)
C:251,0: Line too long (94/80)
C:252,0: Line too long (99/80)
C:260,0: Line too long (101/80)
C:262,0: Line too long (114/80)
C:264,0: Line too long (96/80)
C:266,0: Line too long (83/80)
C:275,0: Line too long (81/80)
C:282,0: Line too long (95/80)
C:292,0: Line too long (82/80)
C:293,0: Line too long (97/80)
C:312,0: Line too long (85/80)
C:319,0: Line too long (105/80)
C:322,0: Line too long (91/80)
C:324,0: Line too long (97/80)
C:325,0: Line too long (82/80)
C:329,0: Line too long (107/80)
C:337,0: Line too long (101/80)
C:343,0: Line too long (83/80)
C:358,0: Line too long (88/80)
C:363,0: Line too long (105/80)
C:368,0: Line too long (90/80)
C:371,0: Line too long (108/80)
C:376,0: Line too long (84/80)
C:398,0: Line too long (89/80)
C:407,0: Line too long (86/80)
C:409,0: Line too long (81/80)
C:412,0: Line too long (91/80)
C:431,0: Line too long (104/80)
C:450,0: Line too long (90/80)
C:456,0: Line too long (103/80)
C:458,0: Line too long (118/80)
C:469,0: Line too long (83/80)
C:475,0: Line too long (112/80)
C:496,0: Line too long (142/80)
C:509,0: Line too long (142/80)
C:513,0: Line too long (88/80)
W:521,0: Bad indentation. Found 2 spaces, expected 4
C:524,0: Line too long (120/80)
C:526,0: Line too long (127/80)
C:536,0: Line too long (83/80)
C:543,0: Line too long (162/80)
C:549,0: Line too long (99/80)
C:550,0: Line too long (109/80)
W:556,0: Bad indentation. Found 17 spaces, expected 16
C:560,0: Line too long (132/80)
C:561,0: Line too long (104/80)
C:591,0: Line too long (93/80)
C:595,0: Line too long (89/80)
C:597,0: Line too long (101/80)
C:599,0: Line too long (89/80)
C:600,0: Line too long (88/80)
C:635,0: Line too long (105/80)
C:639,0: Line too long (96/80)
C:641,0: Line too long (100/80)
C:659,0: Line too long (105/80)
C:663,0: Line too long (96/80)
C:665,0: Line too long (100/80)
C:685,0: Line too long (81/80)
C:686,0: Line too long (97/80)
C:693,0: Line too long (111/80)
C:706,0: Line too long (84/80)
C:712,0: Line too long (117/80)
C:713,0: Line too long (84/80)
C:730,0: Line too long (112/80)
C:733,0: Line too long (116/80)
C:734,0: Line too long (87/80)
C:739,0: Line too long (164/80)
C:740,0: Line too long (93/80)
C:742,0: Line too long (94/80)
C:745,0: Line too long (89/80)
C:748,0: Line too long (84/80)
C:757,0: Line too long (110/80)
C:758,0: Line too long (102/80)
C:771,0: Line too long (137/80)
C:773,0: Line too long (82/80)
C:782,0: Line too long (93/80)
C:783,0: Line too long (120/80)
C:786,0: Line too long (87/80)
C:787,0: Line too long (95/80)
C:791,0: Line too long (92/80)
C:792,0: Line too long (101/80)
C:794,0: Line too long (94/80)
C:795,0: Line too long (110/80)
C:797,0: Line too long (113/80)
C:805,0: Line too long (90/80)
C:806,0: Line too long (84/80)
C:813,0: Line too long (114/80)
C:819,0: Line too long (90/80)
C:820,0: Line too long (84/80)
C:825,0: Line too long (88/80)
C:829,0: Line too long (139/80)
C:833,0: Line too long (133/80)
C:848,0: Line too long (83/80)
C:849,0: Line too long (110/80)
W: 19,0: TODO: don't read the whole file into memory and write.
W: 20,0: TODO: DRY-up using replace_in_file
W: 70,0: TODO: raise an exception if appropriate
W: 84,0: FIXME: use tempfile module or some other means of generating a unique tmp file
W: 85,0: FIXME: don't overwrite existing file if exists, raise exception
W: 88,0: FIXME, currently can't read and write binary strings
W:177,0: FIXME: Is OSError(errno.ENOSYS) the right error to raise?
W:178,0: TODO: Utilize best-practices from Mercurial project:
W:244,0: TODO:
W:312,0: TODO: this doesn't bypass the finally section does it?
W:318,0: TODO: implement
W:321,0: TODO: implement
W:324,0: TODO: reuse this script in "/home/hobs/bin/securehist" to search widely for passwords to delete
W:325,0: TODO: use the os.path functions to parse the filename and compare the extension 
W:337,0: FIXME: crossplatform CWD using Env.CWD sys.cwd()?
W:358,0: TODO: surely there's a better way to break out of a nested loop twice
W:360,0: TODO: allow multiple extensions in a list/set/tuple
W:363,0: TODO: detect whether pattern contains path separators (slashes) and match to fullname if so
W:398,0: FIXME: this just calls os.getcwd() anyway
W:411,0: TODO: check for existence and read/writabiltiy of home path
W:412,0: TODO: if still no home path do a filesystem search in common places including cwd
W:426,0: FIXME: does this point cwd to the module directory and name?
W:429,0: FIXME: does this name the tmp file after the utils module?
W:438,0: TODO: 
W:565,0: FIXME: NOT_IMPLEMENTED
W:576,0: TODO: calculate the maximum lengths for jagged lists of lists rather than the
W:706,0: TODO: check for empty new dicts and either delete or don't update the old dict
W:712,0: TODO: what about types.ClassType or types.ObjectType or types.StringTypes
W:713,0: TODO: check for empty new dicts and either delete or don't update the old dict
W:742,0: FIXME: watch out! you're replacing hidden module elements like __name__ __file__ etc!!!!
W:767,0: TODO:
W:771,0: TODO: what about types.ClassType or types.ObjectType or types.StringTypes
W:791,0: FIXME: deepcopy faults on objects with unsafe attributes like __new__!
W:801,0: TODO: convert to sets, append, then convert back to list?
W:805,0: FIXME: the exact same object instance (e.g. dict) might not exist in the old
W:814,0: TODO: convert to sets, append, then convert back to list?
W:819,0: FIXME: the exact same object instance (e.g. dict) might not exist in the old
W:828,0: TODO: 4 DRY-up oportunities below
W:832,0: TODO: convert to sets, append, then convert back to list?
W:838,0: TODO: convert to sets, append, then convert back to list?
W:843,0: TODO: convert to sets, append, then convert back to list?
W:848,0: TODO: is it OK to change the old type in addition to its value?
W:849,0: FIXME: mismatched schemas (new and old elements not the same type and structure) may result in no change
C:  1,0: Missing docstring
C:  9,0: Invalid name "version" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 36,24:multiline_replace_in_file: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C: 37,8:multiline_replace_in_file: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C: 41,4:multiline_replace_in_file: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C: 43,28:multiline_replace_in_file: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C: 46,0: Comma not followed by a space
TEXTCHARS = ''.join(map(chr, [7,8,9,10,12,13,27] + range(0x20, 0x100)))
                               ^^
W: 46,20: Used builtin function 'map'
C: 47,0: Invalid name "is_binary_string" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
R: 49,0:replace_in_file: Too many arguments (8/5)
R: 49,0:replace_in_file: Too many local variables (16/15)
W: 61,38:replace_in_file: Access to a protected member _pattern_type of a client class
C: 65,4:replace_in_file: Invalid name "l" (should match [a-z_][a-z0-9_]{2,30}$)
C: 68,12:replace_in_file: Invalid name "l" (should match [a-z_][a-z0-9_]{2,30}$)
C: 88,16:replace_in_file: Comma not followed by a space
                if not isinstance(line,(str,unicode)) or is_binary_string(line): # FIXME, currently can't read and write binary strings
                                      ^^
C: 90,16:replace_in_file: Comma not followed by a space
                (s,n) = search_pattern.subn(replacement_pattern, line)
                  ^^
C: 90,17:replace_in_file: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C: 90,19:replace_in_file: Invalid name "n" (should match [a-z_][a-z0-9_]{2,30}$)
C: 92,20:replace_in_file: Comma not followed by a space
                    print 'Found {0} occurences on line {1}'.format(n,l)
                                                                     ^^
R: 49,0:replace_in_file: Too many branches (20/12)
W:122,4:start: Redefining name 'os' from outer scope (line 13)
C:122,4:start: Comma not followed by a space
    import os,subprocess
             ^^
W:122,4:start: Reimport 'os' (imported line 13)
E:124,8:start: Undefined variable 'startfile'
E:125,9:start: Undefined variable 'name'
C:132,12:start: Operator not followed by a space
            print >>sys.stderr, "Child was terminated by signal", -retcode
                   ^
C:134,12:start: Operator not followed by a space
            print >>sys.stderr, "Child returned", retcode
                   ^
W:182,4:launch: Redefining name 'sys' from outer scope (line 15)
W:182,4:launch: Redefining name 'os' from outer scope (line 13)
W:182,4:launch: Reimport 'sys' (imported line 15)
W:182,4:launch: Reimport 'os' (imported line 13)
E:195,43:launch: Module 'os' has no 'startfile' member
E:196,8:launch: Module 'os' has no 'startfile' member
E:200,39:launch: Module 'subprocess' has no 'DEVNULL' member
E:201,40:launch: Module 'subprocess' has no 'DEVNULL' member
E:204,15:launch: Instance of 'list' has no 'endswith' member (but some types could not be inferred)
E:208,17:launch: Instance of 'list' has no 'startswith' member (but some types could not be inferred)
E:215,40:launch: Module 'subprocess' has no 'DEVNULL' member
E:216,41:launch: Module 'subprocess' has no 'DEVNULL' member
E:217,41:launch: Module 'subprocess' has no 'DEVNULL' member
R:140,0:launch: Too many branches (13/12)
W:140,35:launch: Unused argument 'gui'
W:140,45:launch: Unused argument 'fallback'
R:235,0:locate: Too many local variables (17/15)
W:248,4:locate: Redefining name 're' from outer scope (line 14)
W:248,4:locate: Redefining name 'os' from outer scope (line 13)
W:248,4:locate: Reimport 'os' (imported line 13)
W:248,4:locate: Reimport 're' (imported line 14)
C:249,4:locate: Comma not followed by a space
    basepath = basepath if isinstance(basepath,str) else ''
                                              ^^
C:253,4:locate: Operator not preceded by a space
    if basepath == os.path.sep or basepath=='/':
                                          ^^
C:262,8:locate: Invalid name "rx" (should match [a-z_][a-z0-9_]{2,30}$)
C:266,8:locate: Comma not followed by a space
        files = files if not matchpath else [os.path.join(path,fn) for fn in files]
                                                              ^^
C:268,8:locate: Operator not preceded by a space
        fullpaths=[]
                 ^
C:269,12:locate: Invalid name "fp" (should match [a-z_][a-z0-9_]{2,30}$)
C:275,16:locate: Comma not followed by a space
                fullpath = fullpath if matchpath else os.path.join(path,fullpath)
                                                                       ^^
W:265,14:locate: Unused variable 'dirs'
C:293,0:wait_for_key: Comma not followed by a space
def wait_for_key(message='Hit Y <CTRL-C> to cancel, any other key to continue...',verbose=False):
                                                                                 ^^
W:294,4:wait_for_key: Redefining name 'sys' from outer scope (line 15)
W:294,4:wait_for_key: Redefining name 'os' from outer scope (line 13)
C:293,0:wait_for_key: Missing docstring
W:294,4:wait_for_key: Reimport 'sys' (imported line 15)
W:294,4:wait_for_key: Reimport 'os' (imported line 13)
C:297,8:wait_for_key: Invalid name "fd" (should match [a-z_][a-z0-9_]{2,30}$)
C:309,20:wait_for_key: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:313,32:wait_for_key: More than one statement on a single line
R:335,0:replace_in_files: Too many arguments (8/5)
R:335,0:replace_in_files: Too many local variables (17/15)
C:372,12:replace_in_files: Comma not followed by a space
            if key in ['x','X','C','c']:
                          ^^
W:356,17:replace_in_files: Unused variable 'dirnames'
C:381,0:containing_folder: Missing docstring
C:395,4:Env.__init__: Comma not followed by a space
    def __init__(self,username='hobs'):
                     ^^
C:401,12:Env.__init__: Operator not preceded by a space
            self.home=os.path.normpath(os.getenv('HOME'))
                     ^
C:403,12:Env.__init__: Operator not preceded by a space
            self.user=os.path.normpath(os.path.dirname(self.home))
                     ^
C:405,12:Env.__init__: Operator not preceded by a space
            self.user=os.getenv('USER')
                     ^
C:407,16:Env.__init__: Operator not preceded by a space
                self.home=os.path.normpath(os.path.join(os.path.sep+'home',self.user))
                         ^
C:409,16:Env.__init__: Operator not preceded by a space
                self.home=os.path.normpath(os.path.join(os.path.sep+'home',user))
                         ^
E:409,75:Env.__init__: Undefined variable 'user'
C:410,16:Env.__init__: Operator not preceded by a space
                self.user=containing_folder(self.home)
                         ^
C:415,12:Env.__init__: Operator not preceded by a space
            self.module_path=os.path.realpath(__file__)
                            ^
C:416,12:Env.__init__: Operator not followed by a space
            self.module_dir =os.path.dirname(self.module_path)
                            ^
C:417,12:Env.__init__: Operator not followed by a space
            self.work_dir   =os.path.split(self.module_dir)[0]
                            ^
C:420,12:Env.__init__: Operator not preceded by a space
            self.module_path=sys.argv[0]
                            ^
C:421,12:Env.__init__: Operator not followed by a space
            self.module_dir =os.path.dirname(self.module_path)
                            ^
C:422,12:Env.__init__: Operator not followed by a space
            self.work_dir   =self.module_path
                            ^
W:395,22:Env.__init__: Unused argument 'username'
R:386,0:Env: Too few public methods (0/2)
C:427,0: Invalid name "env" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:431,0:find_nearby_file: Comma not followed by a space
def find_nearby_file(filename=None, defaultname=DEFAULT_TMP_FILENAME, alternate_ext=['.txt','','.tmp']):
                                                                                           ^^
W:431,0:find_nearby_file: Dangerous default value ['.txt', '', '.tmp'] as argument
C:448,8:find_nearby_file: Operator not preceded by a space
        filepath= os.path.join(env.home,defaultname)
                ^
C:450,36:find_nearby_file: Invalid name "fp" (should match [a-z_][a-z0-9_]{2,30}$)
C:451,12:find_nearby_file: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:453,8:find_nearby_file: Comma not followed by a space
        print 'Unable to create or append the file at ',repr(filepath)
                                                       ^^
W:451,12:find_nearby_file: Unused variable 's'
W:431,70:find_nearby_file: Unused argument 'alternate_ext'
C:455,0:android_path: Missing docstring
C:460,0:user_home: Missing docstring
C:461,4:user_home: Invalid name "ue" (should match [a-z_][a-z0-9_]{2,30}$)
C:462,4:user_home: Comma not followed by a space
    return(ue.user,ue.home)
                  ^^
C:464,0:path_here: Missing docstring
C:465,4:path_here: Invalid name "en" (should match [a-z_][a-z0-9_]{2,30}$)
C:466,4:path_here: Comma not followed by a space
    return(en.module_path,en.module_dir,en.work_dir)
                         ^^
W:470,36:validate: Redefining built-in 'type'
C:470,0:validate: Missing docstring
C:471,4:validate: Invalid name "m" (should match [a-z_][a-z0-9_]{2,30}$)
W:476,40:validate_str: Redefining built-in 'type'
C:476,0:validate_str: Missing docstring
E:477,4:validate_str: Undefined variable 'assert_validation'
C:479,0:basic_arguments: Invalid name "p" (should match [a-z_][a-z0-9_]{2,30}$)
C:479,0:basic_arguments: Missing docstring
C:479,20:basic_arguments: Invalid name "p" (should match [a-z_][a-z0-9_]{2,30}$)
C:481,4:basic_arguments: Comma not followed by a space
    if p and isinstance(p,OptionParser):
                         ^^
C:498,0:zero_if_none: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:498,0:zero_if_none: Missing docstring
C:498,17:zero_if_none: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:505,0:running_as_root: Missing docstring
C:509,8:running_as_root: Comma not followed by a space
        msg = "{0}:{1}:\n  Insufficient priveledges--need admin (root). Rerun this script using sudo or equivalent.".format(__file__,__name__)
                                                                                                                                    ^^
C:514,0:sign: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:514,0:sign: Missing docstring
C:514,9:sign: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:515,4:sign: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:516,4:sign: Operator not preceded by a space
    if f<0:
        ^
C:517,8:sign: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:520,0:make_same_type_as: Comma not followed by a space
def make_same_type_as(obj1,obj2):
                          ^^
C:520,0:make_same_type_as: Missing docstring
C:535,8:flatten: Invalid name "el" (should match [a-z_][a-z0-9_]{2,30}$)
C:562,0: Invalid name "flatten_lists" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
W:563,14:<lambda>: Used * or ** magic
E:563,14:<lambda>: Using variable 'flatten_lists' before assignment
C:566,0:deep_flatten: Missing docstring
C:567,4:deep_flatten: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
W:567,4:deep_flatten: Unused variable 'f'
C:569,0:size: Comma not followed by a space
def size(lol,d=None):
            ^^
C:569,0:size: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:569,13:size: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:592,4:size: Operator not preceded by a space
    if not d:                d=list()
                              ^
C:592,29:size: More than one statement on a single line
C:592,29:size: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:593,4:size: Comma not followed by a space
    if isinstance(d,tuple):  d=list(d)
                   ^^
C:593,29:size: More than one statement on a single line
C:593,29:size: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:597,8:size: Comma not followed by a space
        if lol[0] and isinstance(lol[0],collections.Iterable) and not isinstance(lol[0], basestring):
                                       ^^
C:602,12:size: Comma not followed by a space
            d.extend(size(lol[0],None))
                                ^^
C:605,0:size2: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:605,10:size2: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:623,4:size2: Invalid name "NM" (should match [a-z_][a-z0-9_]{2,30}$)
C:624,4:size2: Comma not followed by a space
    print 'size(NM)',NM
                    ^^
C:625,4:size2: Invalid name "D" (should match [a-z_][a-z0-9_]{2,30}$)
C:627,8:size2: Invalid name "D" (should match [a-z_][a-z0-9_]{2,30}$)
C:628,8:size2: Comma not followed by a space
        print 'D',D
                 ^^
C:631,4:size2: Operator not preceded by a space
    if D==2:
        ^^
C:633,4:size2: Operator not preceded by a space
    if D>2:
        ^
C:637,4:size2: Operator not preceded by a space
    if D<2:
        ^
C:642,4:size2: Operator not preceded by a space
    if D==1:
        ^^
C:646,0:size3: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:646,10:size3: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:649,4:size3: Invalid name "NM" (should match [a-z_][a-z0-9_]{2,30}$)
C:650,4:size3: Invalid name "D" (should match [a-z_][a-z0-9_]{2,30}$)
C:652,8:size3: Invalid name "D" (should match [a-z_][a-z0-9_]{2,30}$)
C:655,4:size3: Operator not preceded by a space
    if D==3:
        ^^
C:657,9:size3: Operator not preceded by a space
    elif D>3:
          ^
C:661,9:size3: Operator not preceded by a space
    elif D<3:
          ^
C:666,4:size3: Operator not preceded by a space
    if D==2:
        ^^
C:668,9:size3: Operator not preceded by a space
    elif D==1:
          ^^
R:693,0:merge_settings: Too many arguments (7/5)
F:710,8:merge_settings: Unable to import 'settings'
C:714,4:merge_settings: Operator not preceded by a space
    if verbose>=2:
              ^^
C:730,4:merge_settings: Comma not followed by a space
    if isinstance(old, dict) and isinstance(new,dict) and isinstance( dold, dict ) and isinstance( dnew, dict ):
                                               ^^
C:731,8:merge_settings: Operator not preceded by a space
        if verbose>=2:
                  ^^
C:737,8:merge_settings: Operator not preceded by a space
        if verbose>=2:
                  ^^
C:744,8:merge_settings: Operator not preceded by a space
        if verbose>=2:
                  ^^
C:746,8:merge_settings: Comma not followed by a space
        for k,v in dold.items():
             ^^
C:746,14:merge_settings: Invalid name "v" (should match [a-z_][a-z0-9_]{2,30}$)
C:752,8:merge_settings: Operator not preceded by a space
        if verbose>=2:
                  ^^
R:693,0:merge_settings: Too many branches (18/12)
W:712,4:merge_settings: Unused variable 'scalar_type'
W:746,14:merge_settings: Unused variable 'v'
R:758,0:merge_iter: Too many arguments (7/5)
C:770,4:merge_iter: Comma not followed by a space
    import types,copy
                ^^
C:772,4:merge_iter: Comma not followed by a space
    iterable_type = (list,tuple,set)
                         ^^
C:777,8:merge_iter: Operator not preceded by a space
        if verbose>=2:
                  ^^
C:779,8:merge_iter: Comma not followed by a space
        for k,v in new.items():
             ^^
C:779,14:merge_iter: Invalid name "v" (should match [a-z_][a-z0-9_]{2,30}$)
C:780,12:merge_iter: Operator not preceded by a space
            if verbose>=2:
                      ^^
C:781,16:merge_iter: Comma not followed by a space
                print 'merging key ',k
                                    ^^
C:785,20:merge_iter: Operator not preceded by a space
                    if depth>0:
                            ^
C:793,17:merge_iter: Operator not preceded by a space
            elif verbose>=2:
                        ^^
C:798,8:merge_iter: Comma not followed by a space
        if isinstance(new,tuple):
                         ^^
C:802,8:merge_iter: Comma not followed by a space
        for i,v in enumerate(new):
             ^^
C:802,14:merge_iter: Invalid name "v" (should match [a-z_][a-z0-9_]{2,30}$)
C:803,12:merge_iter: Operator not preceded by a space
            if verbose>=2:
                      ^^
C:804,16:merge_iter: Comma not followed by a space
                print 'merging list item',i
                                         ^^
C:808,16:merge_iter: Operator not preceded by a space
                if verbose>=2:
                          ^^
C:809,20:merge_iter: Comma not followed by a space
                    print 'appending list item',i
                                               ^^
C:811,8:merge_iter: Comma not followed by a space
        if isinstance(new,tuple):
                         ^^
C:816,8:merge_iter: Comma not followed by a space
        for i,v in enumerate(new):
             ^^
C:816,14:merge_iter: Invalid name "v" (should match [a-z_][a-z0-9_]{2,30}$)
C:817,12:merge_iter: Operator not preceded by a space
            if verbose>=2:
                      ^^
C:818,16:merge_iter: Comma not followed by a space
                print 'merging tuple item',i #,' value '+repr(v)
                                          ^^
C:823,16:merge_iter: Operator not preceded by a space
                if verbose>=2:
                          ^^
C:830,8:merge_iter: Operator not preceded by a space
        if verbose>=2:
                  ^^
C:836,8:merge_iter: Operator not preceded by a space
        if verbose>=2:
                  ^^
C:841,8:merge_iter: Operator not preceded by a space
        if verbose>=2:
                  ^^
C:846,8:merge_iter: Operator not preceded by a space
        if verbose>=2:
                  ^^
R:758,0:merge_iter: Too many branches (31/12)
R:758,0:merge_iter: Too many statements (59/50)
************* Module tagim.tg.__init__
C:  1,0: Line too long (96/80)
C: 52,0: Line too long (88/80)
W: 21,0: TODO:
************* Module tagim.tg
W: 25,0: Wildcard import tg.utils
C: 45,0:_get_exports_list: Missing docstring
W: 52,0: Wildcard import tg.utils
************* Module tagim.tg.memem
E: 19,0: expected an indented block
************* Module tagim.tg.mail
C: 26,0: Line too long (108/80)
C: 31,0: Line too long (98/80)
C: 47,0: Line too long (86/80)
C: 48,0: Line too long (131/80)
W: 50,0: Found indentation with tabs instead of spaces
W: 52,0: Found indentation with tabs instead of spaces
W: 53,0: Found indentation with tabs instead of spaces
W: 55,0: Found indentation with tabs instead of spaces
C: 56,0: Line too long (123/80)
W: 56,0: Found indentation with tabs instead of spaces
W: 57,0: Found indentation with tabs instead of spaces
W: 59,0: Found indentation with tabs instead of spaces
W: 60,0: Found indentation with tabs instead of spaces
W: 61,0: Found indentation with tabs instead of spaces
W: 62,0: Found indentation with tabs instead of spaces
C: 63,0: Line too long (113/80)
W: 63,0: Found indentation with tabs instead of spaces
W: 64,0: Found indentation with tabs instead of spaces
W: 65,0: Found indentation with tabs instead of spaces
W: 67,0: Found indentation with tabs instead of spaces
W: 69,0: Found indentation with tabs instead of spaces
W: 70,0: Found indentation with tabs instead of spaces
W: 72,0: Found indentation with tabs instead of spaces
W: 73,0: Found indentation with tabs instead of spaces
W: 74,0: Found indentation with tabs instead of spaces
W: 75,0: Found indentation with tabs instead of spaces
W: 76,0: Found indentation with tabs instead of spaces
W: 77,0: Found indentation with tabs instead of spaces
W: 78,0: Found indentation with tabs instead of spaces
W: 80,0: Found indentation with tabs instead of spaces
W: 81,0: Found indentation with tabs instead of spaces
W: 82,0: Found indentation with tabs instead of spaces
W: 83,0: Found indentation with tabs instead of spaces
C: 89,0: Line too long (81/80)
W: 92,0: Found indentation with tabs instead of spaces
W: 93,0: Found indentation with tabs instead of spaces
W: 94,0: Found indentation with tabs instead of spaces
W: 95,0: Found indentation with tabs instead of spaces
W: 96,0: Found indentation with tabs instead of spaces
W: 97,0: Found indentation with tabs instead of spaces
W: 98,0: Found indentation with tabs instead of spaces
W: 99,0: Found indentation with tabs instead of spaces
W:100,0: Found indentation with tabs instead of spaces
W:101,0: Found indentation with tabs instead of spaces
W:102,0: Found indentation with tabs instead of spaces
W:103,0: Found indentation with tabs instead of spaces
W:105,0: Found indentation with tabs instead of spaces
W:106,0: Found indentation with tabs instead of spaces
W:107,0: Found indentation with tabs instead of spaces
W:108,0: Found indentation with tabs instead of spaces
W:109,0: Found indentation with tabs instead of spaces
W:110,0: Found indentation with tabs instead of spaces
W:111,0: Found indentation with tabs instead of spaces
C:113,0: Line too long (87/80)
W:113,0: Found indentation with tabs instead of spaces
W:116,0: Found indentation with tabs instead of spaces
W:117,0: Found indentation with tabs instead of spaces
W:118,0: Found indentation with tabs instead of spaces
W:119,0: Found indentation with tabs instead of spaces
W:121,0: Found indentation with tabs instead of spaces
C:122,0: Line too long (89/80)
W:122,0: Found indentation with tabs instead of spaces
W:124,0: Found indentation with tabs instead of spaces
W:125,0: Found indentation with tabs instead of spaces
W:126,0: Found indentation with tabs instead of spaces
W:128,0: Found indentation with tabs instead of spaces
W:129,0: Found indentation with tabs instead of spaces
W:131,0: Found indentation with tabs instead of spaces
W:132,0: Found indentation with tabs instead of spaces
W:133,0: Found indentation with tabs instead of spaces
W:134,0: Found indentation with tabs instead of spaces
W:136,0: Found indentation with tabs instead of spaces
W:139,0: Found indentation with tabs instead of spaces
W:140,0: Found indentation with tabs instead of spaces
W:141,0: Found indentation with tabs instead of spaces
W:142,0: Found indentation with tabs instead of spaces
W:145,0: Found indentation with tabs instead of spaces
W:146,0: Found indentation with tabs instead of spaces
W:147,0: Found indentation with tabs instead of spaces
W:148,0: Found indentation with tabs instead of spaces
W:149,0: Found indentation with tabs instead of spaces
W:151,0: Found indentation with tabs instead of spaces
C:153,0: Line too long (106/80)
W:153,0: Found indentation with tabs instead of spaces
W:154,0: Found indentation with tabs instead of spaces
W:158,0: Found indentation with tabs instead of spaces
W:159,0: Found indentation with tabs instead of spaces
W:160,0: Found indentation with tabs instead of spaces
W:161,0: Found indentation with tabs instead of spaces
W:164,0: Found indentation with tabs instead of spaces
W:165,0: Found indentation with tabs instead of spaces
W:166,0: Found indentation with tabs instead of spaces
C:169,0: Line too long (82/80)
W:170,0: Found indentation with tabs instead of spaces
C:171,0: Line too long (81/80)
W:171,0: Found indentation with tabs instead of spaces
C:172,0: Line too long (83/80)
W:172,0: Found indentation with tabs instead of spaces
W:173,0: Found indentation with tabs instead of spaces
W:174,0: Found indentation with tabs instead of spaces
W:174,0: Unnecessary semicolon
W:175,0: Found indentation with tabs instead of spaces
W:176,0: Found indentation with tabs instead of spaces
W:177,0: Found indentation with tabs instead of spaces
W:178,0: Found indentation with tabs instead of spaces
W:179,0: Found indentation with tabs instead of spaces
C:180,0: Line too long (81/80)
W:180,0: Found indentation with tabs instead of spaces
W:181,0: Found indentation with tabs instead of spaces
W:181,0: Unnecessary semicolon
W:182,0: Found indentation with tabs instead of spaces
W:183,0: Found indentation with tabs instead of spaces
W:184,0: Found indentation with tabs instead of spaces
W:185,0: Found indentation with tabs instead of spaces
C:186,0: Line too long (115/80)
C:187,0: Line too long (111/80)
W:187,0: Found indentation with tabs instead of spaces
W:188,0: Found indentation with tabs instead of spaces
W:189,0: Found indentation with tabs instead of spaces
W:190,0: Found indentation with tabs instead of spaces
W:191,0: Found indentation with tabs instead of spaces
W:192,0: Found indentation with tabs instead of spaces
W: 20,0: TODO:
W:156,0: TODO: 
W:162,0: TODO: 
C: 34,0: Invalid name "version" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
E: 40,0: No name 'MIMEMultipart' in module 'email'
F: 40,0: Unable to import 'email.MIMEMultipart'
E: 41,0: No name 'MIMEBase' in module 'email'
F: 41,0: Unable to import 'email.MIMEBase'
E: 42,0: No name 'MIMEText' in module 'email'
F: 42,0: Unable to import 'email.MIMEText'
E: 43,0: No name 'MIMEAudio' in module 'email'
F: 43,0: Unable to import 'email.MIMEAudio'
E: 44,0: No name 'MIMEImage' in module 'email'
F: 44,0: Unable to import 'email.MIMEImage'
E: 45,0: No name 'Encoders' in module 'email'
F: 45,0: Unable to import 'email.Encoders'
R: 47,0:send: Too many arguments (11/5)
R: 47,0:send: Too many local variables (16/15)
W: 47,0:send: Dangerous default value [] as argument
C: 47,0:send: Invalid name "to" (should match [a-z_][a-z0-9_]{2,30}$)
C: 47,0:send: Missing docstring
C: 47,55:send: Invalid name "to" (should match [a-z_][a-z0-9_]{2,30}$)
W: 57,2:send: Unreachable code
C: 95,2:send: Comma not followed by a space
		(attachments,size) = optimize_size(attachments)
              ^^
C: 97,6:send: Invalid name "attachmentPath" (should match [a-z_][a-z0-9_]{2,30}$)
C: 99,3:send: Comma not followed by a space
			msg.attach(getAttachment(attachmentPath,size))
                                          ^^
C:101,2:send: Comma not followed by a space
		msg.attach(getAttachment(attachments,size))
                                      ^^
C:103,2:send: Comma not followed by a space
		warnings.warn("Attachments parameter was of invalid type: ",type(attachments))
                                                             ^^
C:105,1:send: Invalid name "mailServer" (should match [a-z_][a-z0-9_]{2,30}$)
C:113,1:send: Comma not followed by a space
	print('Successflly sent email titled {subject} to {to}'.format(subject=subject,to=to))
                                                                               ^^
R: 47,0:send: Too many branches (14/12)
W: 50,1:send: Unused variable 'error'
C:115,0:getAttachment: Comma not followed by a space
def getAttachment(attachmentFilePath,size):
                                    ^^
C:115,0:getAttachment: Invalid name "getAttachment" (should match [a-z_][a-z0-9_]{2,30}$)
C:115,0:getAttachment: Invalid name "attachmentFilePath" (should match [a-z_][a-z0-9_]{2,30}$)
C:115,0:getAttachment: Missing docstring
C:115,18:getAttachment: Invalid name "attachmentFilePath" (should match [a-z_][a-z0-9_]{2,30}$)
C:116,1:getAttachment: Comma not followed by a space
	if isinstance(size,str):
                   ^^
C:117,2:getAttachment: Operator not preceded by a space
		size=int(size)
      ^
E:119,2:getAttachment: Undefined variable 'warn'
C:121,1:getAttachment: Invalid name "contentType" (should match [a-z_][a-z0-9_]{2,30}$)
C:122,1:getAttachment: Comma not followed by a space
	print "ContentType:",contentType,"\n  encoding:",encoding,"\n  path:",attachmentFilePath
                     ^^
C:126,2:getAttachment: Invalid name "contentType" (should match [a-z_][a-z0-9_]{2,30}$)
C:128,1:getAttachment: Invalid name "mainType" (should match [a-z_][a-z0-9_]{2,30}$)
C:128,11:getAttachment: Invalid name "subType" (should match [a-z_][a-z0-9_]{2,30}$)
C:129,1:getAttachment: Invalid name "fp" (should match [a-z_][a-z0-9_]{2,30}$)
E:134,15:getAttachment: Undefined variable 'email'
C:141,3:getAttachment: Comma not followed by a space
			newAttachmentFilePath = resize_image(attachmentFilePath,max_dimension = size)
                                                          ^^
C:141,3:getAttachment: Invalid name "newAttachmentFilePath" (should match [a-z_][a-z0-9_]{2,30}$)
C:142,3:getAttachment: Invalid name "fp" (should match [a-z_][a-z0-9_]{2,30}$)
C:157,0:get_size: Invalid name "attachmentFilePaths" (should match [a-z_][a-z0-9_]{2,30}$)
C:157,0:get_size: Missing docstring
C:157,13:get_size: Invalid name "attachmentFilePaths" (should match [a-z_][a-z0-9_]{2,30}$)
W:160,1:get_size: Unnecessary pass statement
W:158,1:get_size: Unused variable 'Image'
W:157,13:get_size: Unused argument 'attachmentFilePaths'
C:163,0:optimize_size: Invalid name "attachmentFilePaths" (should match [a-z_][a-z0-9_]{2,30}$)
C:163,0:optimize_size: Missing docstring
C:163,18:optimize_size: Invalid name "attachmentFilePaths" (should match [a-z_][a-z0-9_]{2,30}$)
W:164,1:optimize_size: Unnecessary pass statement
R:169,0:resize_image: Too many local variables (18/15)
C:169,0:resize_image: Invalid name "attachmentFilePath" (should match [a-z_][a-z0-9_]{2,30}$)
C:169,0:resize_image: Missing docstring
C:169,17:resize_image: Invalid name "attachmentFilePath" (should match [a-z_][a-z0-9_]{2,30}$)
C:171,1:resize_image: Comma not followed by a space
	(image_name,image_ext) =  os.path.splitext(os.path.basename(attachmentFilePath))
            ^^
C:172,1:resize_image: Invalid name "newAttachmentFilePath" (should match [a-z_][a-z0-9_]{2,30}$)
C:174,1:resize_image: Comma not followed by a space
	(width0,height0)=img.size;
        ^^
C:175,1:resize_image: Operator not followed by a space
	max_dimension0  =max([width0,height0])
                 ^
C:176,1:resize_image: Operator not preceded by a space
	if max_dimension0<=0:
                  ^^
C:181,2:resize_image: Comma not followed by a space
		sf = [1,1];
         ^^
C:181,2:resize_image: Invalid name "sf" (should match [a-z_][a-z0-9_]{2,30}$)
C:182,2:resize_image: Operator not preceded by a space
		if width and width0>0:
                     ^
C:184,2:resize_image: Operator not preceded by a space
		if height and height0>0:
                       ^
C:187,2:resize_image: Comma not followed by a space
		scale_factor =  max(min((sf[0]+sf[1])/2,1.0),0.001) # prevent extrapolation (scaling >1) or extreme shrinking
                                         ^^
C:188,2:resize_image: Comma not followed by a space
		width1 = max(round(scale_factor*width0),1)
                                         ^^
C:189,2:resize_image: Comma not followed by a space
		height1 = max(round(scale_factor*height0),1)
                                           ^^
W:179,2:resize_image: Unused variable 'scalefactor'
W: 44,0: Unused import MIMEImage
W: 43,0: Unused import MIMEAudio
************* Module tagim.tg.compose_email
C:  5,0: Line too long (109/80)
C: 14,0: Line too long (81/80)
C: 25,0: Line too long (85/80)
W: 46,0: Bad indentation. Found 2 spaces, expected 4
W: 47,0: Bad indentation. Found 4 spaces, expected 8
C: 54,0: Line too long (81/80)
W: 56,0: Bad indentation. Found 2 spaces, expected 4
C: 59,0: Line too long (129/80)
C: 60,0: Line too long (155/80)
C: 13,0: Invalid name "p" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 14,0: Comma not followed by a space
p.add_option("-e", "-t", "--email",dest='email', default='journal@totalgood.com',
                                  ^^
             help="Send email to EMAIL_TO", metavar="EMAIL_TO")
C: 22,0: Comma not followed by a space
p.add_option("-c", "--cc",help="Carbon copy email addresses")
                         ^^
C: 26,0: Comma not followed by a space
p.add_option("-b", "--body",help="Email body text")
                           ^^
C: 32,1: Invalid name "o" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 32,4: Invalid name "a" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 38,0: Operator not preceded by a space
od=dict(vars(o))
  ^
C: 38,0: Invalid name "od" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 40,0: Operator not preceded by a space
email=od.pop('email')
     ^
C: 40,0: Invalid name "email" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 41,0: Operator not preceded by a space
firefox=od.pop('firefox')
       ^
C: 41,0: Invalid name "firefox" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 42,0: Operator not preceded by a space
verbose=od.pop('verbose')
       ^
C: 42,0: Invalid name "verbose" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 45,0: Comma not followed by a space
for k,v in od.items():
     ^^
C: 53,0: Invalid name "apps" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 54,0: Invalid name "clargs" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
************* Module tagim.tg.finance
C:  7,0: Line too long (124/80)
C: 15,0: Line too long (107/80)
W: 18,0: Bad indentation. Found 2 spaces, expected 4
W: 34,0: Bad indentation. Found 2 spaces, expected 4
W: 35,0: Bad indentation. Found 2 spaces, expected 4
W: 36,0: Bad indentation. Found 2 spaces, expected 4
W: 37,0: Bad indentation. Found 2 spaces, expected 4
W: 38,0: Bad indentation. Found 2 spaces, expected 4
W: 39,0: Bad indentation. Found 2 spaces, expected 4
W: 40,0: Bad indentation. Found 2 spaces, expected 4
W: 41,0: Bad indentation. Found 2 spaces, expected 4
W: 43,0: Bad indentation. Found 2 spaces, expected 4
W: 46,0: Bad indentation. Found 2 spaces, expected 4
W: 48,0: Bad indentation. Found 2 spaces, expected 4
W: 49,0: Bad indentation. Found 2 spaces, expected 4
W: 50,0: Bad indentation. Found 2 spaces, expected 4
C: 53,0: Line too long (82/80)
W: 53,0: Bad indentation. Found 2 spaces, expected 4
W: 55,0: Bad indentation. Found 2 spaces, expected 4
W: 56,0: Bad indentation. Found 2 spaces, expected 4
W: 57,0: Bad indentation. Found 4 spaces, expected 8
W: 58,0: Bad indentation. Found 4 spaces, expected 8
W: 59,0: Bad indentation. Found 4 spaces, expected 8
W: 59,0: Unnecessary semicolon
W: 60,0: Bad indentation. Found 2 spaces, expected 4
W: 61,0: Bad indentation. Found 4 spaces, expected 8
W: 62,0: Bad indentation. Found 4 spaces, expected 8
W: 63,0: Bad indentation. Found 6 spaces, expected 12
W: 65,0: Bad indentation. Found 2 spaces, expected 4
W: 66,0: Bad indentation. Found 2 spaces, expected 4
C: 68,0: Line too long (87/80)
W: 69,0: Bad indentation. Found 2 spaces, expected 4
W: 72,0: Bad indentation. Found 2 spaces, expected 4
W: 72,0: Use of the <> operator
W: 73,0: Bad indentation. Found 4 spaces, expected 8
W: 74,0: Bad indentation. Found 2 spaces, expected 4
W: 74,0: Use of the <> operator
W: 75,0: Bad indentation. Found 4 spaces, expected 8
W: 76,0: Bad indentation. Found 2 spaces, expected 4
W: 77,0: Bad indentation. Found 2 spaces, expected 4
W: 77,0: Use of the <> operator
W: 78,0: Bad indentation. Found 4 spaces, expected 8
C: 79,0: Line too long (89/80)
W: 80,0: Bad indentation. Found 2 spaces, expected 4
W: 81,0: Bad indentation. Found 2 spaces, expected 4
W: 82,0: Bad indentation. Found 2 spaces, expected 4
W: 83,0: Bad indentation. Found 2 spaces, expected 4
W: 84,0: Bad indentation. Found 4 spaces, expected 8
W: 85,0: Bad indentation. Found 4 spaces, expected 8
W: 86,0: Bad indentation. Found 4 spaces, expected 8
W: 87,0: Bad indentation. Found 2 spaces, expected 4
W: 88,0: Bad indentation. Found 2 spaces, expected 4
W: 89,0: Bad indentation. Found 2 spaces, expected 4
W: 92,0: Bad indentation. Found 2 spaces, expected 4
W: 99,0: Bad indentation. Found 2 spaces, expected 4
W:100,0: Bad indentation. Found 2 spaces, expected 4
W:101,0: Bad indentation. Found 2 spaces, expected 4
C:102,0: Line too long (101/80)
W:102,0: Bad indentation. Found 2 spaces, expected 4
W:104,0: Bad indentation. Found 2 spaces, expected 4
W:107,0: Bad indentation. Found 2 spaces, expected 4
W:112,0: Bad indentation. Found 2 spaces, expected 4
W:113,0: Bad indentation. Found 2 spaces, expected 4
W:114,0: Bad indentation. Found 2 spaces, expected 4
W:115,0: Bad indentation. Found 4 spaces, expected 8
W:116,0: Bad indentation. Found 4 spaces, expected 8
W:117,0: Bad indentation. Found 4 spaces, expected 8
W:118,0: Bad indentation. Found 4 spaces, expected 8
W:120,0: Bad indentation. Found 4 spaces, expected 8
W:123,0: Bad indentation. Found 2 spaces, expected 4
W:128,0: Bad indentation. Found 2 spaces, expected 4
W:128,0: Unnecessary semicolon
W:130,0: Bad indentation. Found 2 spaces, expected 4
W:130,0: Unnecessary semicolon
W:131,0: Bad indentation. Found 2 spaces, expected 4
W:132,0: Bad indentation. Found 2 spaces, expected 4
W:133,0: Bad indentation. Found 2 spaces, expected 4
C:135,0: Line too long (88/80)
W:136,0: Bad indentation. Found 2 spaces, expected 4
C:145,0: Line too long (98/80)
W:145,0: Bad indentation. Found 2 spaces, expected 4
W:146,0: Bad indentation. Found 2 spaces, expected 4
C:147,0: Line too long (91/80)
W:147,0: Bad indentation. Found 2 spaces, expected 4
C:148,0: Line too long (89/80)
W:148,0: Bad indentation. Found 2 spaces, expected 4
W:149,0: Bad indentation. Found 2 spaces, expected 4
W:150,0: Bad indentation. Found 2 spaces, expected 4
C:151,0: Line too long (152/80)
C:156,0: Line too long (96/80)
W:156,0: Bad indentation. Found 2 spaces, expected 4
C:157,0: Line too long (85/80)
W:157,0: Bad indentation. Found 2 spaces, expected 4
C:158,0: Line too long (128/80)
W:158,0: Bad indentation. Found 2 spaces, expected 4
W:159,0: Bad indentation. Found 2 spaces, expected 4
W:160,0: Bad indentation. Found 2 spaces, expected 4
W:161,0: Bad indentation. Found 2 spaces, expected 4
W:162,0: Bad indentation. Found 4 spaces, expected 8
W:163,0: Bad indentation. Found 2 spaces, expected 4
W:164,0: Bad indentation. Found 2 spaces, expected 4
W:165,0: Bad indentation. Found 4 spaces, expected 8
W:166,0: Bad indentation. Found 2 spaces, expected 4
W:167,0: Bad indentation. Found 2 spaces, expected 4
C:168,0: Line too long (100/80)
C:171,0: Line too long (94/80)
W:173,0: Bad indentation. Found 2 spaces, expected 4
W:173,0: Unnecessary semicolon
W:175,0: Bad indentation. Found 2 spaces, expected 4
C:181,0: Line too long (155/80)
W:181,0: Bad indentation. Found 2 spaces, expected 4
W:182,0: Bad indentation. Found 2 spaces, expected 4
W:184,0: Bad indentation. Found 2 spaces, expected 4
W:185,0: Bad indentation. Found 2 spaces, expected 4
W:186,0: Bad indentation. Found 2 spaces, expected 4
W:187,0: Bad indentation. Found 2 spaces, expected 4
W:189,0: Bad indentation. Found 2 spaces, expected 4
W:190,0: Bad indentation. Found 2 spaces, expected 4
W:191,0: Bad indentation. Found 2 spaces, expected 4
C:192,0: Line too long (92/80)
W:192,0: Bad indentation. Found 2 spaces, expected 4
C:193,0: Line too long (100/80)
W:193,0: Bad indentation. Found 2 spaces, expected 4
C:194,0: Line too long (105/80)
W:194,0: Bad indentation. Found 2 spaces, expected 4
W:195,0: Bad indentation. Found 2 spaces, expected 4
W:196,0: Bad indentation. Found 2 spaces, expected 4
W:198,0: Bad indentation. Found 2 spaces, expected 4
W:199,0: Bad indentation. Found 2 spaces, expected 4
W:200,0: Bad indentation. Found 2 spaces, expected 4
C:201,0: Line too long (113/80)
W:201,0: Bad indentation. Found 2 spaces, expected 4
C:202,0: Line too long (119/80)
W:202,0: Bad indentation. Found 2 spaces, expected 4
C:203,0: Line too long (102/80)
W:203,0: Bad indentation. Found 2 spaces, expected 4
C:204,0: Line too long (206/80)
W:204,0: Bad indentation. Found 2 spaces, expected 4
C:205,0: Line too long (87/80)
W:205,0: Bad indentation. Found 2 spaces, expected 4
W:206,0: Bad indentation. Found 2 spaces, expected 4
W:207,0: Bad indentation. Found 2 spaces, expected 4
C:209,0: Line too long (124/80)
W:209,0: Bad indentation. Found 2 spaces, expected 4
W:210,0: Bad indentation. Found 2 spaces, expected 4
W:211,0: Bad indentation. Found 2 spaces, expected 4
W:213,0: Bad indentation. Found 2 spaces, expected 4
W:214,0: Bad indentation. Found 2 spaces, expected 4
W:215,0: Bad indentation. Found 2 spaces, expected 4
W:216,0: Bad indentation. Found 2 spaces, expected 4
W:217,0: Bad indentation. Found 2 spaces, expected 4
C:218,0: Line too long (112/80)
W:218,0: Bad indentation. Found 2 spaces, expected 4
W:219,0: Bad indentation. Found 2 spaces, expected 4
W:220,0: Bad indentation. Found 2 spaces, expected 4
W:221,0: Bad indentation. Found 2 spaces, expected 4
W:222,0: Bad indentation. Found 2 spaces, expected 4
W:224,0: Bad indentation. Found 2 spaces, expected 4
W:225,0: Bad indentation. Found 2 spaces, expected 4
W:228,0: Bad indentation. Found 2 spaces, expected 4
W:231,0: Bad indentation. Found 2 spaces, expected 4
W:232,0: Bad indentation. Found 2 spaces, expected 4
W:233,0: Bad indentation. Found 2 spaces, expected 4
W:234,0: Bad indentation. Found 2 spaces, expected 4
W:235,0: Bad indentation. Found 2 spaces, expected 4
W:236,0: Bad indentation. Found 2 spaces, expected 4
W:237,0: Bad indentation. Found 2 spaces, expected 4
W:240,0: Bad indentation. Found 2 spaces, expected 4
W:241,0: Bad indentation. Found 4 spaces, expected 8
C:242,0: Line too long (126/80)
W:242,0: Bad indentation. Found 4 spaces, expected 8
W:243,0: Bad indentation. Found 4 spaces, expected 8
C:244,0: Line too long (92/80)
W:244,0: Bad indentation. Found 6 spaces, expected 12
W:245,0: Bad indentation. Found 4 spaces, expected 8
C:246,0: Line too long (102/80)
W:246,0: Bad indentation. Found 6 spaces, expected 12
W:247,0: Bad indentation. Found 2 spaces, expected 4
C:248,0: Line too long (98/80)
W:248,0: Bad indentation. Found 2 spaces, expected 4
W:249,0: Bad indentation. Found 2 spaces, expected 4
C:250,0: Line too long (91/80)
W:250,0: Bad indentation. Found 2 spaces, expected 4
C:251,0: Line too long (89/80)
W:251,0: Bad indentation. Found 2 spaces, expected 4
W:252,0: Bad indentation. Found 2 spaces, expected 4
W:253,0: Bad indentation. Found 2 spaces, expected 4
C:254,0: Line too long (136/80)
W:254,0: Bad indentation. Found 2 spaces, expected 4
W:255,0: Bad indentation. Found 2 spaces, expected 4
W:256,0: Bad indentation. Found 2 spaces, expected 4
W:257,0: Bad indentation. Found 2 spaces, expected 4
W:258,0: Bad indentation. Found 2 spaces, expected 4
W:259,0: Bad indentation. Found 2 spaces, expected 4
W:260,0: Bad indentation. Found 2 spaces, expected 4
W:261,0: Bad indentation. Found 2 spaces, expected 4
W:262,0: Bad indentation. Found 2 spaces, expected 4
W:263,0: Bad indentation. Found 2 spaces, expected 4
F:  7,0: Unable to import 'matplotlib'
F:  8,0: Unable to import 'scipy.io.matlab'
F: 10,0: Unable to import 'scipy.optimize'
F: 11,0: Unable to import 'scipy.signal'
R: 17,0:plot: Too many arguments (7/5)
C: 17,0:plot: Comma not followed by a space
def plot(x=[],y=[],s='b.',title='Data Plot',xlabel='Time',label='',xtn='.PNG'):
             ^^
W: 17,0:plot: Dangerous default value [] as argument
W: 17,0:plot: Dangerous default value [] as argument
C: 17,0:plot: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C: 17,0:plot: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C: 17,0:plot: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C: 17,9:plot: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C: 17,14:plot: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C: 17,19:plot: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C: 34,2:plot: Operator not preceded by a space
  fig=pyplot.figure()
     ^
C: 36,2:plot: Operator not preceded by a space
  ax=pyplot.subplot(111)
    ^
C: 36,2:plot: Invalid name "ax" (should match [a-z_][a-z0-9_]{2,30}$)
C: 37,2:plot: Comma not followed by a space
  pyplot.plot(x,y,s)
               ^^
C: 39,2:plot: Operator not preceded by a space
  fn='Fig'+str(fig.number)+'--'+title+xtn
    ^
C: 39,2:plot: Invalid name "fn" (should match [a-z_][a-z0-9_]{2,30}$)
C: 40,2:plot: Comma not followed by a space
  print 'Saving figure to file named',fn
                                     ^^
C: 43,2:plot: Comma not followed by a space
  return (ax,fig)
            ^^
W: 17,58:plot: Unused argument 'label'
W: 17,44:plot: Unused argument 'xlabel'
C: 45,0:format_date: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C: 45,16:format_date: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C: 48,2:format_date: Operator not preceded by a space
  i=min(max(int(x+0.5),1),2000000)
   ^
C: 49,2:format_date: Comma not followed by a space
  print "x =", x,"  i =", i
                ^^
W: 45,19:format_date: Unused argument 'pos'
C: 52,0:wdrange: Comma not followed by a space
def wdrange(N,end_date=date.today()):
             ^^
C: 52,0:wdrange: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C: 52,12:wdrange: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C: 55,2:wdrange: Comma not followed by a space
  x = end_date.toordinal()+np.arange(0,-N,-1)
                                      ^^
C: 55,2:wdrange: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C: 59,4:wdrange: Operator not preceded by a space
    x[0]=x[0]-1;
        ^
C: 61,4:wdrange: Operator not preceded by a space
    x[i+1]=x[i]-1
          ^
C: 65,2:wdrange: Operator not preceded by a space
  x=x[-1::-1]
   ^
C: 65,2:wdrange: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C: 68,0:sticks: Comma not followed by a space
def sticks(date_ordinal=[],close=[],high=[],low=[],title='Security Price Time Series'):
                          ^^
W: 68,0:sticks: Dangerous default value [] as argument
W: 68,0:sticks: Dangerous default value [] as argument
W: 68,0:sticks: Dangerous default value [] as argument
W: 68,0:sticks: Dangerous default value [] as argument
C: 76,2:sticks: Comma not followed by a space
  print date_ordinal,close,high,low,title
                    ^^
C: 78,4:sticks: Operator not preceded by a space
    x=wdrange(len(close))
     ^
C: 78,4:sticks: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C: 80,2:sticks: Comma not followed by a space
  (ax,fig)=plot(date_ordinal,close, '_')
     ^^
C: 80,3:sticks: Invalid name "ax" (should match [a-z_][a-z0-9_]{2,30}$)
C: 89,2:sticks: Comma not followed by a space
  return ax,fig
           ^^
W: 78,4:sticks: Unused variable 'x'
C: 91,0:sticks_demo: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C: 91,16:sticks_demo: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C: 99,2:sticks_demo: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:100,2:sticks_demo: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C:101,2:sticks_demo: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:102,2:sticks_demo: Operator not preceded by a space
  ax,fig=sticks(date_ordinal=x,close=y,high=1.1*y,low=.9*y,title='Security Price "Sticks" Plot Demo')
        ^
C:102,2:sticks_demo: Invalid name "ax" (should match [a-z_][a-z0-9_]{2,30}$)
C:106,0:prediction_error: Comma not followed by a space
def prediction_error(alpha,x,y):
                          ^^
C:106,0:prediction_error: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:106,0:prediction_error: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C:106,0:prediction_error: Missing docstring
C:106,27:prediction_error: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:106,29:prediction_error: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C:107,2:prediction_error: Comma not followed by a space
  return np.sqrt(np.sum((y-np.sum(alpha*x,axis=1))**2,axis=None)/len(y))
                                         ^^
W:109,0: Using the global statement at the module level
C:110,0: Invalid name "optimizer_cycle_count" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:111,0:optimizer_status: Invalid name "xk" (should match [a-z_][a-z0-9_]{2,30}$)
C:111,0:optimizer_status: Missing docstring
C:111,21:optimizer_status: Invalid name "xk" (should match [a-z_][a-z0-9_]{2,30}$)
W:112,2:optimizer_status: Using the global statement
C:113,2:optimizer_status: Operator not preceded by a space
  optimizer_cycle_count=optimizer_cycle_count+1
                       ^
C:114,2:optimizer_status: Operator not preceded by a space
  if not optimizer_cycle_count%1000:
                              ^
C:115,4:optimizer_status: Comma not followed by a space
    print "      cycles = ",optimizer_cycle_count
                           ^^
C:116,4:optimizer_status: Comma not followed by a space
    print "     mean(x) = ",sum(xk)/len(xk)
                           ^^
C:117,4:optimizer_status: Comma not followed by a space
    print "mean(abs(x)) = ",sum(abs(xk))/len(xk)
                           ^^
C:118,4:optimizer_status: Comma not followed by a space
    print "      std(x) = ",np.sqrt(sum(xk**2)/len(xk))
                           ^^
C:122,0:datenum2ordinal: Invalid name "dn" (should match [a-z_][a-z0-9_]{2,30}$)
C:122,20:datenum2ordinal: Invalid name "dn" (should match [a-z_][a-z0-9_]{2,30}$)
C:128,2:datenum2ordinal: Operator not preceded by a space
  datenum_for_posix_epoch=719529;
                         ^
C:130,2:datenum2ordinal: Operator not preceded by a space
  ordinal_for_posix_epoch=719163;
                         ^
C:131,2:datenum2ordinal: Operator not preceded by a space
  ordinal_to_datenum_offset=datenum_for_posix_epoch-ordinal_for_posix_epoch
                           ^
C:132,2:datenum2ordinal: Operator not preceded by a space
  ordinal_days=np.array(dn)-ordinal_to_datenum_offset
              ^
R:135,0:build_predictor: Too many arguments (7/5)
R:135,0:build_predictor: Too many local variables (35/15)
C:135,0:build_predictor: Comma not followed by a space
def build_predictor(Nwin=5,Nres=128,Dwin=1,tol=1e-4,maxiter=1e4,symbol='GE',xtn='.PNG'):
                          ^^
C:135,0:build_predictor: Invalid name "Nwin" (should match [a-z_][a-z0-9_]{2,30}$)
C:135,0:build_predictor: Invalid name "Nres" (should match [a-z_][a-z0-9_]{2,30}$)
C:135,0:build_predictor: Invalid name "Dwin" (should match [a-z_][a-z0-9_]{2,30}$)
C:135,20:build_predictor: Invalid name "Nwin" (should match [a-z_][a-z0-9_]{2,30}$)
C:135,27:build_predictor: Invalid name "Nres" (should match [a-z_][a-z0-9_]{2,30}$)
C:135,36:build_predictor: Invalid name "Dwin" (should match [a-z_][a-z0-9_]{2,30}$)
C:145,2:build_predictor: Operator not preceded by a space
  r=np.recfromcsv('/home/hobs/Desktop/References/quant/lyle/data/'+symbol+'_yahoo.csv',skiprows=1)
   ^
C:145,2:build_predictor: Invalid name "r" (should match [a-z_][a-z0-9_]{2,30}$)
C:150,2:build_predictor: Invalid name "Isplit" (should match [a-z_][a-z0-9_]{2,30}$)
C:156,2:build_predictor: Invalid name "Ndat" (should match [a-z_][a-z0-9_]{2,30}$)
C:157,2:build_predictor: Invalid name "Nfilt" (should match [a-z_][a-z0-9_]{2,30}$)
C:158,2:build_predictor: Invalid name "Ntests" (should match [a-z_][a-z0-9_]{2,30}$)
C:159,2:build_predictor: Comma not followed by a space
  x = np.zeros((Ntests,Nfilt),dtype=float)
                      ^^
C:159,2:build_predictor: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:160,2:build_predictor: Comma not followed by a space
  window_sampler = np.arange(0,Nwin,Dwin)
                              ^^
C:161,6:build_predictor: Invalid name "i0" (should match [a-z_][a-z0-9_]{2,30}$)
C:162,4:build_predictor: Comma not followed by a space
    x[i0,:]    = daily_returns[window_sampler+i0]
        ^^
C:163,2:build_predictor: Comma not followed by a space
  xres = np.zeros((Nres,Nfilt),dtype=float)
                       ^^
C:164,6:build_predictor: Invalid name "i0" (should match [a-z_][a-z0-9_]{2,30}$)
C:165,4:build_predictor: Comma not followed by a space
    xres[i0,:] = daily_returns[window_sampler+i0+len(daily_returns)-Isplit]
           ^^
C:166,2:build_predictor: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C:175,2:build_predictor: Operator not preceded by a space
  t0=time.clock()
    ^
C:175,2:build_predictor: Invalid name "t0" (should match [a-z_][a-z0-9_]{2,30}$)
C:181,2:build_predictor: Comma not followed by a space
  alpha = opt.fmin(prediction_error, np.ones(Nfilt)/Nfilt, args=(x,y), xtol=tol*2, ftol=tol, maxiter=maxiter, maxfun=maxiter*2, callback=optimizer_status)
                                                                  ^^
C:182,2:build_predictor: Operator not preceded by a space
  dt=time.clock()-t0
    ^
C:182,2:build_predictor: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C:185,2:build_predictor: Comma not followed by a space
  print 'Answer after',dt/60,'minutes of optimization '
                      ^^
C:187,2:build_predictor: Comma not followed by a space
  print "Filter coefficients (alpha) =",alpha
                                       ^^
C:189,2:build_predictor: Comma not followed by a space
  res_predictions = np.sum(alpha*xres,axis=1)
                                     ^^
C:196,2:build_predictor: Invalid name "res_average_daily_return_magnitude" (should match [a-z_][a-z0-9_]{2,30}$)
C:201,2:build_predictor: Comma not followed by a space
  print 'average prediction error =',100.0*res_signed_prediction_error_ave/res_average_daily_return_magnitude,"%"
                                    ^^
C:202,2:build_predictor: Comma not followed by a space
  print 'percent of predictions in wrong direction =',100.0*np.sum(res_prediction_sign_errors)/len(res_predictions),"%"
                                                     ^^
C:203,2:build_predictor: Comma not followed by a space
  print 'number of days with big predictions =',np.sum(np.abs(res_predictions)>res_prediction_std*1.5)
                                               ^^
C:204,2:build_predictor: Comma not followed by a space
  print 'percent of big predictions in wrong direction =',100.0*np.sum((np.abs(res_predictions)>res_prediction_std*1.5)*res_prediction_sign_errors)/np.sum(np.abs(res_predictions)>res_prediction_std*1.5),"%"
                                                         ^^
C:205,2:build_predictor: Comma not followed by a space
  print 'average daily return magnitude =',100.0*res_average_daily_return_magnitude,"%"
                                          ^^
C:206,2:build_predictor: Comma not followed by a space
  print 'std dev of prediction error =',100.0*res_prediction_error_std,"%"
                                       ^^
C:207,2:build_predictor: Comma not followed by a space
  print 'std dev of prediction =',100.0*res_prediction_std,"%"
                                 ^^
C:209,2:build_predictor: Operator not preceded by a space
  title=['Filter Coefficients','Daily Returns, Predicted and Actual','Prediction Error','Prediction Errors & Daily Returns']
       ^
C:210,2:build_predictor: Operator not preceded by a space
  f=0
   ^
C:210,2:build_predictor: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:211,2:build_predictor: Comma not followed by a space
  (ax,fig)=plot(x=range(len(alpha)),y=alpha,s='o',xtn='.PNG')
     ^^
C:211,3:build_predictor: Invalid name "ax" (should match [a-z_][a-z0-9_]{2,30}$)
C:213,2:build_predictor: Operator not preceded by a space
  f=f+1
   ^
C:213,2:build_predictor: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:216,2:build_predictor: Invalid name "ax" (should match [a-z_][a-z0-9_]{2,30}$)
C:217,2:build_predictor: Comma not followed by a space
  ax.hist(yres,bins=int(len(yres)/8),log=True,label='Daily Returns')
              ^^
C:218,2:build_predictor: Comma not followed by a space
  ax.hist(res_prediction_errors,bins=int(len(yres)/8),log=True,alpha=.5,label='Nonincestuous Prediction Errors')
                               ^^
R:135,0:build_predictor: Too many statements (57/50)
W:173,2:build_predictor: Unused variable 'date_ordinal'
W:193,2:build_predictor: Unused variable 'res_prediction_error_magnitude'
C:227,0:lfilt: Comma not followed by a space
def lfilt(f,g):
           ^^
C:227,0:lfilt: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:227,0:lfilt: Invalid name "g" (should match [a-z_][a-z0-9_]{2,30}$)
C:227,0:lfilt: Missing docstring
C:227,10:lfilt: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:227,12:lfilt: Invalid name "g" (should match [a-z_][a-z0-9_]{2,30}$)
C:228,2:lfilt: Comma not followed by a space
  return sig.lfilter(f,1,g)[len(f)-len(g):]
                      ^^
C:230,0:lfilt_demo: Missing docstring
C:231,2:lfilt_demo: Operator not preceded by a space
  f=.1*(np.arange(4)+1)
   ^
C:231,2:lfilt_demo: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:232,2:lfilt_demo: Operator not preceded by a space
  g=np.arange(10)+1
   ^
C:232,2:lfilt_demo: Invalid name "g" (should match [a-z_][a-z0-9_]{2,30}$)
C:233,2:lfilt_demo: Comma not followed by a space
  fg = lfilt(f,g)
              ^^
C:233,2:lfilt_demo: Invalid name "fg" (should match [a-z_][a-z0-9_]{2,30}$)
C:234,2:lfilt_demo: Comma not followed by a space
  print "f =",f
             ^^
C:235,2:lfilt_demo: Comma not followed by a space
  print "g =",g
             ^^
C:236,2:lfilt_demo: Comma not followed by a space
  print "g filtered by f =",fg
                           ^^
C:239,0:show_predictions: Comma not followed by a space
def show_predictions(alpha='alpha',symbol='GE',xtn='.PNG'):
                                  ^^
C:239,0:show_predictions: Missing docstring
C:242,4:show_predictions: Operator not preceded by a space
    a=mat.loadmat(alpha+'.mat',mat_dtype=False)  # load a matlab style set of matrices from the file named by the string alpha
     ^
C:242,4:show_predictions: Invalid name "a" (should match [a-z_][a-z0-9_]{2,30}$)
C:244,6:show_predictions: Operator not preceded by a space
      alpha=a.get(alpha).reshape(-1) # get the variable with the name of the string in alpha
           ^
C:246,6:show_predictions: Operator not preceded by a space
      alpha=a.get(a.keys()[2]).reshape(-1) # get the first non-hidden key and reshape into a 1-D array
           ^
C:247,2:show_predictions: Comma not followed by a space
  print('Loading financial data for stock symbol',symbol)
                                                 ^^
C:248,2:show_predictions: Operator not preceded by a space
  r=np.recfromcsv('/home/hobs/Desktop/References/quant/lyle/data/'+symbol+'_yahoo.csv',skiprows=1)
   ^
C:248,2:show_predictions: Invalid name "r" (should match [a-z_][a-z0-9_]{2,30}$)
C:253,2:show_predictions: Comma not followed by a space
  predictions = lfilt(alpha,daily_returns)
                           ^^
C:254,2:show_predictions: Comma not followed by a space
  print('Plotting a scatter plot of',len(daily_returns),'returns vs',len(predictions),'predictions using a filter of length',len(alpha))
                                    ^^
C:255,2:show_predictions: Comma not followed by a space
  (ax,fig)=plot(predictions,daily_returns[len(alpha):],s='bo',xtn='.PNG')
     ^^
C:255,3:show_predictions: Invalid name "ax" (should match [a-z_][a-z0-9_]{2,30}$)
C:261,2:show_predictions: Comma not followed by a space
  (ax,fig)=plot(bigs,true_bigs,s='r.',xtn='.PNG')
     ^^
C:261,3:show_predictions: Invalid name "ax" (should match [a-z_][a-z0-9_]{2,30}$)
C:263,2:show_predictions: Comma not followed by a space
  return (predictions,daily_returns,bigs,true_bigs,big_mask)
                     ^^
W:239,47:show_predictions: Unused argument 'xtn'
************* Module tagim.tg.ai_ngrams
W: 12,0: Uses of a deprecated module 'string'
C: 16,0:memo: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C: 16,9:memo: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C: 19,4:memo.fmemo: Missing docstring
C: 38,17:segment: More than one statement on a single line
C: 39,4:segment: Comma not followed by a space
    candidates = ([first]+segment(rem) for first,rem in splits(text))
                                                ^^
C: 42,0:splits: Invalid name "L" (should match [a-z_][a-z0-9_]{2,30}$)
C: 42,17:splits: Invalid name "L" (should match [a-z_][a-z0-9_]{2,30}$)
C: 47,0:Pwords: Invalid name "Pwords" (should match [a-z_][a-z0-9_]{2,30}$)
C: 62,8:Pdist.__init__: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
W: 59,32:Pdist.__init__: Redefining name 'N' from outer scope (line 77)
W: 59,4:Pdist.__init__: Dangerous default value [] as argument
C: 59,4:Pdist.__init__: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
W: 59,4:Pdist.__init__: __init__ method from base class 'dict' is not called
C: 59,32:Pdist.__init__: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C: 60,8:Pdist.__init__: Comma not followed by a space
        for key,count in data:
               ^^
C: 65,24:Pdist.__call__: More than one statement on a single line
W: 73,26:avoid_long_words: Redefining name 'N' from outer scope (line 77)
C: 73,0:avoid_long_words: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C: 73,26:avoid_long_words: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C: 79,0: Invalid name "Pw" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 83,0:cPw: Invalid name "cPw" (should match [a-z_][a-z0-9_]{2,30}$)
C: 90,0: Invalid name "P2w" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 95,17:segment2: More than one statement on a single line
C:100,0:combine: Invalid name "Pfirst" (should match [a-z_][a-z0-9_]{2,30}$)
C:100,0:combine: Invalid name "Prem" (should match [a-z_][a-z0-9_]{2,30}$)
C:100,12:combine: Invalid name "Pfirst" (should match [a-z_][a-z0-9_]{2,30}$)
C:100,28:combine: Invalid name "Prem" (should match [a-z_][a-z0-9_]{2,30}$)
C:110,0:ul: Invalid name "ul" (should match [a-z_][a-z0-9_]{2,30}$)
C:110,0:ul: Missing docstring
C:110,14:ul: More than one statement on a single line
C:112,0: Invalid name "alphabet" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:114,0:shift: Invalid name "n" (should match [a-z_][a-z0-9_]{2,30}$)
C:114,15:shift: Invalid name "n" (should match [a-z_][a-z0-9_]{2,30}$)
C:118,0:logPwords: Invalid name "logPwords" (should match [a-z_][a-z0-9_]{2,30}$)
C:120,31:logPwords: More than one statement on a single line
C:132,0:shift2: Invalid name "n" (should match [a-z_][a-z0-9_]{2,30}$)
C:132,16:shift2: Invalid name "n" (should match [a-z_][a-z0-9_]{2,30}$)
C:143,4:decode_shift2: Invalid name "p" (should match [a-z_][a-z0-9_]{2,30}$)
W:143,4:decode_shift2: Unused variable 'p'
C:148,0:logP3letters: Invalid name "logP3letters" (should match [a-z_][a-z0-9_]{2,30}$)
C:152,0:ngrams: Invalid name "n" (should match [a-z_][a-z0-9_]{2,30}$)
C:152,16:ngrams: Invalid name "n" (should match [a-z_][a-z0-9_]{2,30}$)
C:156,0: Invalid name "P3l" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:157,0: Invalid name "P2l" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:159,0:hillclimb: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:159,0:hillclimb: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:159,14:hillclimb: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:159,17:hillclimb: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:161,4:hillclimb: Invalid name "fx" (should match [a-z_][a-z0-9_]{2,30}$)
C:164,8:hillclimb: Invalid name "x2" (should match [a-z_][a-z0-9_]{2,30}$)
C:167,12:hillclimb: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:167,15:hillclimb: Invalid name "fx" (should match [a-z_][a-z0-9_]{2,30}$)
C:169,18:hillclimb: More than one statement on a single line
W:163,8:hillclimb: Unused variable 'i'
C:172,0: Invalid name "debugging" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:180,4:decode_subst: Invalid name "p" (should match [a-z_][a-z0-9_]{2,30}$)
W:180,4:decode_subst: Unused variable 'p'
C:189,0: Invalid name "cat" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:193,4:neighboring_msgs.swap: Comma not followed by a space
    def swap(a,b): return msg.translate(string.maketrans(a+b, b+a))
              ^^
C:193,4:neighboring_msgs.swap: Invalid name "a" (should match [a-z_][a-z0-9_]{2,30}$)
C:193,4:neighboring_msgs.swap: Invalid name "b" (should match [a-z_][a-z0-9_]{2,30}$)
C:193,4:neighboring_msgs.swap: Missing docstring
C:193,13:neighboring_msgs.swap: Invalid name "a" (should match [a-z_][a-z0-9_]{2,30}$)
C:193,15:neighboring_msgs.swap: Invalid name "b" (should match [a-z_][a-z0-9_]{2,30}$)
C:193,19:neighboring_msgs.swap: More than one statement on a single line
C:195,8:neighboring_msgs: Comma not followed by a space
        b1,b2 = bigram
          ^^
C:195,8:neighboring_msgs: Invalid name "b1" (should match [a-z_][a-z0-9_]{2,30}$)
C:195,11:neighboring_msgs: Invalid name "b2" (should match [a-z_][a-z0-9_]{2,30}$)
C:196,12:neighboring_msgs: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:197,12:neighboring_msgs: Operator not preceded by a space
            if b1==b2:
                 ^^
C:198,16:neighboring_msgs: Comma not followed by a space
                if P2l(c+c) > P2l(bigram): yield swap(c,b1)
                                                       ^^
C:198,43:neighboring_msgs: More than one statement on a single line
C:200,16:neighboring_msgs: Comma not followed by a space
                if P2l(c+b2) > P2l(bigram): yield swap(c,b1)
                                                        ^^
C:200,44:neighboring_msgs: More than one statement on a single line
C:201,16:neighboring_msgs: Comma not followed by a space
                if P2l(b1+c) > P2l(bigram): yield swap(c,b2)
                                                        ^^
C:201,44:neighboring_msgs: More than one statement on a single line
C:211,0:correct: Invalid name "w" (should match [a-z_][a-z0-9_]{2,30}$)
C:211,12:correct: Invalid name "w" (should match [a-z_][a-z0-9_]{2,30}$)
C:214,4:correct: Comma not followed by a space
    c, edit = max(candidates, key=lambda (c,e): Pedit(e) * Pw(c))
                                           ^^
C:214,4:correct: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
W:214,7:correct: Unused variable 'edit'
C:217,0:Pedit: Invalid name "Pedit" (should match [a-z_][a-z0-9_]{2,30}$)
C:219,19:Pedit: More than one statement on a single line
C:222,0: Invalid name "p_spell_error" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:224,0: Invalid name "P1edit" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:226,0:edits: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:226,16:edits: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
W:229,26:edits.editsR: Redefining name 'edits' from outer scope (line 226)
C:229,4:edits.editsR: Invalid name "editsR" (should match [a-z_][a-z0-9_]{2,30}$)
C:229,4:edits.editsR: Invalid name "hd" (should match [a-z_][a-z0-9_]{2,30}$)
C:229,4:edits.editsR: Invalid name "tl" (should match [a-z_][a-z0-9_]{2,30}$)
C:229,4:edits.editsR: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:229,4:edits.editsR: Missing docstring
C:229,15:edits.editsR: Invalid name "hd" (should match [a-z_][a-z0-9_]{2,30}$)
C:229,19:edits.editsR: Invalid name "tl" (should match [a-z_][a-z0-9_]{2,30}$)
C:229,23:edits.editsR: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:230,8:edits.editsR.ed: Comma not followed by a space
        def ed(L,R): return edits+[R+'|'+L]
                ^^
C:230,8:edits.editsR.ed: Invalid name "ed" (should match [a-z_][a-z0-9_]{2,30}$)
C:230,8:edits.editsR.ed: Invalid name "L" (should match [a-z_][a-z0-9_]{2,30}$)
C:230,8:edits.editsR.ed: Invalid name "R" (should match [a-z_][a-z0-9_]{2,30}$)
C:230,8:edits.editsR.ed: Missing docstring
C:230,15:edits.editsR.ed: Invalid name "L" (should match [a-z_][a-z0-9_]{2,30}$)
C:230,17:edits.editsR.ed: Invalid name "R" (should match [a-z_][a-z0-9_]{2,30}$)
C:230,21:edits.editsR.ed: More than one statement on a single line
C:231,8:edits.editsR: Invalid name "C" (should match [a-z_][a-z0-9_]{2,30}$)
C:233,12:edits.editsR: Invalid name "e" (should match [a-z_][a-z0-9_]{2,30}$)
C:234,33:edits.editsR: More than one statement on a single line
C:236,19:edits.editsR: More than one statement on a single line
C:238,8:edits.editsR: Invalid name "p" (should match [a-z_][a-z0-9_]{2,30}$)
C:240,12:edits.editsR: Invalid name "h" (should match [a-z_][a-z0-9_]{2,30}$)
C:242,19:edits.editsR: More than one statement on a single line
C:245,12:edits.editsR: Invalid name "h" (should match [a-z_][a-z0-9_]{2,30}$)
W: 12,0: Unused import glob
W: 13,0: Unused import defaultdict
************* Module tagim.tg.tagim
C:  6,0: Line too long (131/80)
C: 27,0: Line too long (428/80)
C: 31,0: Line too long (98/80)
W: 34,0: Unnecessary semicolon
W: 49,0: Unnecessary semicolon
C: 57,0: Line too long (141/80)
C: 63,0: Line too long (125/80)
C: 64,0: Line too long (504/80)
C: 67,0: Line too long (102/80)
C: 68,0: Line too long (111/80)
C: 69,0: Line too long (110/80)
C: 70,0: Line too long (124/80)
C: 78,0: Line too long (82/80)
C: 88,0: Line too long (141/80)
C: 89,0: Line too long (121/80)
C: 91,0: Line too long (130/80)
C: 93,0: Line too long (131/80)
C: 95,0: Line too long (131/80)
C: 96,0: Line too long (94/80)
C: 97,0: Line too long (113/80)
C: 98,0: Line too long (181/80)
C:100,0: Line too long (116/80)
C:101,0: Line too long (172/80)
C:102,0: Line too long (121/80)
C:103,0: Line too long (101/80)
C:105,0: Line too long (312/80)
C:108,0: Line too long (89/80)
C:109,0: Line too long (87/80)
C:110,0: Line too long (90/80)
C:113,0: Line too long (83/80)
C:115,0: Line too long (85/80)
C:151,0: Line too long (81/80)
C:158,0: Line too long (118/80)
C:161,0: Line too long (103/80)
C:165,0: Line too long (133/80)
C:167,0: Line too long (128/80)
C:168,0: Line too long (106/80)
C:169,0: Line too long (235/80)
C:170,0: Line too long (112/80)
C:171,0: Line too long (101/80)
C:172,0: Line too long (103/80)
C:174,0: Line too long (111/80)
C:175,0: Line too long (238/80)
C:176,0: Line too long (81/80)
C:178,0: Line too long (166/80)
C:179,0: Line too long (216/80)
C:180,0: Line too long (128/80)
C:182,0: Line too long (128/80)
C:183,0: Line too long (257/80)
C:228,0: Line too long (146/80)
C:229,0: Line too long (112/80)
C:246,0: Line too long (117/80)
C:258,0: Line too long (87/80)
C:259,0: Line too long (171/80)
C:263,0: Line too long (113/80)
C:271,0: Line too long (126/80)
C:273,0: Line too long (136/80)
C:274,0: Line too long (107/80)
C:282,0: Line too long (99/80)
C:284,0: Line too long (111/80)
C:285,0: Line too long (82/80)
C:287,0: Line too long (138/80)
C:288,0: Line too long (111/80)
C:302,0: Line too long (149/80)
C:308,0: Line too long (114/80)
C:318,0: Line too long (110/80)
C:322,0: Line too long (87/80)
C:330,0: Line too long (87/80)
C:331,0: Line too long (94/80)
C:338,0: Line too long (82/80)
C:342,0: Line too long (101/80)
C:352,0: Line too long (133/80)
C:383,0: Line too long (121/80)
C:384,0: Line too long (121/80)
C:406,0: Line too long (124/80)
C:407,0: Line too long (124/80)
C:421,0: Line too long (98/80)
C:424,0: Line too long (83/80)
C:429,0: Line too long (86/80)
C:430,0: Line too long (175/80)
C:443,0: Line too long (101/80)
C:449,0: Line too long (116/80)
C:454,0: Line too long (90/80)
C:456,0: Line too long (149/80)
C:457,0: Line too long (154/80)
C:458,0: Line too long (93/80)
C:462,0: Line too long (124/80)
C:490,0: Line too long (124/80)
C:497,0: Line too long (110/80)
C:500,0: Line too long (137/80)
C:512,0: Line too long (105/80)
C:524,0: Line too long (126/80)
C:535,0: Line too long (108/80)
C:538,0: Line too long (119/80)
C:539,0: Line too long (129/80)
C:542,0: Line too long (81/80)
C:548,0: Line too long (90/80)
C:549,0: Line too long (86/80)
C:552,0: Line too long (88/80)
C:553,0: Line too long (90/80)
C:559,0: Line too long (90/80)
C:560,0: Line too long (86/80)
C:574,0: Line too long (90/80)
C:581,0: Line too long (95/80)
C:582,0: Line too long (110/80)
C:590,0: Line too long (95/80)
C:592,0: Line too long (83/80)
C:593,0: Line too long (120/80)
C:600,0: Line too long (96/80)
C:602,0: Line too long (105/80)
C:610,0: Line too long (129/80)
C:611,0: Line too long (100/80)
C:612,0: Line too long (145/80)
C:617,0: Line too long (197/80)
C:626,0: Line too long (81/80)
C:634,0: Line too long (93/80)
C:637,0: Line too long (98/80)
C:639,0: Line too long (114/80)
C:644,0: Line too long (197/80)
C:650,0: Line too long (85/80)
C:652,0: Line too long (87/80)
C:654,0: Line too long (125/80)
C:656,0: Line too long (86/80)
C:657,0: Line too long (108/80)
C:663,0: Line too long (85/80)
C:665,0: Line too long (140/80)
C:679,0: Line too long (123/80)
C:703,0: Line too long (94/80)
C:712,0: Line too long (94/80)
C:762,0: Line too long (96/80)
W: 22,0: TODO:
W: 90,0: TODO: these belong in a public database and are probably unnecessary
W:103,0: TODO: this belongs in a database based on previously processed and bylined photos for an individual
W:318,0: TODO: need to trigger these warnings or messages only when "verbose" or "debug" global option is set
W:329,0: TODO: altitude
W:341,0: TODO: process altitude
W:454,0: TODO: does this just duplicate the assert statement with more verbosity?
W:574,0: TODO: gnome gconf settings don't match the path to DBG_PATH, but this works anyway, why?
W:592,0: TODO use tg.utils.find_in_files or shutil or similar instead of cat and grep:
W:598,0: TODO use tg.utils.replace_in_file instead of sed:
W:615,0: TODO: use shutils python module instead of linux bash shell command
W:652,0: TODO: use python functions in utils.replace_in_file or shutil instead of sed/tail
W:661,0: TODO: this no longer seems to work, in the latest Ubuntu
C: 48,0: Invalid name "version" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 49,0: Comma not followed by a space
(user,home) = tg.user_home();
     ^^
C: 49,1: Invalid name "user" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 49,6: Invalid name "home" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 91,0: Operator not followed by a space
EXIF_orientation_name    =[None , 'top left' , 'top rght', 'btm rght', 'btm left', 'left top', 'rght top', 'rght btm', 'left btm']
                         ^
C: 91,0: Invalid name "EXIF_orientation_name" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 93,0: Operator not followed by a space
EXIF_orientation_angle   =[None ,      0     ,     0     ,     180   ,    180    ,     90    ,     90    ,    270    ,     270   ]
                         ^
C: 93,0: Invalid name "EXIF_orientation_angle" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 95,0: Operator not followed by a space
EXIF_orientation_flip    =[None ,      0     ,     1     ,      0   ,      1     ,      2    ,      0    ,     2     ,      0    ]
                         ^
C: 95,0: Invalid name "EXIF_orientation_flip" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 97,0: Comma not followed by a space
EXIF_orientation_makes  = [['CANON','NIKON','OLYMPUS OPTICAL CO.,LTD'],['CANON','KODAK','SONY','PENTAX', 'HTC']]
                                   ^^
C: 97,0: Invalid name "EXIF_orientation_makes" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 98,0: Comma not followed by a space
EXIF_orientation_models  = [['Canon PowerShot S300','COOLPIX L18','C740UZ'],['Canon EOS 450D','KODAK EASYSHARE M863 DIGITAL CAMERA','DSC-W80','PENTAX K10D', 'Android Dev Phone 1']]
                                                   ^^
C: 98,0: Invalid name "EXIF_orientation_models" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:100,0: Comma not followed by a space
EXIF_gps_makes  = [['CANON','NIKON','OLYMPUS OPTICAL CO.,LTD','CANON','KODAK','SONY','PENTAX Corporation'],['HTC']]
                           ^^
C:100,0: Invalid name "EXIF_gps_makes" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:101,0: Comma not followed by a space
EXIF_gps_models  = [['Canon PowerShot S300','COOLPIX L18','C740UZ','Canon EOS 450D','KODAK EASYSHARE M863 DIGITAL CAMERA','DSC-W80','PENTAX K10D'],['Android Dev Phone 1']]
                                           ^^
C:101,0: Invalid name "EXIF_gps_models" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:105,0: Comma not followed by a space
model_byline = {'Canon PowerShot S300':['Hobson','Larissa'],'COOLPIX L18':['Catherine','Larissa','Hobson'],'C740UZ':['Diane','Hobson','Larissa'],'Canon EOS 450D':['Larissa','Hobson','Diane'],'KODAK EASYSHARE M863 DIGITAL CAMERA':['Hobson','Larissa'],'DSC-W80':['Hobson','Carlana','Dewey'],'PENTAX K10D':['Ryan']}
                                                ^^
C:105,0: Invalid name "model_byline" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:119,0:rotate_image: Comma not followed by a space
def rotate_image(filename,angle=0.0,resample='bicubic',expand=True,flip=0):
                         ^^
C:139,4:rotate_image: Comma not followed by a space
    if not angle and flip not in [1,2]:
                                   ^^
C:141,4:rotate_image: Operator not preceded by a space
    angle=float(angle)
         ^
C:142,4:rotate_image: Invalid name "im" (should match [a-z_][a-z0-9_]{2,30}$)
C:145,4:rotate_image: Operator not preceded by a space
    if resample==Image.NEAREST  or resample.lower().strip()=='nearest':
               ^^
C:146,8:rotate_image: Operator not preceded by a space
        resample=Image.NEAREST
                ^
C:147,9:rotate_image: Operator not preceded by a space
    elif resample==Image.BILINEAR or resample.lower().strip()=='bilinear':
                 ^^
C:148,8:rotate_image: Operator not preceded by a space
        resample=Image.BILINEAR
                ^
C:150,8:rotate_image: Operator not preceded by a space
        resample=Image.BICUBIC
                ^
C:153,8:rotate_image: Operator not preceded by a space
        im3=Image.open(filename)
           ^
C:154,8:rotate_image: Comma not followed by a space
        im3.rotate(-1*angle,resample=resample,expand=expand).save(filename)
                           ^^
C:155,4:rotate_image: Comma not followed by a space
    if flip in [1,2]:
                 ^^
C:156,8:rotate_image: Operator not preceded by a space
        im4=Image.open(filename)
           ^
C:174,8:rotate_image: Comma not followed by a space
        if EXIF_orientation_angle[int(im2['Exif.Image.Orientation'].value)] not in [angle,angle-360,angle+360]:
                                                                                         ^^
C:177,12:rotate_image: Comma not followed by a space
            hv_text = [ '','horizontally','vertically']
                          ^^
C:186,0:unicode_noerr: Comma not followed by a space
def unicode_noerr(s,errors='replace'):
                   ^^
C:186,0:unicode_noerr: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:186,18:unicode_noerr: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:192,25:unicode_noerr: More than one statement on a single line
C:193,9:unicode_noerr: Comma not followed by a space
    elif type(s)==str: return s.decode('UTF-8',errors=errors)
                                              ^^
C:193,23:unicode_noerr: More than one statement on a single line
C:196,0:str_noerr: Comma not followed by a space
def str_noerr(s,errors='replace'):
               ^^
C:196,0:str_noerr: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:196,14:str_noerr: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:202,21:str_noerr: More than one statement on a single line
C:203,9:str_noerr: Comma not followed by a space
    elif type(s)==unicode: return s.encode('UTF-8',errors=errors)
                                                  ^^
C:203,27:str_noerr: More than one statement on a single line
C:207,0:display_meta: Invalid name "im" (should match [a-z_][a-z0-9_]{2,30}$)
C:207,0:display_meta: Missing docstring
C:207,17:display_meta: Invalid name "im" (should match [a-z_][a-z0-9_]{2,30}$)
C:209,4:display_meta: Comma not followed by a space
    for name,keys in keysets.items():
            ^^
C:210,8:display_meta: Operator not followed by a space
        title = ' %s Data '%name
                           ^
C:213,12:display_meta: Comma not followed by a space
            print '{0}: {1}'.format(stringifier(k),stringifier(im[k].value))
                                                  ^^
C:220,0:display_meta_str: Invalid name "im" (should match [a-z_][a-z0-9_]{2,30}$)
C:220,0:display_meta_str: Missing docstring
C:220,21:display_meta_str: Invalid name "im" (should match [a-z_][a-z0-9_]{2,30}$)
C:223,0:display_meta_ascii: Invalid name "im" (should match [a-z_][a-z0-9_]{2,30}$)
C:223,0:display_meta_ascii: Missing docstring
C:223,23:display_meta_ascii: Invalid name "im" (should match [a-z_][a-z0-9_]{2,30}$)
C:226,0:extract_tags: Missing docstring
C:227,4:extract_tags: Operator not preceded by a space
    comment_string=comment_string.strip()
                  ^
C:229,4:extract_tags: Operator not preceded by a space
    mo=re.search(r'(.*)(\n*Tags:\s*)(.*)(\n*.*)',comment_string) #(1).split(' ') #,flags=re.IGNORECASE).group(1)
      ^
C:229,4:extract_tags: Invalid name "mo" (should match [a-z_][a-z0-9_]{2,30}$)
C:230,4:extract_tags: Operator not preceded by a space
    tags=[]
        ^
C:232,8:extract_tags: Comma not followed by a space
        return (tags,comment_string)
                    ^^
C:233,4:extract_tags: Operator not preceded by a space
    groups=mo.groups()
          ^
C:239,4:extract_tags: Comma not followed by a space
    return (tags,comment_without_tags)
                ^^
C:241,0:deg2dms: Missing docstring
C:243,4:deg2dms: Comma not followed by a space
    assert isinstance(deg,float)
                         ^^
C:245,4:deg2dms: Operator not preceded by a space
    assert neg==True or neg==False
              ^^
C:246,4:deg2dms: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:247,4:deg2dms: Operator not preceded by a space
    assert d>=0
            ^^
C:248,4:deg2dms: Operator not preceded by a space
    assert d<=abs(float(deg))
            ^^
C:249,4:deg2dms: Comma not followed by a space
    assert isinstance(d,int)
                       ^^
C:250,4:deg2dms: Invalid name "m" (should match [a-z_][a-z0-9_]{2,30}$)
C:251,4:deg2dms: Comma not followed by a space
    assert isinstance(m,int)
                       ^^
C:252,4:deg2dms: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:253,4:deg2dms: Comma not followed by a space
    assert isinstance(s,float)
                       ^^
C:255,8:deg2dms: Operator not preceded by a space
        d=-d
         ^
C:255,8:deg2dms: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:256,8:deg2dms: Operator not preceded by a space
        m=-m
         ^
C:256,8:deg2dms: Invalid name "m" (should match [a-z_][a-z0-9_]{2,30}$)
C:257,8:deg2dms: Operator not preceded by a space
        s=-s
         ^
C:257,8:deg2dms: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:259,4:deg2dms: Comma not followed by a space
    assert abs( s/3600.0 + m/60.0 + d - deg) < 1e-3, "abs( (s)/3600.0 + {m}/60.0 + {d} + {deg}) = {val} !< 1e-3".format(s=s,m=m,d=d,deg=deg,val=abs(s/3600.0+m/60.0+d-deg))
                                                                                                                           ^^
C:260,4:deg2dms: Comma not followed by a space
    return (d,m,s)
             ^^
C:264,0:rationalize_float: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:264,0:rationalize_float: Missing docstring
C:264,22:rationalize_float: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:269,4:rationalize_float: Operator not preceded by a space
    assert num>=0, "{num}>=0".format(num=num)
              ^^
C:272,8:rationalize_float: Comma not followed by a space
        return(0,1)
                ^^
C:278,4:rationalize_float: Operator not preceded by a space
    assert num>=0, "{num}>=0".format(num=num)
              ^^
C:280,4:rationalize_float: Operator not preceded by a space
    assert den>0, "{den}>0".format(den=den)
              ^
C:289,4:rationalize_float: Comma not followed by a space
    return (int(round(num)),int(round(den)))
                           ^^
C:291,0:exif_gps_rationalize: Missing docstring
C:295,4:exif_gps_rationalize: Operator not preceded by a space
    assert deg==abs(deg), "{deg}==abs({deg})".format(deg=deg)
              ^^
C:296,4:exif_gps_rationalize: Comma not followed by a space
    (d,m,s)=deg2dms(deg)
      ^^
C:296,5:exif_gps_rationalize: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:296,7:exif_gps_rationalize: Invalid name "m" (should match [a-z_][a-z0-9_]{2,30}$)
C:296,9:exif_gps_rationalize: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:297,4:exif_gps_rationalize: Operator not preceded by a space
    assert d==int(d), "{d}==int({d})".format(d=d)
            ^^
C:298,4:exif_gps_rationalize: Operator not preceded by a space
    assert m==int(m), "{m}==int({m})".format(m=m)
            ^^
C:306,4:exif_gps_rationalize: Comma not followed by a space
    (s_num,s_den)= rationalize_float(s)
          ^^
C:308,4:exif_gps_rationalize: Comma not followed by a space
    return  ("{d}/1 {m}/1 {s}/{den}".format(d=int(round(d)),m=int(round(m)),s=int(round(s_num)),den=s_den), isneg)
                                                           ^^
C:310,0:location2latlon: Missing docstring
C:313,4:location2latlon: Invalid name "mo" (should match [a-z_][a-z0-9_]{2,30}$)
C:315,8:location2latlon: Invalid name "p" (should match [a-z_][a-z0-9_]{2,30}$)
C:334,12:location2latlon: Comma not followed by a space
            return (None,None,None)
                        ^^
C:335,4:location2latlon: Comma not followed by a space
    return (lat,lon,alt)
               ^^
C:337,0:latlon2exif: Comma not followed by a space
def latlon2exif(lat,lon,alt=0.0):
                   ^^
C:337,0:latlon2exif: Missing docstring
W:337,24:latlon2exif: Unused argument 'alt'
C:366,4:deg2dm: Comma not followed by a space
    sgn = copysign(1.,decimal_degrees)
                     ^^
E:366,10:deg2dm: Undefined variable 'copysign'
E:369,21:deg2dm: Undefined variable 'minutes'
W:368,4:deg2dm: Unused variable 'decmial_minutes'
C:371,0:latlon2pyexiv2: Comma not followed by a space
def latlon2pyexiv2(lat_deg,lon_deg):
                          ^^
C:371,0:latlon2pyexiv2: Missing docstring
C:372,4:latlon2pyexiv2: Comma not followed by a space
    (d1,m1,sgn1) = deg2dm(lat_deg)
       ^^
C:372,5:latlon2pyexiv2: Invalid name "d1" (should match [a-z_][a-z0-9_]{2,30}$)
C:372,8:latlon2pyexiv2: Invalid name "m1" (should match [a-z_][a-z0-9_]{2,30}$)
C:377,4:latlon2pyexiv2: Comma not followed by a space
    (d2,m2,sgn2) = deg2dm(lon_deg)
       ^^
C:377,5:latlon2pyexiv2: Invalid name "d2" (should match [a-z_][a-z0-9_]{2,30}$)
C:377,8:latlon2pyexiv2: Invalid name "m2" (should match [a-z_][a-z0-9_]{2,30}$)
C:383,4:latlon2pyexiv2: Comma not followed by a space
    lat = pyexiv2.GPSCoordinate.from_string('{0:2d},{1:2.4d}{2:1s}'.format(d1,m1,chr(sgn1*(ord('N')-ord('S'))+ord('N'))))
                                                                             ^^
C:384,4:latlon2pyexiv2: Comma not followed by a space
    lon = pyexiv2.GPSCoordinate.from_string('{0:2d},{1:2.4d}{2:1s}'.format(d2,m2,chr(sgn2*(ord('E')-ord('W'))+ord('E'))))
                                                                             ^^
C:385,4:latlon2pyexiv2: Comma not followed by a space
    return (lat,lon)
               ^^
E:402,14:set_gps_location: Undefined variable 'to_deg'
E:403,14:set_gps_location: Undefined variable 'to_deg'
C:406,4:set_gps_location: Comma not followed by a space
    exiv_lat = (pyexiv2.Rational(lat_deg[0]*60+lat_deg[1],60),pyexiv2.Rational(lat_deg[2]*100,6000), pyexiv2.Rational(0, 1))
                                                         ^^
C:407,4:set_gps_location: Comma not followed by a space
    exiv_lng = (pyexiv2.Rational(lng_deg[0]*60+lng_deg[1],60),pyexiv2.Rational(lng_deg[2]*100,6000), pyexiv2.Rational(0, 1))
                                                         ^^
E:409,17:set_gps_location: Module 'pyexiv2' has no 'Image' member
E:409,31:set_gps_location: Undefined variable 'file_name'
W:410,4:set_gps_location: Unused variable 'exif_keys'
C:422,0:exif_gps_strings: Missing docstring
C:423,4:exif_gps_strings: Operator not preceded by a space
    loctuple=location2latlon(location_string)
            ^
C:426,4:exif_gps_strings: Comma not followed by a space
    return latlon2exif(loctuple[0],loctuple[1],loctuple[2])
                                  ^^
C:428,0:exif_unrationalize_gps: Missing docstring
C:435,4:exif_unrationalize_gps: Comma not followed by a space
    for i,label in enumerate(EXIF_GPS_POS_LABELS):
         ^^
C:441,8:exif_unrationalize_gps: Comma not followed by a space
        v_array = re.findall(r'[-+0-9]+',gps_exif_dict[label])
                                        ^^
C:443,8:exif_unrationalize_gps: Operator not preceded by a space
        assert 6==len(v_array), "6=={lenv}==len({v_array})".format(lenv=len(v_array),v_array=v_array)
                ^^
C:446,8:exif_unrationalize_gps: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:447,12:exif_unrationalize_gps: Invalid name "v" (should match [a-z_][a-z0-9_]{2,30}$)
C:450,12:exif_unrationalize_gps: Operator not preceded by a space
            if odd>0:
                  ^
C:451,16:exif_unrationalize_gps: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:462,12:exif_unrationalize_gps: Comma not followed by a space
            print 'v,numerator,multiplier,toggle,adder,value',v,f,multiplier,odd,f,'/',float(v),'/',multiplier,values[label]
                                                             ^^
W:435,8:exif_unrationalize_gps: Unused variable 'i'
C:466,0:parse_date: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:466,0:parse_date: Missing docstring
C:466,15:parse_date: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:470,4:parse_date: Operator not preceded by a space
    mo=DATETIME_PATTERN.match(s)
      ^
C:470,4:parse_date: Invalid name "mo" (should match [a-z_][a-z0-9_]{2,30}$)
C:472,8:parse_date: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C:475,16:parse_date: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C:480,8:parse_date: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C:482,8:parse_date: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:483,8:parse_date: Invalid name "h" (should match [a-z_][a-z0-9_]{2,30}$)
C:484,8:parse_date: Invalid name "m" (should match [a-z_][a-z0-9_]{2,30}$)
C:486,8:parse_date: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:487,8:parse_date: Invalid name "us" (should match [a-z_][a-z0-9_]{2,30}$)
C:488,8:parse_date: Comma not followed by a space
        return datetime(y,mon,d,h,m,s,us)
                         ^^
C:493,0:set_image_path: Missing docstring
C:503,0:exif2latlon: Missing docstring
C:505,8:exif2latlon: Comma not followed by a space
        return (None,None,None)
                    ^^
C:508,8:exif2latlon: Comma not followed by a space
        return (None,None,None)
                    ^^
C:511,12:exif2latlon: Comma not followed by a space
            return (None,None,None)
                        ^^
C:512,4:exif2latlon: Comma not followed by a space
    return (values[EXIF_GPS_POS_LABELS[0]],values[EXIF_GPS_POS_LABELS[1]],values[EXIF_GPS_POS_LABELS[2]])
                                          ^^
W:509,8:exif2latlon: Unused variable 'i'
R:514,0:test_gps: Too many local variables (17/15)
C:514,0:test_gps: Missing docstring
C:526,8:test_gps: Invalid name "t" (should match [a-z_][a-z0-9_]{2,30}$)
C:528,8:test_gps: Comma not followed by a space
        (lat,lon,alt)=location2latlon(t)
            ^^
C:529,8:test_gps: Comma not followed by a space
        r = latlon2exif(lat,lon,alt)
                           ^^
C:529,8:test_gps: Invalid name "r" (should match [a-z_][a-z0-9_]{2,30}$)
W:532,12:test_gps: Unreachable code
C:533,8:test_gps: Comma not followed by a space
        for k,v in r.items():
             ^^
C:533,14:test_gps: Invalid name "v" (should match [a-z_][a-z0-9_]{2,30}$)
C:534,12:test_gps: Comma not followed by a space
            print "    {k} => '{v}'".format(k=k,v=v)
                                               ^^
C:543,8:test_gps: Comma not followed by a space
        (lat1,lon1,alt1)=exif2latlon(r) # WARN sign is corrupted by this point
             ^^
C:544,8:test_gps: Operator not preceded by a space
        assert lat1<=  90.0
                   ^^
C:545,8:test_gps: Operator not preceded by a space
        assert lat1>= -90.0
                   ^^
C:546,8:test_gps: Operator not preceded by a space
        assert lon1<= 180.0
                   ^^
C:547,8:test_gps: Operator not preceded by a space
        assert lon1>=-180.0
                   ^^
C:548,8:test_gps: Comma not followed by a space
        assert abs(lat-lat1)<1e-6, "lat: abs({lat}-{lat1})<1e-6".format(lat=lat,lat1=lat1)
                                                                               ^^
C:549,8:test_gps: Comma not followed by a space
        assert abs(lon-lon1)<1e-6, "lon: abs(lon-lon1)<1e-6".format(lon=lon,lon1=lon1)
                                                                           ^^
C:550,8:test_gps: Operator not preceded by a space
        assert alt==alt1
                  ^^
C:552,8:test_gps: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:554,8:test_gps: Comma not followed by a space
        (lat2,lon2,alt2)=exif2latlon(s)
             ^^
C:555,8:test_gps: Operator not preceded by a space
        assert lat2<=  90.0
                   ^^
C:556,8:test_gps: Operator not preceded by a space
        assert lat2>= -90.0
                   ^^
C:557,8:test_gps: Operator not preceded by a space
        assert lon2<= 180.0
                   ^^
C:558,8:test_gps: Operator not preceded by a space
        assert lon2>=-180.0
                   ^^
C:559,8:test_gps: Comma not followed by a space
        assert abs(lat-lat2)<1e-6, "lat: abs({lat}-{lat2})<1e-6".format(lat=lat,lat2=lat2)
                                                                               ^^
C:560,8:test_gps: Comma not followed by a space
        assert abs(lon-lon2)<1e-6, "lon: abs(lon-lon2)<1e-6".format(lon=lon,lon2=lon2)
                                                                           ^^
C:561,8:test_gps: Operator not preceded by a space
        assert alt1==alt2
                   ^^
C:569,8:test_gps: Invalid name "t" (should match [a-z_][a-z0-9_]{2,30}$)
C:571,8:test_gps: Invalid name "r" (should match [a-z_][a-z0-9_]{2,30}$)
W:538,8:test_gps: Unused variable 'v_dict'
W:579,4:shuffle_background_photo: Redefining name 'commands' from outer scope (line 45)
C:575,0:shuffle_background_photo: Missing docstring
C:577,4:shuffle_background_photo: Comma not followed by a space
    dbg_log_file = open(DBG_LOG_PATH,mode='a')
                                    ^^
C:578,4:shuffle_background_photo: Comma not followed by a space
    db_log_file = open(DB_LOG_PATH,mode='a')
                                  ^^
W:579,4:shuffle_background_photo: Reimport 'commands' (imported line 45)
C:581,8:shuffle_background_photo: Comma not followed by a space
        shutil.copy(os.path.realpath(image),DBG_PATH) # overwrite the existing background image
                                           ^^
C:590,4:shuffle_background_photo: Comma not followed by a space
    msg = "{0}:{1}:\n  Starting desktop background random selection.".format(__file__,__name__)
                                                                                     ^^
C:593,12:shuffle_background_photo: Invalid name "PHOTOCOUNT" (should match [a-z_][a-z0-9_]{2,30}$)
C:595,4:shuffle_background_photo: Invalid name "RANDPHOTOPATH" (should match [a-z_][a-z0-9_]{2,30}$)
C:599,16:shuffle_background_photo: Invalid name "RANDPHOTOPATH" (should match [a-z_][a-z0-9_]{2,30}$)
C:601,4:shuffle_background_photo: Comma not followed by a space
    shutil.copy(RANDPHOTOPATH,DBG_PATH)
                             ^^
W:616,4:update_image_catalog: Redefining name 'commands' from outer scope (line 45)
C:614,0:update_image_catalog: Missing docstring
W:616,4:update_image_catalog: Reimport 'commands' (imported line 45)
C:619,4:update_image_catalog: Comma not followed by a space
    status,output = commands.getstatusoutput(command)
          ^^
W:619,11:update_image_catalog: Unused variable 'output'
C:626,0:set_splash_background: Comma not followed by a space
def set_splash_background(image='',ubuntu_splash_conf=UBUNTU_SPLASH_CONFIG_PATH):
                                  ^^
W:628,4:set_splash_background: Redefining name 'tg' from outer scope (line 34)
C:626,0:set_splash_background: Missing docstring
C:630,4:set_splash_background: Comma not followed by a space
    dbg_log_file = open(DBG_LOG_PATH,mode='a')
                                    ^^
C:633,8:set_splash_background: Invalid name "EOL" (should match [a-z_][a-z0-9_]{2,30}$)
C:637,8:set_splash_background: Comma not followed by a space
        tg.utils.multiline_replace_in_file(patt,r"""(?P=pretext)'"""+image+"'",ubuntu_splash_conf)
                                               ^^
C:639,8:set_splash_background: Comma not followed by a space
        msg = "{0}:{1}:\n  Set Ubuntu splash screen (bootup background) to '{2}'.".format(__file__,__name__,image)
                                                                                                  ^^
W:643,4:update_image_catalog: Redefining name 'commands' from outer scope (line 45)
E:642,0:update_image_catalog: function already defined line 614
C:642,0:update_image_catalog: Missing docstring
W:643,4:update_image_catalog: Reimport 'commands' (imported line 45)
C:646,4:update_image_catalog: Comma not followed by a space
    status,output = commands.getstatusoutput(command)
          ^^
W:646,11:update_image_catalog: Unused variable 'output'
C:649,0:image_path_from_log: Missing docstring
C:654,8:image_path_from_log: Comma not followed by a space
        status,output = commands.getstatusoutput( 'tail -n {0} {1} | head -n 1'.format( abs(sequence_num)*1+1, DB_LOG_PATH ))
              ^^
C:656,8:image_path_from_log: Comma not followed by a space
        status,output = commands.getstatusoutput('sed -n \$p {0}'.format(DB_LOG_PATH))
              ^^
C:657,4:image_path_from_log: Operator not preceded by a space
    if output[-1]=='\n': # this has only ever happened with the subprocess.Popen command, but you never know
                 ^^
C:658,8:image_path_from_log: Operator not preceded by a space
        output=output[:-1]
              ^
W:654,8:image_path_from_log: Unused variable 'status'
C:662,0:image_path_from_gnome: Missing docstring
C:665,4:image_path_from_gnome: Comma not followed by a space
    output = subprocess.Popen(["gconftool-2",'--get','/desktop/gnome/background/picture_filename'], stdout=subprocess.PIPE).communicate()[0]
                                            ^^
C:666,4:image_path_from_gnome: Operator not preceded by a space
    if output[-1]=='\n':
                 ^^
C:667,8:image_path_from_gnome: Operator not preceded by a space
        output=output[:-1]
              ^
C:670,0:image_path: Missing docstring
C:671,4:image_path: Operator not preceded by a space
    path_log=image_path_from_log()
            ^
C:672,4:image_path: Operator not preceded by a space
    path_gnome=image_path_from_gnome()
              ^
C:676,4:image_path: Comma not followed by a space
    if identical_images(path_log,path_gnome):
                                ^^
C:682,0:identical_images: Comma not followed by a space
def identical_images(path1,path2):
                          ^^
C:682,0:identical_images: Missing docstring
C:684,4:identical_images: Operator not preceded by a space
    im1=Image.open(path1)
       ^
C:685,4:identical_images: Operator not preceded by a space
    im2=Image.open(path2)
       ^
C:688,0:compare_images: Comma not followed by a space
def compare_images(path1,path2):
                        ^^
C:688,0:compare_images: Missing docstring
C:689,4:compare_images: Comma not followed by a space
    return identical_images(path1,path2)
                                 ^^
C:774,0:test: Missing docstring
E:779,4: Undefined variable '_test'
************* Module tagim.tg.resolve-script
C:  4,0: Line too long (90/80)
C: 20,0: Line too long (87/80)
C: 43,0: Line too long (91/80)
C: 50,0: Line too long (99/80)
C: 59,0: Line too long (100/80)
C: 98,0: Line too long (94/80)
C:102,0: Line too long (82/80)
C:104,0: Line too long (85/80)
C:109,0: Line too long (111/80)
C:122,0: Line too long (154/80)
C:132,0: Line too long (143/80)
C:134,0: Line too long (83/80)
C:136,0: Line too long (85/80)
C:140,0: Line too long (89/80)
C:153,0: Line too long (93/80)
C:162,0: Line too long (101/80)
C:179,0: Line too long (101/80)
C:180,0: Line too long (89/80)
C:183,0: Line too long (106/80)
W: 19,0: TODO:
W: 40,0: TODO:
W:162,0: TODO: append locate path generator to end of paths? Do something with the excess paths.
W:179,0: TODO: BUG: pipes may not work output doesn't work (e.g. resolve --run cat tagim | grep tag)
W:180,0: TODO: BUG: built-in commands like cat don't work (e.g. resolve --run cat tagim)
C:  1,0: Invalid name "resolve-script" (should match (([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$)
C: 54,0: Invalid name "version" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
W: 68,12:which: Redefining name 'path' from outer scope (line 158)
W: 62,4:which: Redefining name 'os' from outer scope (line 146)
C: 63,4:which.is_exe: Missing docstring
E: 82,0:test: function already defined line 73
W:142,6:parse_args: Redefining name 'a' from outer scope (line 150)
W: 98,4:parse_args: Redefining name 'p' from outer scope (line 156)
W:142,4:parse_args: Redefining name 'o' from outer scope (line 150)
C: 95,0:parse_args: Missing docstring
C: 98,4:parse_args: Invalid name "p" (should match [a-z_][a-z0-9_]{2,30}$)
C: 99,4:parse_args: Comma not followed by a space
    p.add_option('-b','--base','--basename', '--file','--filename','-f',
                     ^^
                 dest='base', default=False,
                 action='store_true',
                 help='Output just the base-name or file-name portion of the path'
C:104,4:parse_args: Comma not followed by a space
    p.add_option('-d','--dir','--directory', '--container','--containing','--folder',
                     ^^
                 default=False,
                 action='store_true',
                 help='Output the containing folder or directory'
C:109,4:parse_args: Comma not followed by a space
    p.add_option('-u','--unreal','--unreal-path','--no-follow', '--dont-follow','--leave-links','--with-links',
                     ^^
                 default=False,
                 action='store_true',
                 help="Don't follow links to resolve the real path."
C:114,4:parse_args: Comma not followed by a space
    p.add_option('-a','--abs','--absolute',
                     ^^
                 default=False,
                 action='store_true',
                 help="Find absolute path."
C:119,4:parse_args: Comma not followed by a space
    p.add_option('-n','--norm','--case', '--normalize','--normalize-case',
                     ^^
                 dest='norm', default=False,
                 action='store_true',
                 help='NOT IMPLEMENTED: Normalize the path case (no effect in Posix, but in Windows or Mac converts to all upper case or all lower case).'
C:124,4:parse_args: Comma not followed by a space
    p.add_option('-x','--ext','-e', '--extension',
                     ^^
                 dest='ext', default=False,
                 action='store_true',
                 help='Output only the extension and not the filename or path.'
C:129,4:parse_args: Comma not followed by a space
    p.add_option('-s','--strip','--strip-ext','--strip-extension',
                     ^^
                 dest='strip', default=False,
                 action='store_true',
                 help='Output the path and filename, but without the file name extension, also strip the dot (".") character in the extension.'
C:134,4:parse_args: Comma not followed by a space
    p.add_option('--run','--execute','--exec','--launch','--edit','--ed','--gedit',
                        ^^
                 default='',
                 help='Use the path as the first argument to a command (e.g. gedit).'
C:138,4:parse_args: Comma not followed by a space
    p.add_option('-p','--path',
                     ^^
                 dest='path', default='',
                 help='Path to resolve into a real, canonical path, following all links.'
C:142,4:parse_args: Comma not followed by a space
    o,a = p.parse_args()
     ^^
C:142,4:parse_args: Invalid name "o" (should match [a-z_][a-z0-9_]{2,30}$)
C:142,6:parse_args: Invalid name "a" (should match [a-z_][a-z0-9_]{2,30}$)
C:143,4:parse_args: Comma not followed by a space
    return o,a
            ^^
C:150,4: Comma not followed by a space
    o,a = parse_args()
     ^^
C:150,4: Invalid name "o" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:150,6: Invalid name "a" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:153,8: Operator not preceded by a space
        o.path=chr(0).join(a) # these are already split into an array, so this is unnecessary
              ^
C:154,4: Invalid name "paths" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:183,12: Comma not followed by a space
            output = subprocess.Popen([o.run,'{0}'.format(path)], stdout=subprocess.PIPE).communicate()[0]
                                            ^^
************* Module tagim.tg.recollq
C: 14,0: Line too long (106/80)
C: 15,0: Line too long (82/80)
W: 93,0: Found indentation with tabs instead of spaces
W: 97,0: Found indentation with tabs instead of spaces
W: 98,0: Found indentation with tabs instead of spaces
W: 99,0: Found indentation with tabs instead of spaces
W:100,0: Found indentation with tabs instead of spaces
W:101,0: Found indentation with tabs instead of spaces
W:102,0: Found indentation with tabs instead of spaces
W:103,0: Found indentation with tabs instead of spaces
W:104,0: Found indentation with tabs instead of spaces
W:105,0: Found indentation with tabs instead of spaces
W:106,0: Found indentation with tabs instead of spaces
C:107,0: Line too long (103/80)
W:107,0: Found indentation with tabs instead of spaces
W:108,0: Found indentation with tabs instead of spaces
W:109,0: Found indentation with tabs instead of spaces
W: 13,0: TODO:
F: 23,0: Unable to import 'recoll'
C: 27,0: Invalid name "p" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 85,0: Invalid name "o" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 88,0: Comma not followed by a space
o.num = max(o.num,1)
                 ^^
C: 90,0: Operator not preceded by a space
db=recoll.connect()
  ^
C: 90,0: Invalid name "db" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 91,0: Operator not preceded by a space
q=db.query()
 ^
C: 91,0: Invalid name "q" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 94,0: Operator not preceded by a space
N=q.execute(' '.join(o.terms))
 ^
C: 96,0: Comma not followed by a space
for i in range(min(N,o.num)):
                    ^^
C: 97,1: Operator not preceded by a space
	s=q.fetchone()
  ^
C:107,2: Comma not followed by a space
		print '({0}) {1} MB {2}'.format(s.relevancyrating,float(s.dbytes)/1000000.0,str(s.mtime)) #,s.author)
                                                   ^^
W: 25,0: Unused import system
************* Module tagim.tg.regex_patterns
C:  3,0: Line too long (105/80)
C:  6,0: Line too long (114/80)
C: 13,0: Line too long (119/80)
C: 14,0: Line too long (99/80)
C: 16,0: Line too long (104/80)
C: 25,0: Line too long (98/80)
C: 66,0: Line too long (81/80)
C: 68,0: Line too long (90/80)
C: 69,0: Line too long (92/80)
C: 70,0: Line too long (86/80)
C: 71,0: Line too long (106/80)
C: 72,0: Line too long (81/80)
C: 83,0: Line too long (101/80)
C: 86,0: Line too long (137/80)
W: 89,0: Found indentation with tabs instead of spaces
W: 90,0: Found indentation with tabs instead of spaces
W: 91,0: Found indentation with tabs instead of spaces
C: 93,0: Line too long (113/80)
W: 93,0: Found indentation with tabs instead of spaces
W: 94,0: Found indentation with tabs instead of spaces
W: 95,0: Found indentation with tabs instead of spaces
C: 96,0: Line too long (162/80)
C: 97,0: Line too long (103/80)
C: 98,0: Line too long (104/80)
C:101,0: Line too long (88/80)
C:105,0: Line too long (93/80)
C:110,0: Line too long (128/80)
C:111,0: Line too long (88/80)
C:115,0: Line too long (93/80)
C:123,0: Line too long (99/80)
C:124,0: Line too long (115/80)
C:132,0: Line too long (81/80)
C:133,0: Line too long (81/80)
C:137,0: Line too long (107/80)
C:141,0: Line too long (104/80)
C:155,0: Line too long (173/80)
C:156,0: Line too long (138/80)
C:176,0: Line too long (99/80)
C:198,0: Line too long (145/80)
W:235,0: Bad indentation. Found 2 spaces, expected 4
W:236,0: Bad indentation. Found 2 spaces, expected 4
W:239,0: Bad indentation. Found 2 spaces, expected 4
W: 12,0: TODO:
W:100,0: TODO: Implement patterns for paths
W:118,0: TODO: cosolidate with UTIL_PATTERNS.FLOAT and others
W:156,0: TODO: to avoid ambiguity just require arcmin/arcsec units indicators rather than allowing a sequence of floats to be interpreted as d,m,s
W:187,0: FIXME: parse the AM/PM bit
C: 28,0: Invalid name "version" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 33,4: Invalid name "geopy" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:151,0: Comma not followed by a space
for k,v in {'DEGREE':'DEGREE','ARCMIN':'PRIME','ARCSEC':'DOUBLE_PRIME'}.items():
     ^^
C:234,0:_test: Missing docstring
************* Module tagim.tg.nlp
C: 10,0: Line too long (92/80)
C: 14,0: Line too long (82/80)
C: 19,0: Line too long (91/80)
C: 20,0: Line too long (84/80)
C: 31,0: Line too long (140/80)
C: 32,0: Line too long (100/80)
C: 50,0: Line too long (123/80)
C: 53,0: Line too long (122/80)
C: 65,0: Line too long (112/80)
C: 67,0: Line too long (137/80)
C: 73,0: Line too long (148/80)
C: 76,0: Line too long (754/80)
C: 77,0: Line too long (245/80)
C: 78,0: Line too long (551/80)
C: 81,0: Line too long (146/80)
C: 82,0: Line too long (83/80)
C: 85,0: Line too long (98/80)
C: 86,0: Line too long (97/80)
C: 87,0: Line too long (100/80)
C: 88,0: Line too long (87/80)
C: 89,0: Line too long (90/80)
C: 91,0: Line too long (86/80)
C: 92,0: Line too long (89/80)
C: 94,0: Line too long (92/80)
C: 95,0: Line too long (100/80)
C: 98,0: Line too long (111/80)
C:113,0: Line too long (93/80)
C:123,0: Line too long (130/80)
C:125,0: Line too long (90/80)
C:127,0: Line too long (92/80)
C:128,0: Line too long (83/80)
C:130,0: Line too long (207/80)
C:132,0: Line too long (119/80)
C:133,0: Line too long (118/80)
C:135,0: Line too long (222/80)
C:136,0: Line too long (147/80)
C:137,0: Line too long (196/80)
C:138,0: Line too long (580/80)
C:140,0: Line too long (84/80)
C:175,0: Line too long (431/80)
C:178,0: Line too long (169/80)
C:186,0: Line too long (97/80)
C:188,0: Line too long (100/80)
C:215,0: Line too long (97/80)
C:228,0: Line too long (87/80)
C:241,0: Line too long (113/80)
C:267,0: Line too long (82/80)
C:276,0: Line too long (124/80)
C:290,0: Line too long (139/80)
C:311,0: Line too long (102/80)
C:312,0: Line too long (99/80)
C:341,0: Line too long (99/80)
C:342,0: Line too long (111/80)
C:343,0: Line too long (111/80)
C:345,0: Line too long (143/80)
C:347,0: Line too long (114/80)
C:367,0: Line too long (89/80)
C:368,0: Line too long (90/80)
C:373,0: Line too long (98/80)
C:375,0: Line too long (107/80)
C:376,0: Line too long (114/80)
C:377,0: Line too long (134/80)
C:380,0: Line too long (85/80)
C:383,0: Line too long (156/80)
W:383,0: Unnecessary semicolon
C:387,0: Line too long (84/80)
C:389,0: Line too long (101/80)
C:400,0: Line too long (96/80)
C:405,0: Line too long (106/80)
C:408,0: Line too long (83/80)
C:411,0: Line too long (145/80)
C:415,0: Line too long (130/80)
C:418,0: Line too long (100/80)
C:430,0: Line too long (105/80)
C:433,0: Line too long (100/80)
C:461,0: Line too long (81/80)
C:471,0: Line too long (138/80)
C:507,0: Line too long (82/80)
C:525,0: Line too long (130/80)
C:560,0: Line too long (95/80)
C:568,0: Line too long (105/80)
C:572,0: Line too long (99/80)
C:577,0: Line too long (85/80)
C:586,0: Line too long (81/80)
C:589,0: Line too long (98/80)
C:608,0: Line too long (106/80)
C:619,0: Line too long (86/80)
C:620,0: Line too long (124/80)
C:642,0: Line too long (96/80)
C:655,0: Line too long (91/80)
C:663,0: Line too long (93/80)
C:664,0: Line too long (106/80)
C:680,0: Line too long (94/80)
C:688,0: Line too long (104/80)
W:690,0: Unnecessary semicolon
W:692,0: Unnecessary semicolon
C:697,0: Line too long (134/80)
C:703,0: Line too long (141/80)
C:719,0: Line too long (103/80)
W:725,0: Unnecessary semicolon
C:735,0: Line too long (114/80)
C:739,0: Line too long (102/80)
C:743,0: Line too long (99/80)
C:757,0: Line too long (89/80)
C:791,0: Line too long (100/80)
C:812,0: Line too long (92/80)
C:813,0: Line too long (106/80)
C:814,0: Line too long (95/80)
C:817,0: Line too long (82/80)
C:825,0: Line too long (124/80)
C:827,0: Line too long (159/80)
C:828,0: Line too long (119/80)
C:829,0: Line too long (82/80)
C:830,0: Line too long (89/80)
C:843,0: Line too long (81/80)
C:849,0: Line too long (85/80)
C:850,0: Line too long (81/80)
C:851,0: Line too long (93/80)
C:853,0: Line too long (144/80)
C:854,0: Line too long (86/80)
C:867,0: Line too long (89/80)
C:868,0: Line too long (98/80)
C:870,0: Line too long (109/80)
C:871,0: Line too long (104/80)
C:872,0: Line too long (153/80)
C:874,0: Line too long (128/80)
C:876,0: Line too long (89/80)
C:878,0: Line too long (100/80)
C:880,0: Line too long (100/80)
C:889,0: Line too long (94/80)
C:892,0: Line too long (95/80)
C:902,0: Line too long (86/80)
W:141,0: TODO: split this dict in two or three: 
W:385,0: TODO: Use numpy or list comprehensions and or list slicing
W:403,0: TODO: Use numpy or list comprehensions and or list slicing
W:433,0: TODO: add collections.deque, collections.defaultdict
W:459,0: TODO:
W:560,0: TODO: add backslash encoding and EOF \n and other ascii representations of control characters
W:561,0: FIXME: surely encode() will do this!
W:726,0: TODO: convert unicode to str ?
W:827,0: TODO: better to use regular expressions that this inaccurate assumption that all solitary s's are the result of a splitup possive word ending in 's, 
W:848,0: TODO:
W:854,0: TODO: accept more than one type of object as an argument (word, phrase, Feature)
W:866,0: TODO: enforce argument type (e.g. f=Features)
W:961,0: TODO:
C: 35,0: Invalid name "version" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 62,4: Invalid name "eol" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
W: 65,4: Uses of a deprecated module 'string'
C: 97,0:dedupe_whitespace: Comma not followed by a space
def dedupe_whitespace(s,spacechars=' '):
                       ^^
C: 97,0:dedupe_whitespace: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C: 97,22:dedupe_whitespace: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:108,8:dedupe_whitespace: Invalid name "w" (should match [a-z_][a-z0-9_]{2,30}$)
C:109,8:dedupe_whitespace: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:112,0:standardize_whitespace: Comma not followed by a space
def standardize_whitespace(s,spacechars=SPACE):
                            ^^
C:112,0:standardize_whitespace: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:112,27:standardize_whitespace: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:119,4:standardize_whitespace: Operator not preceded by a space
    w_list='|'.join(['('+w+'+)' for w in spacechars])
          ^
C:120,4:standardize_whitespace: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
W:120,20:standardize_whitespace: Using possibly undefined loop variable 'w'
W:119,4:standardize_whitespace: Unused variable 'w_list'
W:128,40:non_list_of_characters: Redefining name 'x' from outer scope (line 87)
C:124,0:non_list_of_characters: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:124,27:non_list_of_characters: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
W:124,27:non_list_of_characters: Unused argument 's'
C:132,0: Comma not followed by a space
YESSTR = [True,1,'1','true','True','y','Y','yes','Yes'] # floating value of 1.0 should probably not be considered "yes"
              ^^
C:133,0: Comma not followed by a space
NOSTR = [False,0,'0','false','False','n','N','no','No'] # floating value of 0.0 should probably not be considered "no"
              ^^
C:135,0: Comma not followed by a space
NUMSTR = ['Null','null','NULL','None','none','NONE','Void','void','VOID','N/A','n/a','not applicable','Not Applicable','Invalid','invalid', 'INVALID','Inf','INF','inf','NaN','NAN','+inf','+INF','+Inf','-inf','-INF','-Inf']
                ^^
C:136,0: Comma not followed by a space
EMPTYSTR = ['',' ',"\t","''",'""','?'] # might also consider whitespace strings or single whitespace characters as Null or empty values for numbers
              ^^
C:137,0: Comma not followed by a space
PK_NAMES = ['code','Code','cd','Cd','no','No','Number','number','num','Num','id','Id','ID','#','pk','PK','key','Key','seq','Seq','sequence','Sequence'] # the last word in a primary key column name
                  ^^
C:138,0: Comma not followed by a space
PK_TEXT = ['primary key','key','primary id','primary identifier','key #','key number','primary number','primary #','primary no','unique id','unique identifier','identifying code','identifying number','code number','identification code','identificaiton number','serial number','identifier','code','id','number','record number','record','entry number','entry','#','entry #','identifying #','unique number','unique #','unique no','identifying no','id no','id number'] # case-insensitive phrases and words indicative of a primary key or foreign key in a description or help_text field
                        ^^
C:175,0: Operator not preceded by a space
PARAGRAPH_EXAMPLE=" \t The quick brown fox jumped over the lazy dog.  Did you know that the previous sentence contains all the letters of the English alphabet only once ??  I bet you did !!! this passage contains intentionally nonstandard spacing near punctuation and at the beginning and end of the string.  Unfortunately doctext can't handle newlines and carriage-returns in test value strings (inconsistent leading whitespace)."
                 ^
C:177,0:essence: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:177,12:essence: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:187,0:dec2base: Comma not followed by a space
def dec2base(dec,base):
                ^^
C:208,4:dec2base: Operator not preceded by a space
    if dec==0:
          ^^
C:210,4:dec2base: Operator not preceded by a space
    while dec>0:
             ^
C:217,0:number2alpha: Comma not followed by a space
def number2alpha(i,alphabet_length=ord('Z')-ord('A'),alphabet_offset=ord('A')):
                  ^^
W:225,52:number2alpha: Redefining name 'x' from outer scope (line 87)
C:224,4:number2alpha: Comma not followed by a space
    digits = dec2base(i,alphabet_length)
                       ^^
W:227,0:create_name: Dangerous default value [] as argument
C:238,4:create_name: Comma not followed by a space
    if not is_int(i,include_nan=False,include_empty=False):
                   ^^
C:251,0:create_names: Comma not followed by a space
def create_names(indexes,prefix='Column'):
                        ^^
C:251,0:create_names: Missing docstring
C:253,4:create_names: Invalid name "n" (should match [a-z_][a-z0-9_]{2,30}$)
C:257,8:create_names: Comma not followed by a space
        n.append(create_name(i,prefix))
                              ^^
C:260,0:remove_prefix: Comma not followed by a space
def remove_prefix(s,p,case_sensitive=True,in_place=False):
                   ^^
C:260,0:remove_prefix: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:260,0:remove_prefix: Invalid name "p" (should match [a-z_][a-z0-9_]{2,30}$)
C:260,18:remove_prefix: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:260,20:remove_prefix: Invalid name "p" (should match [a-z_][a-z0-9_]{2,30}$)
C:262,4:remove_prefix: Comma not followed by a space
    return clean_prefix(s,p,case_sensitive,in_place)
                         ^^
C:264,0:clean_prefix: Comma not followed by a space
def clean_prefix(s,p,case_sensitive=True,in_place=False):
                  ^^
C:264,0:clean_prefix: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:264,0:clean_prefix: Invalid name "p" (should match [a-z_][a-z0-9_]{2,30}$)
C:264,17:clean_prefix: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:264,19:clean_prefix: Invalid name "p" (should match [a-z_][a-z0-9_]{2,30}$)
C:267,8:clean_prefix: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
C:269,8:clean_prefix: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
C:273,8:clean_prefix: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
W:277,4:clean_prefix: Unreachable code
C:279,0:find_prefix: Comma not followed by a space
def find_prefix(strings,case_sensitive=True):
                       ^^
C:281,4:find_prefix: Invalid name "s0" (should match [a-z_][a-z0-9_]{2,30}$)
C:283,8:find_prefix: Invalid name "s0" (should match [a-z_][a-z0-9_]{2,30}$)
C:285,8:find_prefix: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:287,12:find_prefix: Invalid name "s1" (should match [a-z_][a-z0-9_]{2,30}$)
C:289,12:find_prefix: Operator not preceded by a space
            s1=s
              ^
C:289,12:find_prefix: Invalid name "s1" (should match [a-z_][a-z0-9_]{2,30}$)
C:291,8:find_prefix: Comma not followed by a space
        for ((i,c1),c2) in zip(enumerate(s0+'Q'),s1.strip()+'Z'):
               ^^
C:291,16:find_prefix: Invalid name "c1" (should match [a-z_][a-z0-9_]{2,30}$)
C:291,20:find_prefix: Invalid name "c2" (should match [a-z_][a-z0-9_]{2,30}$)
C:294,8:find_prefix: Comma not followed by a space
        imin = min(imin,i)
                       ^^
W:294,24:find_prefix: Using possibly undefined loop variable 'i'
C:297,0:clean_suffix: Comma not followed by a space
def clean_suffix(s,suf,case_sensitive=True):
                  ^^
C:297,0:clean_suffix: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:297,17:clean_suffix: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:302,8:clean_suffix: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:305,0: Comma not followed by a space
from sys import stderr,stdout,stdin
                      ^^
R:311,0:distance: Too many arguments (6/5)
R:311,0:distance: Too many local variables (16/15)
C:311,0:distance: Comma not followed by a space
def distance(obj1,obj2,string_distance_metric='',distance_mode=2, case_sensitive=0, normalize = True):
                 ^^
W:330,4:distance: Redefining name 'nltk' from outer scope (line 309)
W:330,4:distance: Reimport 'nltk' (imported line 309)
C:334,4:distance: Comma not followed by a space
    case_sensitive = min(max(case_sensitive,0),1)
                                           ^^
C:336,8:distance: Invalid name "o1" (should match [a-z_][a-z0-9_]{2,30}$)
C:337,8:distance: Invalid name "o2" (should match [a-z_][a-z0-9_]{2,30}$)
C:338,8:distance: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:340,12:distance: Comma not followed by a space
            N = max(max(len(o1),len(o2)),1)
                               ^^
C:340,12:distance: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:349,4:distance: Comma not followed by a space
    if not isinstance(obj1,dict):
                          ^^
C:350,8:distance: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:351,8:distance: Comma not followed by a space
        for o1,o2 in zip(obj1,obj2):
              ^^
C:351,12:distance: Invalid name "o1" (should match [a-z_][a-z0-9_]{2,30}$)
C:351,15:distance: Invalid name "o2" (should match [a-z_][a-z0-9_]{2,30}$)
C:352,12:distance: Comma not followed by a space
            d.append(distance(o1,o2))
                                ^^
C:356,4:distance: Comma not followed by a space
    return distance(str(obj1),str(obj2))
                             ^^
W:359,4:distance: Unreachable code
C:359,4:distance: Invalid name "c1" (should match [a-z_][a-z0-9_]{2,30}$)
C:360,4:distance: Invalid name "c2" (should match [a-z_][a-z0-9_]{2,30}$)
C:362,8:distance: Invalid name "c1" (should match [a-z_][a-z0-9_]{2,30}$)
C:364,8:distance: Invalid name "c2" (should match [a-z_][a-z0-9_]{2,30}$)
C:366,4:distance: Operator not preceded by a space
    d=[]
     ^
C:366,4:distance: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:370,4:distance: Invalid name "k2" (should match [a-z_][a-z0-9_]{2,30}$)
C:371,4:distance: Comma not followed by a space
    for (k,v) in obj1.items():
          ^^
C:371,11:distance: Invalid name "v" (should match [a-z_][a-z0-9_]{2,30}$)
C:372,8:distance: Comma not followed by a space
        if isinstance(v,dict):
                       ^^
C:373,12:distance: Comma not followed by a space
            d.append(dict_distance(obj1,obj2,string_distance_metric,distance_mode,case_sensitive))
                                       ^^
E:373,21:distance: Undefined variable 'dict_distance'
C:376,12:distance: Comma not followed by a space
            d.append((  c1*nltk.metrics.distance.edit_distance(str(v),str(obj2[k])) # case-sensitive edit distance
                                                                     ^^
                      + c2*nltk.metrics.distance.edit_distance(str(v).lower(),str(obj2[k]).lower()))  # case-insensitive edit distance
                      /(c1+c2) )  # isolation or averaging of the 2 metrics
C:386,0:add_column: Comma not followed by a space
def add_column(list_of_lists, value='',column_name=False):
                                      ^^
C:388,4:add_column: Comma not followed by a space
    if isinstance(value,list):
                       ^^
C:389,8:add_column: Invalid name "v" (should match [a-z_][a-z0-9_]{2,30}$)
C:391,8:add_column: Invalid name "v" (should match [a-z_][a-z0-9_]{2,30}$)
C:392,4:add_column: Comma not followed by a space
    for i,row in enumerate(list_of_lists):
         ^^
C:393,8:add_column: Comma not followed by a space
        if not isinstance(row,list):
                             ^^
C:395,8:add_column: Operator not preceded by a space
        if i == 0 and not column_name==False:
                                     ^^
C:399,8:add_column: Operator not preceded by a space
        list_of_lists[i]=row
                        ^
C:404,0:remove_column: Comma not followed by a space
def remove_column(list_of_lists,column_number=-1,value=None,check_none=False):
                               ^^
C:409,4:remove_column: Comma not followed by a space
    for i,row in enumerate(list_of_lists):
         ^^
C:410,8:remove_column: Comma not followed by a space
        if isinstance(row,list) and abs(column_number)<len(row):
                         ^^
C:417,16:remove_column: Operator not preceded by a space
                list_of_lists[i]=row
                                ^
W:404,60:remove_column: Unused argument 'check_none'
C:421,0:has_len: Missing docstring
C:423,8:has_len: Operator not preceded by a space
        l=len(obj)
         ^
C:423,8:has_len: Invalid name "l" (should match [a-z_][a-z0-9_]{2,30}$)
C:428,0:is_iter: Missing docstring
C:433,4:is_iter: Comma not followed by a space
    if isinstance(obj,(list,dict,set,tuple)): # TODO: add collections.deque, collections.defaultdict
                     ^^
C:437,0:is_float: Comma not followed by a space
def is_float(s,include_nan=True,include_empty=True,include_bool=True):
              ^^
W:449,8:is_float: Redefining name 'x' from outer scope (line 87)
C:437,0:is_float: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:437,0:is_float: Missing docstring
C:437,13:is_float: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:438,4:is_float: Comma not followed by a space
    if isinstance(s,str):
                   ^^
C:439,8:is_float: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:446,4:is_float: Comma not followed by a space
    if isinstance(s,bool):
                   ^^
C:449,8:is_float: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
R:437,0:is_float: Too many return statements (7/6)
C:456,0:is_number: Comma not followed by a space
def is_number(s,include_nan=True,include_empty=True,include_bool=True):
               ^^
C:456,0:is_number: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:456,0:is_number: Missing docstring
C:456,14:is_number: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:457,4:is_number: Comma not followed by a space
    return is_float(s,include_nan,include_empty,include_bool)
                     ^^
C:463,0:is_datetime: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:463,0:is_datetime: Missing docstring
C:463,16:is_datetime: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:466,8:is_datetime: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C:472,0:is_range: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:472,0:is_range: Missing docstring
C:472,13:is_range: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:474,4:is_range: Invalid name "mo" (should match [a-z_][a-z0-9_]{2,30}$)
C:482,0:is_int: Comma not followed by a space
def is_int(s,include_nan=False,include_empty=False):
            ^^
C:482,0:is_int: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:482,0:is_int: Missing docstring
C:482,11:is_int: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:483,4:is_int: Comma not followed by a space
    if include_nan and isinstance(s,str) and s in NUMSTR:
                                   ^^
C:485,4:is_int: Comma not followed by a space
    if include_empty and  isinstance(s,str) and s in EMPTYSTR:
                                      ^^
C:487,4:is_int: Comma not followed by a space
    if isinstance(s,bool):
                   ^^
C:495,0:is_integer: Comma not followed by a space
def is_integer(s,include_nan=False,include_empty=False):
                ^^
C:495,0:is_integer: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:495,0:is_integer: Missing docstring
C:495,15:is_integer: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:496,4:is_integer: Comma not followed by a space
    return is_int(s=s,include_nan=include_nan,include_empty=include_empty)
                     ^^
C:498,0:_integer: Comma not followed by a space
def _integer(s,include_nan=False,include_empty=False):
              ^^
C:498,0:_integer: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:498,0:_integer: Missing docstring
C:498,13:_integer: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:499,4:_integer: Comma not followed by a space
    return is_int(s=s,include_nan=include_nan,include_empty=include_empty)
                     ^^
W:505,4:is_quant: Redefining name 'x' from outer scope (line 87)
C:503,0:is_quant: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:503,0:is_quant: Missing docstring
C:503,13:is_quant: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:505,4:is_quant: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
E:507,27:is_quant: Instance of 'bool' has no 'timetuple' member (but some types could not be inferred)
C:509,4:is_quant: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:511,8:is_quant: Comma not followed by a space
        return [x[0],x[1]]
                    ^^
C:512,4:is_quant: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:513,4:is_quant: Comma not followed by a space
    if isinstance(x,float):
                   ^^
C:518,0:round_str: Comma not followed by a space
def round_str(s,N=0,include_nan=False,include_empty=False):
               ^^
C:518,0:round_str: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:518,0:round_str: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:518,0:round_str: Missing docstring
C:518,14:round_str: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:518,16:round_str: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:519,4:round_str: Comma not followed by a space
    if not is_number(s,include_nan=False,include_empty=False):
                      ^^
W:518,20:round_str: Unused argument 'include_nan'
W:518,38:round_str: Unused argument 'include_empty'
C:526,0:sort_characters: Comma not followed by a space
def sort_characters(s,order=True):
                     ^^
C:526,0:sort_characters: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:526,20:sort_characters: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:534,4:sort_characters: Operator not preceded by a space
    l=list(s)
     ^
C:534,4:sort_characters: Invalid name "l" (should match [a-z_][a-z0-9_]{2,30}$)
C:540,0:swap_if: Comma not followed by a space
def swap_if(a,b,c=''):
             ^^
C:540,0:swap_if: Invalid name "a" (should match [a-z_][a-z0-9_]{2,30}$)
C:540,0:swap_if: Invalid name "b" (should match [a-z_][a-z0-9_]{2,30}$)
C:540,0:swap_if: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:540,0:swap_if: Missing docstring
C:540,12:swap_if: Invalid name "a" (should match [a-z_][a-z0-9_]{2,30}$)
C:540,14:swap_if: Invalid name "b" (should match [a-z_][a-z0-9_]{2,30}$)
C:540,16:swap_if: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:545,0:swap_if_not: Comma not followed by a space
def swap_if_not(a,b,c=''):
                 ^^
C:545,0:swap_if_not: Invalid name "a" (should match [a-z_][a-z0-9_]{2,30}$)
C:545,0:swap_if_not: Invalid name "b" (should match [a-z_][a-z0-9_]{2,30}$)
C:545,0:swap_if_not: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:545,0:swap_if_not: Missing docstring
C:545,16:swap_if_not: Invalid name "a" (should match [a-z_][a-z0-9_]{2,30}$)
C:545,18:swap_if_not: Invalid name "b" (should match [a-z_][a-z0-9_]{2,30}$)
C:545,20:swap_if_not: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:550,0:swap_if_in: Comma not followed by a space
def swap_if_in(a,b,c=''):
                ^^
C:550,0:swap_if_in: Invalid name "a" (should match [a-z_][a-z0-9_]{2,30}$)
C:550,0:swap_if_in: Invalid name "b" (should match [a-z_][a-z0-9_]{2,30}$)
C:550,0:swap_if_in: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:550,0:swap_if_in: Missing docstring
C:550,15:swap_if_in: Invalid name "a" (should match [a-z_][a-z0-9_]{2,30}$)
C:550,17:swap_if_in: Invalid name "b" (should match [a-z_][a-z0-9_]{2,30}$)
C:550,19:swap_if_in: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:555,0:swap_if_not_in: Comma not followed by a space
def swap_if_not_in(a,b,c=''):
                    ^^
C:555,0:swap_if_not_in: Invalid name "a" (should match [a-z_][a-z0-9_]{2,30}$)
C:555,0:swap_if_not_in: Invalid name "b" (should match [a-z_][a-z0-9_]{2,30}$)
C:555,0:swap_if_not_in: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:555,0:swap_if_not_in: Missing docstring
C:555,19:swap_if_not_in: Invalid name "a" (should match [a-z_][a-z0-9_]{2,30}$)
C:555,21:swap_if_not_in: Invalid name "b" (should match [a-z_][a-z0-9_]{2,30}$)
C:555,23:swap_if_not_in: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:562,0:escape_ascii: Comma not followed by a space
def escape_ascii(s,nochange=ASCII_IN_UNICODE):
                  ^^
C:562,0:escape_ascii: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:562,0:escape_ascii: Missing docstring
C:562,17:escape_ascii: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:563,4:escape_ascii: Operator not preceded by a space
    s2=''
      ^
C:563,4:escape_ascii: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
C:564,8:escape_ascii: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:566,12:escape_ascii: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
C:568,12:escape_ascii: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
C:571,0:make_printable: Comma not followed by a space
def make_printable(s, substitute='~',nochange=PRINTABLE, change=''):
                                    ^^
C:571,0:make_printable: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:571,19:make_printable: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
W:576,8:make_printable: No exception type(s) specified
C:574,8:make_printable: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:577,4:make_printable: Comma not followed by a space
    if isinstance(substitute,str) and isinstance(nochange,str) and isinstance(s,str):
                            ^^
C:578,8:make_printable: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
C:581,16:make_printable: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
C:582,12:make_printable: Comma not followed by a space
            table = str.maketrans(change,s2)
                                        ^^
E:582,20:make_printable: Class 'str' has no 'maketrans' member
C:586,12:make_printable: Comma not followed by a space
            table_list = [swap_if_not_in(chr(c),nochange,s2) for c in range(256)]
                                               ^^
C:593,0:latin_to_ascii: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:593,0:latin_to_ascii: Missing docstring
C:593,19:latin_to_ascii: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
W:598,8:latin_to_ascii: No exception type(s) specified
C:595,8:latin_to_ascii: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:599,4:latin_to_ascii: Operator not preceded by a space
    s2=''
      ^
C:599,4:latin_to_ascii: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
C:600,8:latin_to_ascii: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:602,12:latin_to_ascii: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
C:604,12:latin_to_ascii: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
C:607,0:escape_unprintable: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:607,23:escape_unprintable: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
W:613,8:escape_unprintable: No exception type(s) specified
C:610,8:escape_unprintable: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:611,8:escape_unprintable: Comma not followed by a space
        s.encode(encoding='ascii',errors='replace') # fails for unicode > 128
                                 ^^
W:607,26:escape_unprintable: Unused argument 'nochange'
E:617,0:escape_unprintable: function already defined line 607
C:617,0:escape_unprintable: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:617,0:escape_unprintable: Missing docstring
C:617,23:escape_unprintable: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:618,4:escape_unprintable: Comma not followed by a space
    if isinstance(nochange,str) and isinstance(s,str):
                          ^^
C:620,4:escape_unprintable: Comma not followed by a space
    msg = "{0}:{1}:\n  Unable to process non-string argument (type {2} to make printable.".format(__file__,__name__,type(s))
                                                                                                          ^^
C:623,0:contains: Comma not followed by a space
def contains(s,characters=PUNC):
              ^^
C:623,0:contains: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:623,0:contains: Missing docstring
C:623,13:contains: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:624,4:contains: Operator not preceded by a space
    N=0
     ^
C:624,4:contains: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:626,8:contains: Invalid name "N1" (should match [a-z_][a-z0-9_]{2,30}$)
C:627,8:contains: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:630,0:count: Comma not followed by a space
def count(s,characters=PUNC):
           ^^
C:630,0:count: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:630,0:count: Missing docstring
C:630,10:count: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:631,4:count: Comma not followed by a space
    return contains(s,characters)
                     ^^
C:633,0:count_unique: Comma not followed by a space
def count_unique(s,characters=PUNC):
                  ^^
C:633,0:count_unique: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:633,0:count_unique: Missing docstring
C:633,17:count_unique: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:634,4:count_unique: Operator not preceded by a space
    N=0
     ^
C:634,4:count_unique: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:635,4:count_unique: Operator not preceded by a space
    Nunique=0
           ^
C:635,4:count_unique: Invalid name "Nunique" (should match [a-z_][a-z0-9_]{2,30}$)
C:637,8:count_unique: Invalid name "N1" (should match [a-z_][a-z0-9_]{2,30}$)
C:638,8:count_unique: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:639,8:count_unique: Invalid name "Nunique" (should match [a-z_][a-z0-9_]{2,30}$)
C:640,4:count_unique: Comma not followed by a space
    return (N,Nunique)
             ^^
C:643,0:are_all_names: Comma not followed by a space
def are_all_names(s,confidence=.8):
                   ^^
C:643,0:are_all_names: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:643,0:are_all_names: Missing docstring
C:643,18:are_all_names: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:645,8:are_all_names: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:647,8:are_all_names: Operator not preceded by a space
        if c_all>confidence:
                ^
E:651,15:are_all_names: Undefined variable 'is_name'
W:654,21:is_list_of_lists: Redefining name 'x' from outer scope (line 87)
C:654,0:is_list_of_lists: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:654,21:is_list_of_lists: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:656,32:is_list_of_lists: More than one statement on a single line
W:657,36:is_list_of_lists: Used builtin function 'map'
W:660,32:contains_only_lists: Redefining name 'x' from outer scope (line 87)
C:659,0:contains_only_lists: Invalid name "l" (should match [a-z_][a-z0-9_]{2,30}$)
C:659,0:contains_only_lists: Missing docstring
C:659,24:contains_only_lists: Invalid name "l" (should match [a-z_][a-z0-9_]{2,30}$)
C:660,4:contains_only_lists: Comma not followed by a space
    return len(l) == len([x for x in l if isinstance(x,list)])
                                                      ^^
C:662,0:are_names: Comma not followed by a space
def are_names(s,delete_last_empty=True):
               ^^
W:668,8:are_names: Redefining name 'x' from outer scope (line 87)
C:662,0:are_names: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:662,0:are_names: Missing docstring
C:662,14:are_names: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:666,8:are_names: Operator not preceded by a space
        s=s[:-1]
         ^
C:666,8:are_names: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:667,4:are_names: Operator not preceded by a space
    c=[]
     ^
C:667,4:are_names: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:668,8:are_names: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:669,8:are_names: Invalid name "xs" (should match [a-z_][a-z0-9_]{2,30}$)
C:671,12:are_names: Operator not preceded by a space
            c0=0
              ^
C:671,12:are_names: Invalid name "c0" (should match [a-z_][a-z0-9_]{2,30}$)
C:673,12:are_names: Operator not preceded by a space
            c0=1
              ^
C:673,12:are_names: Invalid name "c0" (should match [a-z_][a-z0-9_]{2,30}$)
C:676,12:are_names: Comma not followed by a space
            c0 *= max(1     -.01*contains(xs,PUNC)  ,0.01)
                                            ^^
C:676,12:are_names: Invalid name "c0" (should match [a-z_][a-z0-9_]{2,30}$)
C:678,12:are_names: Comma not followed by a space
            c0 *= min( 0.01 +.89 * count(xs,LETTER) ,1.00 )
                                           ^^
C:678,12:are_names: Invalid name "c0" (should match [a-z_][a-z0-9_]{2,30}$)
C:680,12:are_names: Comma not followed by a space
            c0 *= max( 1.00 -.50 * (count(xs,WORDSPACE)/max(count(xs,LETTER),0.01))**2 ,0.10 )
                                            ^^
C:680,12:are_names: Invalid name "c0" (should match [a-z_][a-z0-9_]{2,30}$)
C:682,12:are_names: Comma not followed by a space
            c0 *= max( 1.00 -.20 * (count(xs,NONPRINTABLE)**2) ,0.01 )
                                            ^^
C:682,12:are_names: Invalid name "c0" (should match [a-z_][a-z0-9_]{2,30}$)
C:684,12:are_names: Comma not followed by a space
            c0 *= max( 1.00 -.05 * count(xs,NONNAMELETTER) ,0.01 )
                                           ^^
C:684,12:are_names: Invalid name "c0" (should match [a-z_][a-z0-9_]{2,30}$)
C:686,12:are_names: Comma not followed by a space
            c0 *= max( 1.00 -.01 * count(xs, DIGIT) ,0.01 )
                                                    ^^
C:686,12:are_names: Invalid name "c0" (should match [a-z_][a-z0-9_]{2,30}$)
C:688,12:are_names: Comma not followed by a space
            c0 *= max( 1.00 -.50 * (count(xs.rstrip(DIGIT),DIGIT)/max(count(xs,LETTER),0.01))**2 ,0.10 )
                                                          ^^
C:688,12:are_names: Invalid name "c0" (should match [a-z_][a-z0-9_]{2,30}$)
C:689,12:are_names: Comma not followed by a space
            if contains(xs,DIGIT):
                          ^^
C:690,16:are_names: Invalid name "c0" (should match [a-z_][a-z0-9_]{2,30}$)
C:692,16:are_names: Invalid name "c0" (should match [a-z_][a-z0-9_]{2,30}$)
C:694,16:are_names: Invalid name "c0" (should match [a-z_][a-z0-9_]{2,30}$)
C:698,16:are_names: Comma not followed by a space
                c0 *= 1-min(abs(1-len(xs)/TYPICAL_NAME_LEN)/2,.6)
                                                             ^^
C:698,16:are_names: Invalid name "c0" (should match [a-z_][a-z0-9_]{2,30}$)
C:702,0:cleanpunc: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:702,14:cleanpunc: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:710,4:cleanpunc: Comma not followed by a space
    return re.sub(r'\s*([;,!?.])[;,!?.]*\s+',r'\1 ',s)
                                            ^^
C:712,0:str_replace: Comma not followed by a space
def str_replace(s,c='',i=0):
                 ^^
C:712,0:str_replace: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:712,0:str_replace: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:712,16:str_replace: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:712,18:str_replace: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:718,0:titlize: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:718,12:titlize: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:725,4:titlize: Operator not preceded by a space
    s2=s;
      ^
C:725,4:titlize: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
C:729,4:titlize: Operator not preceded by a space
    capit=False
         ^
C:730,4:titlize: Comma not followed by a space
    for i,c in enumerate(s):
         ^^
C:730,10:titlize: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:732,12:titlize: Operator not preceded by a space
            capit=True
                 ^
C:734,12:titlize: Operator not preceded by a space
            capit=False
                 ^
C:735,12:titlize: Operator not preceded by a space
            s2=str_replace(s2,c.upper()[0],i) # c just points back to the original character in the string, right?
              ^
C:735,12:titlize: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
C:738,0:variablize: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:738,15:variablize: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:749,4:variablize: Comma not followed by a space
    if isinstance(s,(str,unicode)):
                   ^^
C:761,0:split_string: Comma not followed by a space
def split_string(source,splitlist):
                       ^^
C:777,4:split_string: Operator not followed by a space
    result =[]
           ^
C:778,4:split_string: Operator not preceded by a space
    i0=0
      ^
C:778,4:split_string: Invalid name "i0" (should match [a-z_][a-z0-9_]{2,30}$)
C:779,4:split_string: Operator not preceded by a space
    nonsep=False
          ^
C:780,4:split_string: Comma not followed by a space
    for i,c in enumerate(source):
         ^^
C:780,10:split_string: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:782,12:split_string: Operator not preceded by a space
            if i>i0 and nonsep:
                ^
C:784,12:split_string: Operator not preceded by a space
            i0=i+1
              ^
C:784,12:split_string: Invalid name "i0" (should match [a-z_][a-z0-9_]{2,30}$)
C:790,0:filename2modelname: Comma not followed by a space
def filename2modelname(filename,prefix='NLPModel'):
                               ^^
C:795,0:similarity: Comma not followed by a space
def similarity(s1='',s2='',ignorechars=PUNC+SPACE):
                    ^^
C:795,0:similarity: Invalid name "s1" (should match [a-z_][a-z0-9_]{2,30}$)
C:795,0:similarity: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
C:795,0:similarity: Missing docstring
C:795,15:similarity: Invalid name "s1" (should match [a-z_][a-z0-9_]{2,30}$)
C:795,21:similarity: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
C:796,4:similarity: Comma not followed by a space
    return difflib.SequenceMatcher(lambda x: x in ignorechars,s1,s2).ratio()
                                                             ^^
C:836,8:Features.__init__: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:824,8:Features.__init__: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:823,4:Features.__init__: Comma not followed by a space
    def __init__(self,s):
                     ^^
C:823,4:Features.__init__: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:823,22:Features.__init__: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:831,8:Features.__init__: Comma not followed by a space
        for i,word in enumerate(self.wordlist[1:]):
             ^^
C:833,16:Features.__init__: Operator not preceded by a space
                self.wordlist[i-1]='\''.join(wordlist[i-1:i])
                                  ^
E:833,45:Features.__init__: Undefined variable 'wordlist'
C:839,8:Features.__init__: Comma not followed by a space
        for i,word in enumerate(self.wordlist[:-1]):
             ^^
C:840,12:Features.__init__: Operator not preceded by a space
            newword=word
                   ^
C:841,12:Features.__init__: Operator not preceded by a space
            self.sequences[i]=[word]
                             ^
C:842,12:Features.__init__: Operator not preceded by a space
            seq=[]
               ^
C:843,12:Features.__init__: Comma not followed by a space
            for j in range(1,min(self.MAX_SEQUENCE_LENGTH,len(self.wordlist)-i)):
                            ^^
C:858,4:Features.set: Missing docstring
C:860,4:Features.list: Missing docstring
C:862,4:Features.__cmp__: Comma not followed by a space
    def __cmp__(self,other):
                    ^^
W:863,8:Features.__cmp__: Statement seems to have no effect
C:866,4:Features.similarity: Comma not followed by a space
    def similarity(self,f): # TODO: enforce argument type (e.g. f=Features)
                       ^^
C:866,4:Features.similarity: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:866,4:Features.similarity: Missing docstring
C:866,24:Features.similarity: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
W:884,0: Reimport 're' (imported line 173)
C:891,0:NLRE_Pattern: Invalid name "NLRE_Pattern" (should match [A-Z_][a-zA-Z0-9]+$)
W:898,4:NLRE_Pattern.__init__: Dangerous default value [] as argument
C:899,8:NLRE_Pattern.__init__: Comma not followed by a space
        self.re_pattern = self.compile(pattern,flags)
                                              ^^
W:904,8:NLRE_Pattern.compile: Unreachable code
W:904,8:NLRE_Pattern.compile: Unnecessary pass statement
R:901,4:NLRE_Pattern.compile: Method could be a function
E:909,15:NLRE_Pattern.match: Instance of 'NLRE_Pattern' has no '_compile' member
C:912,0:try_int: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:912,0:try_int: Missing docstring
C:912,12:try_int: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
W:935,19:undefined_to_string: Used builtin function 'map'
C:974,0:_test: Missing docstring
W:305,0: Unused import stderr
W:305,0: Unused import stdout
W:305,0: Unused import stdin
W: 60,4: Unused import eol
************* Module tagim.tg.progress
C: 64,0: Line too long (84/80)
C:  1,0: Missing docstring
C: 13,4:ProgressBase._show: Missing docstring
R:  5,0:ProgressBase: Too few public methods (0/2)
C: 19,0:with_spinner: Invalid name "with_spinner" (should match [A-Z_][a-zA-Z0-9]+$)
C: 38,4:with_spinner.update: Missing docstring
C: 45,4:with_spinner.stop: Missing docstring
C: 56,0:with_progress_meter: Invalid name "with_progress_meter" (should match [A-Z_][a-zA-Z0-9]+$)
C: 72,8:with_progress_meter.__init__: Invalid name "at" (should match [a-z_][a-z0-9_]{2,30}$)
C: 78,4:with_progress_meter.update: Invalid name "at" (should match [a-z_][a-z0-9_]{2,30}$)
C: 78,4:with_progress_meter.update: Missing docstring
C: 78,21:with_progress_meter.update: Invalid name "at" (should match [a-z_][a-z0-9_]{2,30}$)
C: 85,4:with_progress_meter.stop: Missing docstring
C: 90,8:with_progress_meter.__iter__: Invalid name "at" (should match [a-z_][a-z0-9_]{2,30}$)
C: 93,12:with_progress_meter.__iter__: Invalid name "at" (should match [a-z_][a-z0-9_]{2,30}$)
C: 97,4:with_progress_meter._progress: Missing docstring
************* Module tagim.tg.basic_arguments
C:  1,0: Missing docstring
************* Module tagim.tg.bitcrawl
C:  3,0: Line too long (82/80)
C: 21,0: Line too long (94/80)
C: 22,0: Line too long (92/80)
C: 24,0: Line too long (157/80)
C: 25,0: Line too long (125/80)
C: 26,0: Line too long (87/80)
C: 27,0: Line too long (123/80)
C: 28,0: Line too long (123/80)
C: 29,0: Line too long (133/80)
C: 30,0: Line too long (129/80)
C: 31,0: Line too long (131/80)
C: 32,0: Line too long (85/80)
C: 33,0: Line too long (126/80)
C: 36,0: Line too long (83/80)
C: 41,0: Line too long (112/80)
C: 42,0: Line too long (91/80)
C: 43,0: Line too long (111/80)
C: 60,0: Line too long (121/80)
C: 61,0: Line too long (98/80)
C: 62,0: Line too long (97/80)
C: 63,0: Line too long (160/80)
C: 65,0: Line too long (93/80)
C:132,0: Line too long (161/80)
C:141,0: Line too long (141/80)
C:147,0: Line too long (144/80)
C:153,0: Line too long (111/80)
C:161,0: Line too long (112/80)
C:169,0: Line too long (111/80)
C:192,0: Line too long (84/80)
C:202,0: Line too long (86/80)
C:205,0: Line too long (126/80)
C:229,0: Line too long (91/80)
C:248,0: Line too long (110/80)
C:256,0: Line too long (132/80)
C:268,0: Line too long (92/80)
C:283,0: Line too long (102/80)
C:284,0: Line too long (118/80)
C:291,0: Line too long (81/80)
C:292,0: Line too long (81/80)
C:293,0: Line too long (81/80)
C:297,0: Line too long (110/80)
C:301,0: Line too long (107/80)
C:368,0: Line too long (124/80)
C:388,0: Line too long (121/80)
C:410,0: Line too long (91/80)
C:439,0: Line too long (126/80)
C:443,0: Line too long (129/80)
C:449,0: Line too long (94/80)
C:455,0: Line too long (85/80)
C:458,0: Line too long (94/80)
C:459,0: Line too long (87/80)
C:462,0: Line too long (94/80)
C:470,0: Line too long (132/80)
C:480,0: Line too long (89/80)
C:481,0: Line too long (82/80)
C:505,0: Line too long (89/80)
C:512,0: Line too long (89/80)
C:513,0: Line too long (113/80)
C:527,0: Line too long (84/80)
C:548,0: Line too long (84/80)
C:555,0: Line too long (107/80)
C:556,0: Line too long (118/80)
C:557,0: Line too long (104/80)
C:575,0: Line too long (92/80)
C:582,0: Line too long (98/80)
C:593,0: Line too long (87/80)
C:602,0: Line too long (85/80)
C:608,0: Line too long (96/80)
C:619,0: Line too long (90/80)
C:628,0: Line too long (91/80)
C:629,0: Line too long (98/80)
C:638,0: Line too long (117/80)
C:644,0: Line too long (100/80)
C:649,0: Line too long (82/80)
C:681,0: Line too long (126/80)
C:701,0: Line too long (95/80)
C:733,0: Line too long (112/80)
C:746,0: Line too long (94/80)
C:752,0: Line too long (95/80)
C:777,0: Line too long (94/80)
C:781,0: Line too long (89/80)
C:785,0: Line too long (155/80)
C:799,0: Line too long (91/80)
C:825,0: Line too long (83/80)
C:839,0: Line too long (148/80)
C:855,0: Line too long (89/80)
C:860,0: Line too long (106/80)
C:863,0: Line too long (191/80)
C:868,0: Line too long (83/80)
C:869,0: Line too long (84/80)
C:895,0: Line too long (81/80)
C:903,0: Line too long (97/80)
C:909,0: Line too long (83/80)
C:942,0: Line too long (98/80)
C:950,0: Line too long (103/80)
C:956,0: Line too long (94/80)
C:957,0: Line too long (95/80)
C:966,0: Line too long (86/80)
C:979,0: Line too long (81/80)
C:1008,0: Line too long (100/80)
C:1023,0: Line too long (86/80)
C:1026,0: Line too long (118/80)
C:1035,0: Line too long (86/80)
C:1096,0: Line too long (87/80)
C:1141,0: Line too long (84/80)
C:1145,0: Line too long (106/80)
C:1146,0: Line too long (115/80)
C:1147,0: Line too long (104/80)
C:1154,0: Line too long (88/80)
C:1200,0: Line too long (123/80)
C:1202,0: Line too long (96/80)
C:1215,0: Line too long (102/80)
C:1230,0: Line too long (90/80)
C:1244,0: Line too long (82/80)
C:1264,0: Line too long (82/80)
C:1273,0: Line too long (105/80)
C:1284,0: Line too long (84/80)
C:1304,0: Line too long (100/80)
C:1331,0: Line too long (100/80)
C:1337,0: Line too long (86/80)
C:1344,0: Line too long (84/80)
C:1348,0: Line too long (92/80)
C:1382,0: Line too long (83/80)
C:1424,0: Line too long (103/80)
C:1448,0: Line too long (132/80)
C:1461,0: Line too long (126/80)
C:1470,0: Line too long (105/80)
C:1505,0: Line too long (106/80)
C:1526,0: Line too long (90/80)
C:  1,0: Too many lines in module (1554)
W: 20,0: TODO:
W: 40,0: TODO: smart import by wrapping all import statements in try: blocks
W: 41,0: TODO: smarter import with gracefull fallback to "pass" or simple local implementations for unavailable modules
W: 42,0: TODO: smartest import with pip install (setup.py install) of missing modules, if possible
W: 43,0: TODO: ai import with automatic, on-the-fly, python source code generation... with comments and docstrings! ;)
W:141,0: TODO: generalize column/row/element extractors
W:186,0: FIXME: what about '\r\n' in Windows
W:189,0: TODO: function to extract/process CSV
W:210,0: TODO: 
W:236,0: TODO: put all these error handlers into our Bot class
W:385,0: FIXME: parse the AM/PM bit
W:434,0: TODO: walk the dimensions of the lists, doing a size() to find which 
W:449,0: FIXME: doesn't work for 2-D y and 1-D x
W:458,0: TODO: check the length of x[0] and y[0] to see which dimension in y corresponds to x
W:460,0: TODO: now that we're at the innermost dimension of the 2 lists, we need
W:462,0: TODO: sort x,y (together as pairs of tuples) before interpolating, then unsort when done
W:513,0: TODO: make this a 2-D array with the article title and various view rate stats for each element in articles
W:548,0: TODO: compute and return other statistics about the page associated with the page:
W:561,0: TODO: 
W:595,0: TODO: set default url if not url
W:615,0: FIXME: ANTIIDIOM
W:635,0: TODO: use os.path_exists instead of try
W:677,0: FIXME, commas and parentheses don't work !
W:682,0: FIXME: needs to subparse the slice notation, e.g. '1:2:3'
W:709,0: TODO: generalize query parsing with regex
W:713,0: FIXME: this will break if different types of braces are used in a row
W:733,0: FIXME: this is no longer required for auto-correlation, unless you just want to double-check the algorithm
W:751,0: TODO: incoporate interpolation 
W:900,0: TODO: add more (all Standard International prefixes)
W:903,0: TODO: pull factors from most recent conversion rate data in historical file or config file?
W:904,0: TODO: add national currencies and a few digital ones (e.g. Linden dollars)
W:906,0: TODO: DRY-out
W:916,0: TODO: return in a tuple?
W:946,0: TODO: check tg.nlp.is_bool() before converting to numerical float
W:1011,0: FIXME:
W:1050,0: TODO: fill gaps in inconsistent row lengths with None elements to maintain geometry
W:1123,0: TODO: this should be try: f=open(): to avoid race condition
W:1139,0: TODO: set default url if not url
W:1145,0: TODO: extract or create a variable name along with extracting the actual numerical value, see tg.nlp
W:1146,0: TODO: extract or create a unit of measure string along with extracting the actual numerical value, see tg.nlp
W:1153,0: TODO: set default url if not url
W:1255,0: TODO:
W:1262,0: TODO size() needs to handle high-dimensionality
W:1343,0: TODO: obviously there's a non-DRY pattern here, 
W:1348,0: FIXME: doing this with every recursive call is phenommenally inefficient
W:1445,0: TODO calculate for all paramters and find the maximum
W:1470,0: TODO: load data inside one set of conditionals, then extrace columns in another set of conditionals
W:1505,0: TODO: refactor as class method bitcrawl.Data.dump() or Django Model with at repr or str or dump() method
W:1552,0: TODO: don't rull all tests!
W: 46,0: Relative import 'tz', should be 'tagim.tg.tz'
F: 56,0: Unable to import 'matplotlib.pyplot'
W: 57,0: Relative import 'utils', should be 'tagim.tg.utils'
C: 60,0: Operator not preceded by a space
FILEPATH=os.path.expanduser('data/bitcrawl_historical_data.json') # change this to a path you'd like to use to store data
        ^
C: 61,0: Operator not preceded by a space
MIN_ORDINAL=1800*365.25 # data associated with datetime ordinals smaller than this will be ignored
           ^
C: 62,0: Operator not preceded by a space
MAX_ORDINAL=2100*365.25 # data associated with datetime ordinals larger than this will be ignored
           ^
C: 66,0: Operator not preceded by a space
URLs={'network':
    ^
        {
          'url': 'http://bitcoincharts.com/about/markets-api/',
          'blocks':
            [r'<td class="label">Blocks</td><td>',          # (?<= ... )\s*
             r'[0-9]{1,9}'                               ],  # (...)
          'total_btc': # total money supply of BTC
            [r'<td class="label">Total BTC</td><td>',
             r'[0-9]{0,2}[.][0-9]{1,4}[TGMKkBb]' ],
          'difficulty':
            [r'<td class="label">Difficulty</td><td>',
             r'[0-9]{1,10}' ],
          'estimated': # total money supply of BTC
            [r'<td class="label">Estimated</td><td>',
             r'[0-9]{1,10}' ] ,
          'blocks':     # total money supply of BTC blocks
            [r'<td class="label">Estimated</td><td>\s*[0-9]{1,10}\s*in',
             r'[0-9]{1,10}' ] ,
          'hash_rate':     # THash/s on the entire BTC network
            [r'<td class="label">Network total</td><td>',
             r'[0-9]{0,2}[.][0-9]{1,4}' ],
          'block_rate':     # blocks/hr on the entire BTC network
            [r'<td class="label">Blocks/hour</td><td>',
             r'[0-9]{0,3}[.][0-9]{1,4}' ] } ,
    'trade': {
        'url': 'https://en.bitcoin.it/wiki/Trade',
        'visits':
            [r'has\sbeen\saccessed\s',
             r'([0-9]{1,3}[,]?){1,4}'  ] },
    'shop': {
        'url': 'https://en.bitcoin.it/wiki/Real_world_shops',
        'visits':
            [r'has\sbeen\saccessed\s',
             r'([0-9]{1,3}[,]?){1,4}'  ] },
    'bitcoin': {
        'url': 'https://en.bitcoin.it/wiki/Main_Page',
        'visits':
            [r'has\sbeen\saccessed\s',
             r'([0-9]{1,3}[,]?){1,4}'  ] },






    'mtgox':    {
        'url': 'https://mtgox.com',
        'average':
        [r'Weighted\s*Avg\s*:\s*<span>',
         r'\$[0-9]{1,2}[.][0-9]{3,6}' ],
        'last':
        [r'Last\s*price\s*:\s*<span>',
         r'\$[0-9]{1,2}[.][0-9]{3,6}' ],
        'high':
        [r'High\s*:\s*<span>',
         r'\$[0-9]{1,2}[.][0-9]{3,6}' ],
        'low':
        [r'Low\s*:\s*<span>',
         r'\$[0-9]{1,2}[.][0-9]{3,6}' ],
        'volume':
        [r'Volume\s*:\s*<span>',
         r'[0-9,]{1,9}' ] },
    'virwox': {
        'url': 'https://www.virwox.com/',
        'volume':  # 24 hr volume

        [r"(?s)<fieldset>\s*<legend>\s*Trading\s*Volume\s*\(SLL\)\s*</legend>\s*<table.*?>\s*<tr.*?>\s*<td>\s*<b>\s*24\s*[Hh]ours\s*[:]?\s*</b>\s*</td>\s*<td>",
         r'[0-9,]{1,12}'],
        'SLLperUSD_ask':
        [r"<tr.*?>USD/SLL</th><td.*?'buy'.*?>",
         r'[0-9]{1,6}[.]?[0-9]{0,3}'],
        'SLLperUSD_bid':
        [r"<tr.*?>USD/SLL</th.*?>\s*<td.*?'buy'.*?>.*?</td>\s*<td.*?'sell'.*?>",
         r'[0-9]{1,6}[.]?[0-9]{0,3}'],
        'BTCperSLL_ask':
        [r"<tr.*?><th.*?>BTC/SLL\s*</th>\s*<td\s*class\s*=\s*'buy'\s*width=\s*'33%'\s*>\s*", # TODO: generalize column/row/element extractors
         r'[0-9]{1,6}[.]?[0-9]{0,3}'],
        'BTCperSLL_bid':
        [r"<tr.*?>BTC/SLL</th.*?>\s*<td.*?'buy'.*?>.*?</td>\s*<td.*?'sell'.*?>",
         r'[0-9]{1,6}[.]?[0-9]{0,3}'] },
    'cointron': {
        'url': 'http://coinotron.com/coinotron/AccountServlet?action=home', # miner doesn't follow redirects like a browser so must use full URL
        'hash_rate':
        [r'<tr.*?>\s*<td.*?>\s*BTC\s*</td>\s*<td.*?>\s*',
         r'[0-9]{1,3}[.][0-9]{1,4}\s*[TMG]H',
         r'</td>'], # unused suffix
        'miners':
        [r'(?s)<tr.*?>\s*<td.*?>\s*BTC\s*</td>\s*<td.*?>\s*[0-9]{1,3}[.][0-9]{1,4}\s*[TGM]?H\s*</td>\s*<td.*?>'
         r'[0-9]{1,4}\s*[BbMmKk]?',
         r'</td>'], # unused suffix
        'hash_rate_LTC':  # lightcoin
        [r'<tr.*?>\s*<td.*?>\s*LTC\s*</td>\s*<td.*?>\s*',
         r'[0-9]{1,3}[.][0-9]{1,4}\s*[TMG]H',
         r'</td>'], # unused suffix
        'miners_LTC':
        [r'(?s)<tr.*?>\s*<td.*?>\s*LTC\s*</td>\s*<td.*?>\s*[0-9]{1,3}[.][0-9]{1,4}\s*[TGM]?H\s*</td>\s*<td.*?>',
         r'[0-9]{1,4}\s*[BbMmKk]?',
         r'</td>'], # unused suffix
        'hash_rate_SC':  # scamcoin
        [r'<tr.*?>\s*<td.*?>\s*SC\s*</td>\s*<td.*?>\s*',
         r'[0-9]{1,3}[.][0-9]{1,4}\s*[TMG]H',
         r'</td>'], # unused suffix
        'miners_SC':
        [r'(?s)<tr.*?>\s*<td.*?>\s*SC\s*</td>\s*<td.*?>\s*[0-9]{1,3}[.][0-9]{1,4}\s*[TGM]?H\s*</td>\s*<td.*?>',
         r'[0-9]{1,4}\s*[BbMmKk]?',
         r'</td>'] }, # unused suffix
C: 66,0: Invalid name "URLs" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
W: 67,8: Duplicate key 'blocks' in dictionary
W:183,8:get_seeds: No exception type(s) specified
C:181,8:get_seeds: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:185,4:get_seeds: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
W:227,43:Bot.GET: Redefining built-in 'len'
C:227,4:Bot.GET: Invalid name "GET" (should match [a-z_][a-z0-9_]{2,30}$)
C:227,4:Bot.GET: Missing docstring
C:230,8:Bot.GET: Comma not followed by a space
        delay = min(max(delay,0.1),3600)
                             ^^
C:237,39:Bot.GET: Invalid name "e" (should match [a-z_][a-z0-9_]{2,30}$)
C:239,34:Bot.GET: Invalid name "e" (should match [a-z_][a-z0-9_]{2,30}$)
C:241,38:Bot.GET: Invalid name "e" (should match [a-z_][a-z0-9_]{2,30}$)
C:243,33:Bot.GET: Invalid name "e" (should match [a-z_][a-z0-9_]{2,30}$)
C:252,16:Bot.GET: Comma not followed by a space
                return self.GET(url,retries-1)
                                   ^^
W:258,16:Bot.GET: No exception type(s) specified
C:261,4:Bot.POST: Invalid name "POST" (should match [a-z_][a-z0-9_]{2,30}$)
C:261,4:Bot.POST: Missing docstring
W:276,8:get_page: No exception type(s) specified
C:326,0:zero_if_none: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:326,0:zero_if_none: Missing docstring
C:326,17:zero_if_none: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:331,0:parse_date: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:331,15:parse_date: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:348,4:parse_date: Operator not preceded by a space
    mo=DATETIME_PATTERN.search(s)
      ^
C:348,4:parse_date: Invalid name "mo" (should match [a-z_][a-z0-9_]{2,30}$)
C:350,8:parse_date: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C:353,16:parse_date: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C:358,8:parse_date: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C:360,8:parse_date: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:361,8:parse_date: Invalid name "h" (should match [a-z_][a-z0-9_]{2,30}$)
C:362,8:parse_date: Invalid name "m" (should match [a-z_][a-z0-9_]{2,30}$)
C:364,8:parse_date: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:365,8:parse_date: Invalid name "us" (should match [a-z_][a-z0-9_]{2,30}$)
C:366,8:parse_date: Comma not followed by a space
        return datetime.datetime(y,mon,d,h,m,s,us)
                                  ^^
C:370,0:parse_time: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:370,15:parse_time: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:378,4:parse_time: Operator not preceded by a space
    mo=TIME_PATTERN.search(s)
      ^
C:378,4:parse_time: Invalid name "mo" (should match [a-z_][a-z0-9_]{2,30}$)
C:380,8:parse_time: Invalid name "h" (should match [a-z_][a-z0-9_]{2,30}$)
C:381,8:parse_time: Invalid name "m" (should match [a-z_][a-z0-9_]{2,30}$)
C:383,8:parse_time: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:384,8:parse_time: Invalid name "us" (should match [a-z_][a-z0-9_]{2,30}$)
C:386,8:parse_time: Comma not followed by a space
        return datetime.time(h,m,s,us)
                              ^^
C:404,0:union: Comma not followed by a space
def union(p,q):
           ^^
C:404,0:union: Invalid name "p" (should match [a-z_][a-z0-9_]{2,30}$)
C:404,0:union: Invalid name "q" (should match [a-z_][a-z0-9_]{2,30}$)
C:404,0:union: Missing docstring
C:404,10:union: Invalid name "p" (should match [a-z_][a-z0-9_]{2,30}$)
C:404,12:union: Invalid name "q" (should match [a-z_][a-z0-9_]{2,30}$)
C:405,8:union: Invalid name "e" (should match [a-z_][a-z0-9_]{2,30}$)
C:409,0:interp_multicol: Comma not followed by a space
def interp_multicol(lol,newx=None):
                       ^^
C:417,4:interp_multicol: Operator not preceded by a space
    x=lol[0]
     ^
C:417,4:interp_multicol: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:419,4:interp_multicol: Comma not followed by a space
    for c,col in enumerate(lol[1:]):
         ^^
C:419,8:interp_multicol: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:421,8:interp_multicol: Comma not followed by a space
        lol[c+1] = interpolate(x,col,newx)
                                ^^
C:423,0:interpolate: Comma not followed by a space
def interpolate(x,y,newx=None,method='linear',verbose=True):
                 ^^
W:423,46:interpolate: Redefining name 'verbose' from outer scope (line 1540)
C:423,0:interpolate: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:423,0:interpolate: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C:423,16:interpolate: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:423,18:interpolate: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C:437,4:interpolate: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:441,4:interpolate: Comma not followed by a space
    if isinstance(x[0],(float,int,str)) and isinstance(y[0],(list,tuple)):
                      ^^
E:443,94:interpolate: Undefined variable 'y2'
C:444,8:interpolate: Invalid name "x2" (should match [a-z_][a-z0-9_]{2,30}$)
C:446,12:interpolate: Invalid name "x2" (should match [a-z_][a-z0-9_]{2,30}$)
C:447,12:interpolate: Comma not followed by a space
            for i,x2 in enumerate(x):
                 ^^
C:447,18:interpolate: Invalid name "x2" (should match [a-z_][a-z0-9_]{2,30}$)
C:449,8:interpolate: Comma not followed by a space
        return interpolate(x2,y,newx,method,verbose) # FIXME: doesn't work for 2-D y and 1-D x
                             ^^
W:450,8:interpolate: Unreachable code
C:451,12:interpolate: Operator not preceded by a space
            y1=[]
              ^
C:451,12:interpolate: Invalid name "y1" (should match [a-z_][a-z0-9_]{2,30}$)
C:453,16:interpolate: Operator not preceded by a space
                if j<len(y[i]):
                    ^
C:454,20:interpolate: Invalid name "y1" (should match [a-z_][a-z0-9_]{2,30}$)
C:457,9:interpolate: Comma not followed by a space
    elif isinstance(x[0],(list,tuple)) and isinstance(y[0],(list,tuple)):
                        ^^
C:459,8:interpolate: Comma not followed by a space
        return [ interpolate(x1,y1,newx,method,verbose=verbose) for x1,y1 in zip(x,y) ]
                               ^^
C:464,8:interpolate: Comma not followed by a space
        N = max(len(x),2)
                      ^^
C:464,8:interpolate: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:468,4:interpolate: Operator not preceded by a space
    N=len(newx)
     ^
C:468,4:interpolate: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:472,14:interpolate: Invalid name "x0" (should match [a-z_][a-z0-9_]{2,30}$)
C:472,18:interpolate: Invalid name "y0" (should match [a-z_][a-z0-9_]{2,30}$)
C:476,16:interpolate: Invalid name "x0" (should match [a-z_][a-z0-9_]{2,30}$)
C:476,20:interpolate: Invalid name "y0" (should match [a-z_][a-z0-9_]{2,30}$)
C:487,8:interpolate: Comma not followed by a space
        for j in range(j,N):
                        ^^
R:423,0:interpolate: Too many branches (19/12)
C:498,4:var2: Operator not preceded by a space
    averagelist=[]
               ^
C:499,4:var2: Operator not followed by a space
    variance =0
             ^
C:507,8:var2: Invalid name "e" (should match [a-z_][a-z0-9_]{2,30}$)
C:512,0:wikipedia_view_rates: Comma not followed by a space
def wikipedia_view_rates(articles=['Bitcoin','James_Surowiecki'],verbose=False,names=''):
                                            ^^
W:512,65:wikipedia_view_rates: Redefining name 'verbose' from outer scope (line 1540)
W:512,0:wikipedia_view_rates: Dangerous default value ['Bitcoin', 'James_Surowiecki'] as argument
C:512,0:wikipedia_view_rates: Missing docstring
C:517,9:wikipedia_view_rates: Comma not followed by a space
    elif isinstance(names,str):
                         ^^
C:518,8:wikipedia_view_rates: Operator not preceded by a space
        name=names
            ^
C:519,9:wikipedia_view_rates: Comma not followed by a space
    elif isinstance(names,list) and len(names)==len(articles):
                         ^^
C:520,8:wikipedia_view_rates: Comma not followed by a space
        for i,article in enumerate(articles):
             ^^
C:521,12:wikipedia_view_rates: Comma not followed by a space
            dat[name[i]] = wikipedia_view_rate(article=article,verbose=verbose)
                                                              ^^
C:527,8:wikipedia_view_rates: Comma not followed by a space
        dat[name+'_'+article] = wikipedia_view_rate(article=article,verbose=verbose)
                                                                   ^^
C:530,0:wikipedia_view_rate: Comma not followed by a space
def wikipedia_view_rate(article='Bitcoin',verbose=False):
                                         ^^
W:530,42:wikipedia_view_rate: Redefining name 'verbose' from outer scope (line 1540)
C:530,0:wikipedia_view_rate: Missing docstring
C:537,0:get_all_links: Missing docstring
C:540,8:get_all_links: Comma not followed by a space
        url,endpos = get_next_target(page)
           ^^
R:556,0:get_links: Too many arguments (6/5)
R:556,0:get_links: Too many local variables (16/15)
C:556,0:get_links: Comma not followed by a space
def get_links(url='https://en.bitcoin.it/wiki/Trade',max_depth=1,max_breadth=1e6,max_links=1e6,verbose=False,name=''):
                                                    ^^
W:556,95:get_links: Redefining name 'verbose' from outer scope (line 1540)
C:578,4:get_links: Operator not preceded by a space
    while depth<=max_depth and links<max_links:
               ^^
C:581,12:get_links: Operator not preceded by a space
            i0=len(tocrawl)
              ^
C:581,12:get_links: Invalid name "i0" (should match [a-z_][a-z0-9_]{2,30}$)
C:587,12:get_links: Comma not followed by a space
            for i in range(i0,len(tocrawl)):
                             ^^
C:589,24:get_links: More than one statement on a single line
C:592,4:get_links: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C:593,4:get_links: Comma not followed by a space
    return {name:{'datetime':str(dt),'url':url,'links':len(crawled),'depth':max_depth}}
                                    ^^
W:556,65:get_links: Unused argument 'max_breadth'
W:587,16:get_links: Unused variable 'i'
C:596,0:rest_json: Comma not followed by a space
def rest_json(url='https://api.bitfloor.com/book/L2/1',verbose=False):
                                                      ^^
W:596,55:rest_json: Redefining name 'verbose' from outer scope (line 1540)
C:596,0:rest_json: Missing docstring
C:600,4:rest_json: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C:605,8:rest_json: Operator not preceded by a space
        data['datetime']=str(dt)
                        ^
C:606,8:rest_json: Operator not preceded by a space
        data['url']=url
                   ^
C:607,8:rest_json: Operator not preceded by a space
        data['len']=len(data_str)
                   ^
W:625,21:file_is_readable: Redefining built-in 'file'
C:625,0:file_is_readable: Missing docstring
C:626,23:file_is_readable: Invalid name "fp" (should match [a-z_][a-z0-9_]{2,30}$)
C:632,0:updateable: Comma not followed by a space
def updateable(path,initial_content='',min_size=0):
                   ^^
C:632,0:updateable: Missing docstring
C:634,8:updateable: Comma not followed by a space
        min_size = max(min_size,len(initial_content))
                               ^^
W:640,12:updateable: No exception type(s) specified
C:638,12:updateable: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
W:648,16:updateable: No exception type(s) specified
C:646,16:updateable: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:649,12:updateable: Comma not followed by a space
            f.seek(0,2)  # go to position 0 relative to 2=EOF (1=current, 0=begin)
                    ^^
C:656,20:updateable: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
W:664,16:updateable: No exception type(s) specified
C:662,16:updateable: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:666,16:updateable: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
R:632,0:updateable: Too many return statements (8/6)
C:672,0:parse_index: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:672,16:parse_index: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:681,4:parse_index: Operator not preceded by a space
    mo=re.match(r'[\[\(\{]+\s*(\d(?:\s*[:]\s*\d){0,2})+(?:\s*[\[\(\{\]\)\},; \t]\s*)+(\d(?:\s*[:]\s*\d){0,2})+\s*[\]\)\}]+',s)
      ^
C:681,4:parse_index: Invalid name "mo" (should match [a-z_][a-z0-9_]{2,30}$)
C:686,0:parse_query: Invalid name "q" (should match [a-z_][a-z0-9_]{2,30}$)
C:686,16:parse_query: Invalid name "q" (should match [a-z_][a-z0-9_]{2,30}$)
C:701,4:parse_query: Comma not followed by a space
    if q and isinstance(q,(list,set)): # a tuple is the return value for a single query string!
                         ^^
C:708,4:parse_query: Comma not followed by a space
    if q and isinstance(q,str):
                         ^^
C:711,8:parse_query: Comma not followed by a space
        u,v = tok[0].split('.')
         ^^
C:711,8:parse_query: Invalid name "u" (should match [a-z_][a-z0-9_]{2,30}$)
C:711,10:parse_query: Invalid name "v" (should match [a-z_][a-z0-9_]{2,30}$)
C:714,8:parse_query: Comma not followed by a space
        n = max(v.find('['),v.find('('),v.find('{'))
                           ^^
C:714,8:parse_query: Invalid name "n" (should match [a-z_][a-z0-9_]{2,30}$)
C:715,8:parse_query: Operator not preceded by a space
        if n>-1:
            ^
C:717,12:parse_query: Operator not preceded by a space
            indexes=parse_index(v[n:])
                   ^
C:723,12:parse_query: Invalid name "t" (should match [a-z_][a-z0-9_]{2,30}$)
C:727,16:parse_query: Operator not preceded by a space
                if i<len(tok):
                    ^
C:728,20:parse_query: Comma not followed by a space
                    if isinstance(parse_time(tok[i]),datetime.time):
                                                    ^^
C:729,24:parse_query: Invalid name "t" (should match [a-z_][a-z0-9_]{2,30}$)
W:717,12:parse_query: Unused variable 'indexes'
C:752,0:retrieve_data: Comma not followed by a space
def retrieve_data(sites='mtgox',values='average', datetimes=None, filepath=None, verbose=True):
                               ^^
W:752,81:retrieve_data: Redefining name 'verbose' from outer scope (line 1540)
C:764,4:retrieve_data: Comma not followed by a space
    if isinstance(sites,list) and isinstance(values,list):
                       ^^
C:767,8:retrieve_data: Comma not followed by a space
        return     [ retrieve_data(s,v)      for s,v in zip(sites,values) ]
                                    ^^
C:768,4:retrieve_data: Comma not followed by a space
    if isinstance(sites,list) and isinstance(values, str):
                       ^^
C:769,8:retrieve_data: Comma not followed by a space
        return [ retrieve_data(s,values) for s   in sites             ]
                                ^^
C:770,4:retrieve_data: Comma not followed by a space
    if isinstance(sites, str) and isinstance(values,list):
                                                   ^^
C:773,4:retrieve_data: Comma not followed by a space
    if isinstance(values,str) and isinstance(sites,str):
                        ^^
C:785,4:retrieve_data: Comma not followed by a space
    if not (isinstance(rows,list) or not isinstance(rows[0],list)): # should always be an Nx2 matrix with each element either a value or a list of M values
                           ^^
E:786,63:retrieve_data: Undefined variable 'columns'
C:789,4:retrieve_data: Invalid name "NM" (should match [a-z_][a-z0-9_]{2,30}$)
C:791,8:retrieve_data: Comma not followed by a space
        print "Retrieved an array of historical data records size",NM
                                                                  ^^
C:792,4:retrieve_data: Comma not followed by a space
    if (not rows or not isinstance(NM,(list,tuple)) or len(NM)<2 or
                                     ^^
                   any([nm<1 for nm in NM]) ):
C:797,4:retrieve_data: Invalid name "t" (should match [a-z_][a-z0-9_]{2,30}$)
C:800,8:retrieve_data: Invalid name "t" (should match [a-z_][a-z0-9_]{2,30}$)
C:803,8:retrieve_data: Invalid name "t" (should match [a-z_][a-z0-9_]{2,30}$)
R:752,0:retrieve_data: Too many return statements (8/6)
R:752,0:retrieve_data: Too many branches (13/12)
C:824,0:query_data: Comma not followed by a space
def query_data(q,filepath=None):
                ^^
C:824,0:query_data: Invalid name "q" (should match [a-z_][a-z0-9_]{2,30}$)
C:824,15:query_data: Invalid name "q" (should match [a-z_][a-z0-9_]{2,30}$)
C:839,0:bycol_key: Comma not followed by a space
def bycol_key(data, name='mtgox', yname='average', xname='datetime',verbose=False):#function for returning values given a key of the dictionary data
                                                                   ^^
W:839,68:bycol_key: Redefining name 'verbose' from outer scope (line 1540)
C:839,0:bycol_key: Missing docstring
C:840,4:bycol_key: Operator not followed by a space
    columns =[] # list of pairs of values
            ^
C:858,16:bycol_key: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C:861,20:bycol_key: Comma not followed by a space
                    columns.append([dt,value])
                                      ^^
C:865,8:bycol_key: Comma not followed by a space
        pprint(columns,indent=2)
                      ^^
C:868,0:byrow_key: Comma not followed by a space
def byrow_key(data, name='mtgox', yname='average', xname='datetime',verbose=False):
                                                                   ^^
W:868,68:byrow_key: Redefining name 'verbose' from outer scope (line 1540)
C:868,0:byrow_key: Missing docstring
C:869,4:byrow_key: Comma not followed by a space
    cols = bycol_key(data=data, name=name, yname=yname, xname=xname,verbose=verbose)
                                                                   ^^
C:870,4:byrow_key: Invalid name "NM" (should match [a-z_][a-z0-9_]{2,30}$)
C:872,4:byrow_key: Comma not followed by a space
    if (isinstance(NM,(list,tuple)) and len(NM)>1 and NM[0]>0 and NM[0]>0
                     ^^
                                    and any([n>1 for n in NM]) ):
C:877,0:str2float: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:877,14:str2float: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
W:888,8:str2float: No exception type(s) specified
W:892,8:str2float: No exception type(s) specified
C:890,8:str2float: Invalid name "s0" (should match [a-z_][a-z0-9_]{2,30}$)
C:893,12:str2float: Invalid name "s0" (should match [a-z_][a-z0-9_]{2,30}$)
C:897,4:str2float: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:901,4:str2float: Comma not followed by a space
    mags = {'G':1e9,'M':1e6,'k':1e3,'K':1e3,'m':1e-3}
                   ^^
C:905,4:str2float: Comma not followed by a space
    units = {'$':1.,'USD':1.,'AUD':1.3,'BTC':5.,'EU':2.,'bit':1e-3}
                   ^^
C:907,4:str2float: Operator not preceded by a space
    s=s.strip()
     ^
C:907,4:str2float: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:909,8:str2float: Operator not preceded by a space
        s=s.replace('KB','K').replace('kb','K').replace('Kb','K').replace('kB','K')
         ^
C:909,8:str2float: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:910,4:str2float: Comma not followed by a space
    for k,m in mags.items():
         ^^
C:910,10:str2float: Invalid name "m" (should match [a-z_][a-z0-9_]{2,30}$)
C:913,12:str2float: Operator not preceded by a space
            s=s.replace(k,'')
             ^
C:913,12:str2float: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:914,4:str2float: Comma not followed by a space
    for k,u in units.items():
         ^^
C:914,10:str2float: Invalid name "u" (should match [a-z_][a-z0-9_]{2,30}$)
C:915,8:str2float: Operator not preceded by a space
        s=s.replace(k,'')
         ^
C:915,8:str2float: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:918,4:str2float: Operator not preceded by a space
    s=s.strip()
     ^
C:918,4:str2float: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
W:922,8:str2float: No exception type(s) specified
W:899,4:str2float: Unused variable 'scale'
C:925,0:list2float: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:925,15:list2float: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:933,4:list2float: Comma not followed by a space
    if isinstance(s,(list,set,tuple)):
                   ^^
W:939,8:list2float: No exception type(s) specified
E:940,19:list2float: Undefined variable 'NaN'
C:941,8:list2float: Comma not followed by a space
        if not isinstance(s,(str,unicode)):
                           ^^
C:949,0:datetime2float: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C:949,19:datetime2float: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C:955,4:datetime2float: Comma not followed by a space
    if isinstance(dt,(list,set,tuple)):
                    ^^
C:958,12:datetime2float: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
E:966,21:datetime2float: Instance of 'list' has no 'toordinal' member (but some types could not be inferred)
E:966,37:datetime2float: Instance of 'list' has no 'hour' member (but some types could not be inferred)
E:966,49:datetime2float: Instance of 'list' has no 'minute' member (but some types could not be inferred)
E:966,67:datetime2float: Instance of 'list' has no 'second' member (but some types could not be inferred)
W:970,8:datetime2float: No exception type(s) specified
C:972,0:cov: Comma not followed by a space
def cov(A,B):
         ^^
W:976,34:cov: Redefining name 'a' from outer scope (line 1542)
C:972,0:cov: Invalid name "A" (should match [a-z_][a-z0-9_]{2,30}$)
C:972,0:cov: Invalid name "B" (should match [a-z_][a-z0-9_]{2,30}$)
C:972,8:cov: Invalid name "A" (should match [a-z_][a-z0-9_]{2,30}$)
C:972,10:cov: Invalid name "B" (should match [a-z_][a-z0-9_]{2,30}$)
C:974,4:cov: Invalid name "ma" (should match [a-z_][a-z0-9_]{2,30}$)
C:975,4:cov: Invalid name "mb" (should match [a-z_][a-z0-9_]{2,30}$)
C:976,4:cov: Comma not followed by a space
    return sum([(a-ma)*(b-mb) for a,b in zip(A,B)])/len(A)
                                   ^^
C:978,0:pearson: Comma not followed by a space
def pearson(A,B):
             ^^
C:978,0:pearson: Invalid name "A" (should match [a-z_][a-z0-9_]{2,30}$)
C:978,0:pearson: Invalid name "B" (should match [a-z_][a-z0-9_]{2,30}$)
C:978,12:pearson: Invalid name "A" (should match [a-z_][a-z0-9_]{2,30}$)
C:978,14:pearson: Invalid name "B" (should match [a-z_][a-z0-9_]{2,30}$)
C:980,4:pearson: Comma not followed by a space
    return cov(A,B)/std(A)/std(B)
                ^^
W:1013,21:lag_correlate: Redefining name 'a' from outer scope (line 1542)
W:983,32:lag_correlate: Redefining name 'verbose' from outer scope (line 1540)
C:1007,4:lag_correlate: Comma not followed by a space
    if not isinstance(rows,collections.Iterable):
                          ^^
C:1009,4:lag_correlate: Invalid name "NM" (should match [a-z_][a-z0-9_]{2,30}$)
C:1012,4:lag_correlate: Operator not preceded by a space
    if NM[-1]>2 and len(NM)==3 and NM[-2]==2:
             ^
C:1013,8:lag_correlate: Invalid name "C" (should match [a-z_][a-z0-9_]{2,30}$)
C:1014,8:lag_correlate: Comma not followed by a space
        for i,AA in enumerate(rows):
             ^^
C:1014,14:lag_correlate: Invalid name "AA" (should match [a-z_][a-z0-9_]{2,30}$)
C:1015,12:lag_correlate: Comma not followed by a space
            for j,BB in enumerate(rows):
                 ^^
C:1015,18:lag_correlate: Invalid name "BB" (should match [a-z_][a-z0-9_]{2,30}$)
C:1016,16:lag_correlate: Operator not preceded by a space
                C[i][j]=lag_correlate([AA[1],BB[1]],lead=lead,verbose=verbose)
                       ^
C:1020,8:lag_correlate: Invalid name "A" (should match [a-z_][a-z0-9_]{2,30}$)
C:1021,8:lag_correlate: Invalid name "B" (should match [a-z_][a-z0-9_]{2,30}$)
C:1023,8:lag_correlate: Invalid name "A" (should match [a-z_][a-z0-9_]{2,30}$)
C:1024,8:lag_correlate: Invalid name "B" (should match [a-z_][a-z0-9_]{2,30}$)
C:1027,4:lag_correlate: Invalid name "L" (should match [a-z_][a-z0-9_]{2,30}$)
C:1028,4:lag_correlate: Operator not preceded by a space
    if   L>0:
          ^
C:1029,8:lag_correlate: Comma not followed by a space
        c = pearson(A[L: ],B[  :-L])
                          ^^
C:1029,8:lag_correlate: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:1030,9:lag_correlate: Operator not preceded by a space
    elif L<0:
          ^
C:1031,8:lag_correlate: Comma not followed by a space
        c = pearson(A[ :L],B[-L:  ])
                          ^^
C:1031,8:lag_correlate: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:1033,8:lag_correlate: Comma not followed by a space
        c = pearson(A     ,B       )
                          ^^
C:1033,8:lag_correlate: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
C:1034,4:lag_correlate: Operator not preceded by a space
    if verbose>2:
              ^
W:1013,21:lag_correlate: Unused variable 'a'
W:1013,36:lag_correlate: Unused variable 'b'
C:1038,0:combo_correlate: Comma not followed by a space
def combo_correlate(A,B):
                     ^^
C:1038,0:combo_correlate: Invalid name "A" (should match [a-z_][a-z0-9_]{2,30}$)
C:1038,0:combo_correlate: Invalid name "B" (should match [a-z_][a-z0-9_]{2,30}$)
C:1038,20:combo_correlate: Invalid name "A" (should match [a-z_][a-z0-9_]{2,30}$)
C:1038,22:combo_correlate: Invalid name "B" (should match [a-z_][a-z0-9_]{2,30}$)
W:1038,20:combo_correlate: Unused argument 'A'
W:1038,22:combo_correlate: Unused argument 'B'
C:1060,4:transpose_lists: Invalid name "NM" (should match [a-z_][a-z0-9_]{2,30}$)
C:1061,4:transpose_lists: Comma not followed by a space
    if not isinstance(NM,(tuple,list)):
                        ^^
W:1063,8:transpose_lists: Unreachable code
C:1064,4:transpose_lists: Operator not preceded by a space
    N=NM[0]
     ^
C:1064,4:transpose_lists: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:1065,4:transpose_lists: Operator not preceded by a space
    M=NM[1]
     ^
C:1065,4:transpose_lists: Invalid name "M" (should match [a-z_][a-z0-9_]{2,30}$)
C:1071,8:transpose_lists: Invalid name "n" (should match [a-z_][a-z0-9_]{2,30}$)
C:1075,4:transpose_lists: Comma not followed by a space
    for n,l in enumerate(lists):
         ^^
C:1075,8:transpose_lists: Invalid name "n" (should match [a-z_][a-z0-9_]{2,30}$)
C:1075,10:transpose_lists: Invalid name "l" (should match [a-z_][a-z0-9_]{2,30}$)
C:1076,8:transpose_lists: Comma not followed by a space
        for m,el in enumerate(l):
             ^^
C:1076,12:transpose_lists: Invalid name "m" (should match [a-z_][a-z0-9_]{2,30}$)
C:1076,14:transpose_lists: Invalid name "el" (should match [a-z_][a-z0-9_]{2,30}$)
W:1071,8:transpose_lists: Unused variable 'n'
W:1064,4:transpose_lists: Unused variable 'N'
W:1082,19:test_read_json: Redefining name 'verbose' from outer scope (line 1540)
C:1082,0:test_read_json: Missing docstring
C:1100,8:test_read_json: Invalid name "l" (should match [a-z_][a-z0-9_]{2,30}$)
C:1102,8:test_read_json: Operator not preceded by a space
        assert l[0]>73400
                   ^
C:1103,8:test_read_json: Operator not preceded by a space
        assert l[1]>0.1 and l[1]<25.0
                   ^
W:1105,33:load_json: Redefining name 'verbose' from outer scope (line 1540)
W:1120,12:load_json: No exception type(s) specified
C:1125,27:load_json: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C:1128,8:load_json: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:1132,8:load_json: Comma not followed by a space
        if verbose and isinstance(verbose,(str,unicode)):
                                         ^^
C:1140,0:bitfloor_book: Comma not followed by a space
def bitfloor_book(bids=None,asks=None,verbose=False):
                           ^^
W:1140,38:bitfloor_book: Redefining name 'verbose' from outer scope (line 1540)
C:1140,0:bitfloor_book: Missing docstring
C:1141,4:bitfloor_book: Comma not followed by a space
    rest_dict = rest_json(url='https://api.bitfloor.com/book/L2/1',verbose=verbose)
                                                                  ^^
W:1140,18:bitfloor_book: Unused argument 'bids'
W:1140,28:bitfloor_book: Unused argument 'asks'
C:1144,0:extract: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:1144,0:extract: Missing docstring
C:1144,12:extract: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:1147,4:extract: Invalid name "r" (should match [a-z_][a-z0-9_]{2,30}$)
C:1148,4:extract: Invalid name "mo" (should match [a-z_][a-z0-9_]{2,30}$)
W:1144,41:extract: Unused argument 'suffix'
R:1154,0:mine_data: Too many arguments (6/5)
R:1154,0:mine_data: Too many local variables (16/15)
W:1154,73:mine_data: Redefining name 'verbose' from outer scope (line 1540)
C:1154,0:mine_data: Missing docstring
C:1159,4:mine_data: Operator not preceded by a space
    page=Bot().GET(url)
        ^
C:1160,4:mine_data: Invalid name "dt" (should match [a-z_][a-z0-9_]{2,30}$)
C:1161,4:mine_data: Comma not followed by a space
    dat = {'datetime':str(dt),'url':url}
                             ^^
C:1162,4:mine_data: Comma not followed by a space
    if names and isinstance(names,str):
                                 ^^
C:1164,9:mine_data: Comma not followed by a space
    elif isinstance(names,(list,tuple)) and len(names)==1:
                         ^^
C:1172,4:mine_data: Comma not followed by a space
    if (  prefixes and regexes and names and isinstance(prefixes,list) and
                                                                ^^
          isinstance(regexes,list) and isinstance(names,list) and
          len(regexes)==len(prefixes)==len(names) ):
C:1175,8:mine_data: Comma not followed by a space
        for i,prefix in enumerate(prefixes):
             ^^
C:1176,12:mine_data: Operator not preceded by a space
            q=extract(s=page,prefix=prefix,regex=regexes[i])
             ^
C:1176,12:mine_data: Invalid name "q" (should match [a-z_][a-z0-9_]{2,30}$)
C:1178,16:mine_data: Operator not preceded by a space
                dat[names[i]]=q
                             ^
C:1179,9:mine_data: Comma not followed by a space
    elif (prefixes and regexes and isinstance(prefixes,list) and
                                                      ^^
          isinstance(regexes,list) and len(regexes)==len(prefixes) ):
C:1181,8:mine_data: Comma not followed by a space
        for i,prefix in enumerate(prefixes):
             ^^
C:1182,12:mine_data: Operator not preceded by a space
            q=extract(s=page,prefix=prefix,regex=regexes[i])
             ^
C:1182,12:mine_data: Invalid name "q" (should match [a-z_][a-z0-9_]{2,30}$)
C:1185,9:mine_data: Comma not followed by a space
    elif isinstance(prefixes,list) and isinstance(prefixes[0],list):
                            ^^
C:1187,12:mine_data: Comma not followed by a space
            for i,[prefix,regex] in enumerate(prefixes):
                 ^^
C:1188,16:mine_data: Operator not preceded by a space
                q=extract(s=page,prefix=prefix,regex=regex)
                 ^
C:1188,16:mine_data: Invalid name "q" (should match [a-z_][a-z0-9_]{2,30}$)
C:1192,12:mine_data: Comma not followed by a space
            for i,[prefix,regex,suffix] in enumerate(prefixes):
                 ^^
C:1193,16:mine_data: Operator not preceded by a space
                q=extract(s=page,prefix=prefix,regex=regex,suffix=suffix)
                 ^
C:1193,16:mine_data: Invalid name "q" (should match [a-z_][a-z0-9_]{2,30}$)
C:1200,9:mine_data: Comma not followed by a space
    elif names and prefixes and regexes and isinstance(prefixes,str) and isinstance(regexes,str) and isinstance(names,str):
                                                               ^^
C:1201,8:mine_data: Operator not preceded by a space
        dat[names]=extract(s=page,prefix=prefixes,regex=regexes)
                  ^
C:1202,9:mine_data: Comma not followed by a space
    elif page and prefixes and regexes and isinstance(prefixes,str) and isinstance(regexes,str):
                                                              ^^
C:1203,8:mine_data: Operator not preceded by a space
        dat['data']=extract(s=page,prefix=prefixes,regex=regexes)
                   ^
C:1204,9:mine_data: Comma not followed by a space
    elif isinstance(prefixes,dict):
                            ^^
C:1205,8:mine_data: Comma not followed by a space
        for name,l in prefixes.items():
                ^^
C:1205,17:mine_data: Invalid name "l" (should match [a-z_][a-z0-9_]{2,30}$)
E:1205,22:mine_data: Instance of 'str' has no 'items' member (but some types could not be inferred)
C:1207,16:mine_data: Operator not preceded by a space
                q=extract(s=page,prefix=l[0],regex=l[1])
                 ^
C:1207,16:mine_data: Invalid name "q" (should match [a-z_][a-z0-9_]{2,30}$)
C:1209,16:mine_data: Operator not preceded by a space
                q=extract(s=page,prefix=l[0],regex=l[1],suffix=l[2])
                 ^
C:1209,16:mine_data: Invalid name "q" (should match [a-z_][a-z0-9_]{2,30}$)
C:1213,16:mine_data: Operator not preceded by a space
                dat[name]=q
                         ^
R:1154,0:mine_data: Too many branches (31/12)
R:1154,0:mine_data: Too many statements (52/50)
W:1154,49:mine_data: Unused argument 'suffixes'
C:1222,0:are_all_urls: Missing docstring
C:1223,4:are_all_urls: Comma not followed by a space
    if isinstance(urls,dict):
                      ^^
C:1224,8:are_all_urls: Comma not followed by a space
        return all([ k[0:min(4,len(k))]=='http' for k in urls.keys()])
                              ^^
C:1225,9:are_all_urls: Comma not followed by a space
    elif isinstance(urls,(list,tuple)) and isinstance(urls[0],str):
                        ^^
C:1226,8:are_all_urls: Comma not followed by a space
        return all([ k[0:min(4,len(k))]=='http' for k in urls])
                              ^^
C:1229,0:join_json: Comma not followed by a space
def join_json(data_list=[],sep=',\n',prefix='[\n\n',suffix='\n]\n'):
                          ^^
W:1229,0:join_json: Dangerous default value [] as argument
C:1229,0:join_json: Missing docstring
C:1233,8:join_json: Comma not followed by a space
        json_strings.append(json.dumps(data,indent=2))
                                           ^^
W:1229,27:join_json: Unused argument 'sep'
C:1242,4:make_tall: Comma not followed by a space
    N,M = size2(lol)
     ^^
C:1242,4:make_tall: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:1242,6:make_tall: Invalid name "M" (should match [a-z_][a-z0-9_]{2,30}$)
C:1248,4:make_tall: Operator not preceded by a space
    if N<M:
        ^
C:1249,8:make_tall: Operator not preceded by a space
        lol=transpose_lists(lol)
           ^
C:1263,4:make_wide: Comma not followed by a space
    N,M = size2(lol)
     ^^
C:1263,4:make_wide: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:1263,6:make_wide: Invalid name "M" (should match [a-z_][a-z0-9_]{2,30}$)
C:1266,4:make_wide: Operator not preceded by a space
    if M<=0:
        ^^
C:1268,4:make_wide: Operator not preceded by a space
    if N>M:
        ^
C:1269,8:make_wide: Operator not preceded by a space
        lol=transpose_lists(lol)
           ^
C:1272,0:unoffset: Comma not followed by a space
def unoffset(data,columns=[0]):
                 ^^
W:1272,0:unoffset: Dangerous default value [0] as argument
C:1281,8:unoffset: Comma not followed by a space
        if isinstance(data[0],list):
                             ^^
C:1282,12:unoffset: Comma not followed by a space
            N,M = size2(data)
             ^^
C:1282,12:unoffset: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:1282,14:unoffset: Invalid name "M" (should match [a-z_][a-z0-9_]{2,30}$)
C:1283,12:unoffset: Operator not preceded by a space
            if N>M:
                ^
C:1284,16:unoffset: Comma not followed by a space
                d = make_tall([[r[0]-data[0][0] for r in data],make_wide(data)[1:]])
                                                              ^^
C:1284,16:unoffset: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:1286,16:unoffset: Comma not followed by a space
                d = [[t-data[0][0] for t in data[0]],data[1:]]
                                                    ^^
C:1286,16:unoffset: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
C:1288,12:unoffset: Invalid name "d" (should match [a-z_][a-z0-9_]{2,30}$)
W:1272,18:unoffset: Unused argument 'columns'
C:1302,4:mean: Comma not followed by a space
    if isinstance(lol,list):
                     ^^
C:1303,8:mean: Comma not followed by a space
        if isinstance(lol[0],list):
                            ^^
C:1310,0:detrend: Missing docstring
W:1310,12:detrend: Unused argument 'lol'
C:1329,4:var: Comma not followed by a space
    if isinstance(lol,list):
                     ^^
C:1330,8:var: Comma not followed by a space
        if isinstance(lol[0],list):
                            ^^
C:1336,16:var: Invalid name "mu" (should match [a-z_][a-z0-9_]{2,30}$)
C:1346,0:std: Missing docstring
C:1349,4:std: Comma not followed by a space
    if isinstance(lol,list):
                     ^^
C:1350,8:std: Comma not followed by a space
        if isinstance(lol[0],list):
                            ^^
C:1366,4:columns2xy: Comma not followed by a space
    N,M = size2(rows, errors=True, verbose=True)
     ^^
C:1366,4:columns2xy: Invalid name "N" (should match [a-z_][a-z0-9_]{2,30}$)
C:1366,6:columns2xy: Invalid name "M" (should match [a-z_][a-z0-9_]{2,30}$)
C:1367,4:columns2xy: Operator not preceded by a space
    if N>1:
        ^
C:1369,9:columns2xy: Operator not preceded by a space
    elif N==1:
          ^^
C:1382,4:col_normalize: Comma not followed by a space
    rows,minr,sf = row_normalize(rows) # return enough data to recover the original
        ^^
C:1382,14:col_normalize: Invalid name "sf" (should match [a-z_][a-z0-9_]{2,30}$)
C:1393,4:row_normalize: Invalid name "sf" (should match [a-z_][a-z0-9_]{2,30}$)
C:1395,4:row_normalize: Comma not followed by a space
    for i,r in enumerate(rows):
         ^^
C:1395,10:row_normalize: Invalid name "r" (should match [a-z_][a-z0-9_]{2,30}$)
C:1399,8:row_normalize: Comma not followed by a space
        for j,el in enumerate(r):
             ^^
C:1399,14:row_normalize: Invalid name "el" (should match [a-z_][a-z0-9_]{2,30}$)
C:1401,4:row_normalize: Comma not followed by a space
    return rows,minr,sf # return enough data to recover the original
               ^^
C:1403,0:display_correlation: Comma not followed by a space
def display_correlation(rows, labels, leads=[0,1], verbose=False):
                                              ^^
W:1403,51:display_correlation: Redefining name 'verbose' from outer scope (line 1540)
W:1403,0:display_correlation: Dangerous default value [0, 1] as argument
C:1413,4:display_correlation: Comma not followed by a space
    print 'leads=',leads
                  ^^
C:1414,4:display_correlation: Comma not followed by a space
    print 'rows=',rows
                 ^^
C:1416,4:display_correlation: Comma not followed by a space
    if isinstance(leads,(float,int)):
                       ^^
C:1419,8:display_correlation: Operator not preceded by a space
        if leads>0:
                ^
C:1421,13:display_correlation: Operator not preceded by a space
        elif leads<0:
                  ^
C:1422,12:display_correlation: Comma not followed by a space
            leads = range(max(int(leads)-1,-10))
                                          ^^
C:1426,4:display_correlation: Comma not followed by a space
    pprint(labels,indent=2)
                 ^^
C:1429,4:display_correlation: Invalid name "NM" (should match [a-z_][a-z0-9_]{2,30}$)
C:1431,4:display_correlation: Operator not preceded by a space
    assert NM[-2]==2 # each time series is 2 rows of data [time, value]
                 ^^
C:1432,4:display_correlation: Operator not preceded by a space
    assert NM[-1]>2 # time series must be in rows of the inner dimension
                 ^
C:1439,8:display_correlation: Comma not followed by a space
        C = lag_correlate(rows=rows,lead=lead)
                                   ^^
C:1439,8:display_correlation: Invalid name "C" (should match [a-z_][a-z0-9_]{2,30}$)
C:1440,8:display_correlation: Operator not preceded by a space
        if verbose>2:
                  ^
C:1443,12:display_correlation: Invalid name "c" (should match [a-z_][a-z0-9_]{2,30}$)
R:1448,0:plot_data: Too many arguments (6/5)
R:1448,0:plot_data: Too many local variables (17/15)
W:1448,0:plot_data: Dangerous default value ['mtgox'] as argument
W:1448,0:plot_data: Dangerous default value ['average'] as argument
C:1456,4:plot_data: Comma not followed by a space
    site = [site] if isinstance(site,str) else site
                                    ^^
C:1457,4:plot_data: Comma not followed by a space
    value = [value] if isinstance(value,str) else value
                                       ^^
C:1458,4:plot_data: Comma not followed by a space
    legends = [str(s)+':'+str(v) for s,v in zip(site,value)]
                                      ^^
C:1459,4:plot_data: Comma not followed by a space
    legends = [s[max(len(s)-14,0):] for s in legends]
                              ^^
C:1461,4:plot_data: Comma not followed by a space
    if not isinstance(site,list) or not isinstance(value,list) or not isinstance(site[0],str) or not isinstance(value[0],str):
                          ^^
C:1469,4:plot_data: Operator not preceded by a space
    data=None
        ^
C:1473,8:plot_data: Comma not followed by a space
        columns = byrow_key(data,name=site[0],yname=value[0],xname='datetime')
                                ^^
C:1475,8:plot_data: Comma not followed by a space
        data = load_json(filepath=columns,verbose=False)
                                         ^^
C:1476,8:plot_data: Comma not followed by a space
        columns = byrow_key(data,name=site[0],yname=value[0],xname='datetime')
                                ^^
C:1477,4:plot_data: Comma not followed by a space
    if not (isinstance(columns,list) and isinstance(columns[0],list)):
                              ^^
C:1481,4:plot_data: Operator not preceded by a space
    i=1
     ^
C:1483,4:plot_data: Operator not preceded by a space
    if data and i<len(site) and columns:
                 ^
C:1484,8:plot_data: Invalid name "t" (should match [a-z_][a-z0-9_]{2,30}$)
C:1485,8:plot_data: Operator not preceded by a space
        while i<len(site):
               ^
C:1486,12:plot_data: Comma not followed by a space
            s,v = site[i],value[i]
             ^^
C:1486,12:plot_data: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:1486,14:plot_data: Invalid name "v" (should match [a-z_][a-z0-9_]{2,30}$)
C:1487,12:plot_data: Comma not followed by a space
            cols2 = byrow_key(data,name=s,yname=v,xname='datetime')
                                  ^^
C:1489,12:plot_data: Comma not followed by a space
            columns.append(interpolate(cols2[0],cols2[1],t))
                                               ^^
C:1492,4:plot_data: Comma not followed by a space
    x,y = columns2xy(columns)
     ^^
C:1492,4:plot_data: Invalid name "x" (should match [a-z_][a-z0-9_]{2,30}$)
C:1492,6:plot_data: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C:1494,4:plot_data: Operator not preceded by a space
    if normalize==True:
                ^^
C:1495,8:plot_data: Comma not followed by a space
        y,miny,sfy = col_normalize(y)
         ^^
C:1495,8:plot_data: Invalid name "y" (should match [a-z_][a-z0-9_]{2,30}$)
C:1496,4:plot_data: Comma not followed by a space
    plt.plot(x,y)
              ^^
W:1495,15:plot_data: Unused variable 'sfy'
W:1495,10:plot_data: Unused variable 'miny'
C:1506,0:print_data: Invalid name "n" (should match [a-z_][a-z0-9_]{2,30}$)
C:1506,21:print_data: Invalid name "n" (should match [a-z_][a-z0-9_]{2,30}$)
C:1511,4:print_data: Invalid name "n" (should match [a-z_][a-z0-9_]{2,30}$)
C:1515,8:print_data: Comma not followed by a space
        pprint(   data[min(0,n):min(len(data),abs(n))], indent=indent)
                            ^^
C:1517,8:print_data: Comma not followed by a space
        print json.dumps(data[min(0,n):min(len(data),abs(n))], indent=indent)
                                   ^^
W:1519,9:test: Redefining name 'verbose' from outer scope (line 1540)
W:1519,23:test: Redefining name 'internet' from outer scope (line 1539)
C:1519,0:test: Missing docstring
C:1521,4:test: Operator not preceded by a space
    optionflags=doctest.ELLIPSIS
               ^
C:1528,8:test: Invalid name "m" (should match [a-z_][a-z0-9_]{2,30}$)
C:1532,12:test: Invalid name "tf" (should match [a-z_][a-z0-9_]{2,30}$)
C:1539,4: Invalid name "internet" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:1540,4: Invalid name "verbose" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
W:1544,12: Statement seems to have no effect
W:1546,12: Statement seems to have no effect
W:1549,12: Statement seems to have no effect
W:1551,12: Statement seems to have no effect
W: 57,0: Unused import size3
W: 53,0: Unused import ArgumentParser
************* Module tagim.tg.recipeprocessing
C: 16,0: Line too long (86/80)
W: 16,0: Bad indentation. Found 2 spaces, expected 4
W: 21,0: Bad indentation. Found 2 spaces, expected 4
W: 22,0: Bad indentation. Found 2 spaces, expected 4
W: 23,0: Bad indentation. Found 2 spaces, expected 4
W: 24,0: Bad indentation. Found 2 spaces, expected 4
C: 25,0: Line too long (101/80)
W: 25,0: Bad indentation. Found 2 spaces, expected 4
W: 26,0: Bad indentation. Found 2 spaces, expected 4
W: 27,0: Bad indentation. Found 2 spaces, expected 4
W: 28,0: Bad indentation. Found 2 spaces, expected 4
W: 29,0: Bad indentation. Found 2 spaces, expected 4
W: 30,0: Bad indentation. Found 2 spaces, expected 4
W: 31,0: Bad indentation. Found 2 spaces, expected 4
W: 32,0: Bad indentation. Found 2 spaces, expected 4
W: 33,0: Bad indentation. Found 2 spaces, expected 4
W: 34,0: Bad indentation. Found 2 spaces, expected 4
W: 35,0: Bad indentation. Found 2 spaces, expected 4
W: 36,0: Bad indentation. Found 2 spaces, expected 4
W: 37,0: Bad indentation. Found 2 spaces, expected 4
W: 38,0: Bad indentation. Found 2 spaces, expected 4
W: 39,0: Bad indentation. Found 2 spaces, expected 4
W: 40,0: Bad indentation. Found 2 spaces, expected 4
W: 41,0: Bad indentation. Found 2 spaces, expected 4
W: 42,0: Bad indentation. Found 2 spaces, expected 4
C: 43,0: Line too long (138/80)
W: 43,0: Bad indentation. Found 2 spaces, expected 4
C: 44,0: Line too long (131/80)
W: 44,0: Bad indentation. Found 2 spaces, expected 4
C: 45,0: Line too long (321/80)
W: 45,0: Bad indentation. Found 2 spaces, expected 4
C: 46,0: Line too long (181/80)
W: 46,0: Bad indentation. Found 2 spaces, expected 4
C: 48,0: Line too long (119/80)
W: 48,0: Bad indentation. Found 2 spaces, expected 4
W: 49,0: Bad indentation. Found 4 spaces, expected 8
W: 55,0: Bad indentation. Found 4 spaces, expected 8
W: 56,0: Bad indentation. Found 4 spaces, expected 8
W: 58,0: Bad indentation. Found 4 spaces, expected 8
W: 59,0: Bad indentation. Found 6 spaces, expected 12
W: 60,0: Bad indentation. Found 4 spaces, expected 8
W: 61,0: Bad indentation. Found 6 spaces, expected 12
W: 62,0: Bad indentation. Found 4 spaces, expected 8
W: 63,0: Bad indentation. Found 6 spaces, expected 12
W: 64,0: Bad indentation. Found 4 spaces, expected 8
C: 65,0: Line too long (121/80)
W: 65,0: Bad indentation. Found 4 spaces, expected 8
W: 66,0: Bad indentation. Found 4 spaces, expected 8
C: 67,0: Line too long (166/80)
W: 67,0: Bad indentation. Found 4 spaces, expected 8
W: 68,0: Bad indentation. Found 4 spaces, expected 8
W: 69,0: Bad indentation. Found 4 spaces, expected 8
W: 70,0: Bad indentation. Found 4 spaces, expected 8
W: 71,0: Bad indentation. Found 4 spaces, expected 8
W: 72,0: Bad indentation. Found 6 spaces, expected 12
W: 72,0: Unnecessary semicolon
C: 73,0: Line too long (102/80)
W: 73,0: Bad indentation. Found 6 spaces, expected 12
W: 74,0: Bad indentation. Found 8 spaces, expected 16
W: 75,0: Bad indentation. Found 8 spaces, expected 16
W: 76,0: Bad indentation. Found 4 spaces, expected 8
W: 77,0: Bad indentation. Found 4 spaces, expected 8
W: 78,0: Bad indentation. Found 4 spaces, expected 8
W: 79,0: Bad indentation. Found 4 spaces, expected 8
W: 80,0: Bad indentation. Found 6 spaces, expected 12
W: 82,0: Bad indentation. Found 2 spaces, expected 4
W: 83,0: Bad indentation. Found 4 spaces, expected 8
W: 84,0: Bad indentation. Found 4 spaces, expected 8
C: 85,0: Line too long (81/80)
W: 85,0: Bad indentation. Found 6 spaces, expected 12
W: 86,0: Bad indentation. Found 6 spaces, expected 12
W: 87,0: Bad indentation. Found 8 spaces, expected 16
C: 88,0: Line too long (96/80)
W: 88,0: Bad indentation. Found 12 spaces, expected 20
C: 89,0: Line too long (135/80)
W: 90,0: Bad indentation. Found 12 spaces, expected 20
W: 91,0: Bad indentation. Found 6 spaces, expected 12
W: 92,0: Bad indentation. Found 8 spaces, expected 16
W: 93,0: Bad indentation. Found 8 spaces, expected 16
W: 94,0: Bad indentation. Found 10 spaces, expected 20
W: 96,0: Bad indentation. Found 2 spaces, expected 4
W: 97,0: Bad indentation. Found 4 spaces, expected 8
C: 98,0: Line too long (100/80)
W: 99,0: Bad indentation. Found 4 spaces, expected 8
W:100,0: Bad indentation. Found 4 spaces, expected 8
W:101,0: Bad indentation. Found 6 spaces, expected 12
W:102,0: Bad indentation. Found 6 spaces, expected 12
W:103,0: Bad indentation. Found 8 spaces, expected 16
W:104,0: Bad indentation. Found 10 spaces, expected 20
C:105,0: Line too long (155/80)
W:105,0: Bad indentation. Found 10 spaces, expected 20
W:106,0: Bad indentation. Found 10 spaces, expected 20
W:111,0: Bad indentation. Found 10 spaces, expected 20
W:112,0: Bad indentation. Found 10 spaces, expected 20
W:113,0: Bad indentation. Found 12 spaces, expected 24
W:114,0: Bad indentation. Found 12 spaces, expected 24
W:115,0: Bad indentation. Found 10 spaces, expected 20
W:116,0: Bad indentation. Found 10 spaces, expected 20
W:117,0: Bad indentation. Found 10 spaces, expected 20
W:118,0: Bad indentation. Found 12 spaces, expected 24
W:120,0: Bad indentation. Found 14 spaces, expected 28
C:121,0: Line too long (146/80)
W:121,0: Bad indentation. Found 14 spaces, expected 28
C:122,0: Line too long (101/80)
W:123,0: Bad indentation. Found 10 spaces, expected 20
W:125,0: Bad indentation. Found 2 spaces, expected 4
W:126,0: Bad indentation. Found 4 spaces, expected 8
C:128,0: Line too long (100/80)
W:128,0: Bad indentation. Found 4 spaces, expected 8
W:129,0: Bad indentation. Found 4 spaces, expected 8
W:130,0: Bad indentation. Found 4 spaces, expected 8
W:131,0: Bad indentation. Found 4 spaces, expected 8
C:132,0: Line too long (167/80)
C:133,0: Line too long (111/80)
W:133,0: Bad indentation. Found 4 spaces, expected 8
C:134,0: Line too long (111/80)
W:134,0: Bad indentation. Found 4 spaces, expected 8
W:135,0: Bad indentation. Found 4 spaces, expected 8
W:136,0: Bad indentation. Found 6 spaces, expected 12
W:137,0: Bad indentation. Found 6 spaces, expected 12
C:138,0: Line too long (128/80)
W:138,0: Bad indentation. Found 6 spaces, expected 12
W:139,0: Bad indentation. Found 6 spaces, expected 12
W:140,0: Bad indentation. Found 6 spaces, expected 12
W:141,0: Bad indentation. Found 8 spaces, expected 16
W:142,0: Bad indentation. Found 8 spaces, expected 16
C:143,0: Line too long (114/80)
W:143,0: Bad indentation. Found 8 spaces, expected 16
C:144,0: Line too long (153/80)
W:144,0: Bad indentation. Found 10 spaces, expected 20
W:145,0: Bad indentation. Found 10 spaces, expected 20
W:146,0: Bad indentation. Found 8 spaces, expected 16
W:147,0: Bad indentation. Found 10 spaces, expected 20
W:148,0: Bad indentation. Found 10 spaces, expected 20
C:149,0: Line too long (140/80)
W:149,0: Bad indentation. Found 8 spaces, expected 16
W:150,0: Bad indentation. Found 10 spaces, expected 20
C:151,0: Line too long (102/80)
W:151,0: Bad indentation. Found 10 spaces, expected 20
W:152,0: Bad indentation. Found 8 spaces, expected 16
W:153,0: Bad indentation. Found 10 spaces, expected 20
C:154,0: Line too long (128/80)
W:154,0: Bad indentation. Found 10 spaces, expected 20
C:156,0: Line too long (103/80)
W:157,0: Bad indentation. Found 8 spaces, expected 16
C:158,0: Line too long (90/80)
W:158,0: Bad indentation. Found 10 spaces, expected 20
W:159,0: Bad indentation. Found 12 spaces, expected 24
C:160,0: Line too long (105/80)
C:162,0: Line too long (100/80)
C:163,0: Line too long (115/80)
W:164,0: Bad indentation. Found 10 spaces, expected 20
W:165,0: Bad indentation. Found 12 spaces, expected 24
W:166,0: Bad indentation. Found 12 spaces, expected 24
W:167,0: Bad indentation. Found 12 spaces, expected 24
C:168,0: Line too long (109/80)
W:169,0: Bad indentation. Found 12 spaces, expected 24
C:170,0: Line too long (160/80)
W:170,0: Bad indentation. Found 14 spaces, expected 28
W:171,0: Bad indentation. Found 16 spaces, expected 32
W:172,0: Bad indentation. Found 12 spaces, expected 24
W:173,0: Bad indentation. Found 12 spaces, expected 24
W:174,0: Bad indentation. Found 12 spaces, expected 24
W:175,0: Bad indentation. Found 14 spaces, expected 28
C:176,0: Line too long (95/80)
W:176,0: Bad indentation. Found 12 spaces, expected 24
W:177,0: Bad indentation. Found 12 spaces, expected 24
W:178,0: Bad indentation. Found 12 spaces, expected 24
C:179,0: Line too long (146/80)
W:179,0: Bad indentation. Found 14 spaces, expected 28
C:180,0: Line too long (84/80)
W:180,0: Bad indentation. Found 8 spaces, expected 16
C:181,0: Line too long (144/80)
W:181,0: Bad indentation. Found 8 spaces, expected 16
C:182,0: Line too long (173/80)
W:182,0: Bad indentation. Found 8 spaces, expected 16
C:183,0: Line too long (83/80)
W:183,0: Bad indentation. Found 8 spaces, expected 16
C:184,0: Line too long (269/80)
W:185,0: Bad indentation. Found 6 spaces, expected 12
W:186,0: Bad indentation. Found 6 spaces, expected 12
C:187,0: Line too long (134/80)
W:187,0: Bad indentation. Found 6 spaces, expected 12
W:188,0: Bad indentation. Found 6 spaces, expected 12
C:189,0: Line too long (122/80)
W:189,0: Bad indentation. Found 8 spaces, expected 16
W:190,0: Bad indentation. Found 6 spaces, expected 12
W:191,0: Bad indentation. Found 8 spaces, expected 16
W:192,0: Bad indentation. Found 4 spaces, expected 8
W:193,0: Bad indentation. Found 4 spaces, expected 8
W:194,0: Bad indentation. Found 6 spaces, expected 12
W:195,0: Bad indentation. Found 6 spaces, expected 12
W:197,0: Bad indentation. Found 2 spaces, expected 4
C:198,0: Line too long (85/80)
W:198,0: Bad indentation. Found 4 spaces, expected 8
C:203,0: Line too long (86/80)
W:204,0: Bad indentation. Found 4 spaces, expected 8
C:205,0: Line too long (108/80)
W:205,0: Bad indentation. Found 4 spaces, expected 8
C:206,0: Line too long (124/80)
W:207,0: Bad indentation. Found 4 spaces, expected 8
C:208,0: Line too long (102/80)
W:208,0: Bad indentation. Found 6 spaces, expected 12
W:209,0: Bad indentation. Found 6 spaces, expected 12
W:210,0: Bad indentation. Found 6 spaces, expected 12
W:211,0: Bad indentation. Found 6 spaces, expected 12
C:212,0: Line too long (127/80)
W:212,0: Bad indentation. Found 8 spaces, expected 16
W:213,0: Bad indentation. Found 8 spaces, expected 16
W:214,0: Bad indentation. Found 6 spaces, expected 12
W:215,0: Bad indentation. Found 8 spaces, expected 16
W:216,0: Bad indentation. Found 6 spaces, expected 12
W:217,0: Bad indentation. Found 8 spaces, expected 16
W:218,0: Bad indentation. Found 8 spaces, expected 16
C:219,0: Line too long (103/80)
W:219,0: Bad indentation. Found 10 spaces, expected 20
C:220,0: Line too long (93/80)
W:220,0: Bad indentation. Found 10 spaces, expected 20
C:221,0: Line too long (86/80)
W:221,0: Bad indentation. Found 12 spaces, expected 24
W:222,0: Bad indentation. Found 12 spaces, expected 24
C:223,0: Line too long (124/80)
C:224,0: Line too long (170/80)
W:224,0: Bad indentation. Found 10 spaces, expected 20
C:225,0: Line too long (123/80)
C:226,0: Line too long (152/80)
W:226,0: Bad indentation. Found 10 spaces, expected 20
C:227,0: Line too long (98/80)
C:228,0: Line too long (147/80)
W:229,0: Bad indentation. Found 10 spaces, expected 20
W:230,0: Bad indentation. Found 12 spaces, expected 24
W:231,0: Bad indentation. Found 12 spaces, expected 24
W:232,0: Bad indentation. Found 14 spaces, expected 28
W:233,0: Bad indentation. Found 10 spaces, expected 20
W:234,0: Bad indentation. Found 12 spaces, expected 24
C:235,0: Line too long (137/80)
W:235,0: Bad indentation. Found 14 spaces, expected 28
W:237,0: Bad indentation. Found 14 spaces, expected 28
W:238,0: Bad indentation. Found 12 spaces, expected 24
C:239,0: Line too long (110/80)
W:239,0: Bad indentation. Found 14 spaces, expected 28
W:240,0: Bad indentation. Found 12 spaces, expected 24
C:241,0: Line too long (157/80)
W:242,0: Bad indentation. Found 10 spaces, expected 20
C:243,0: Line too long (99/80)
C:244,0: Line too long (90/80)
W:245,0: Bad indentation. Found 12 spaces, expected 24
W:246,0: Bad indentation. Found 10 spaces, expected 20
W:247,0: Bad indentation. Found 12 spaces, expected 24
W:248,0: Bad indentation. Found 10 spaces, expected 20
C:249,0: Line too long (102/80)
W:250,0: Bad indentation. Found 12 spaces, expected 24
W:251,0: Bad indentation. Found 12 spaces, expected 24
C:252,0: Line too long (110/80)
W:252,0: Bad indentation. Found 12 spaces, expected 24
W:253,0: Bad indentation. Found 14 spaces, expected 28
W:254,0: Bad indentation. Found 12 spaces, expected 24
W:255,0: Bad indentation. Found 14 spaces, expected 28
C:256,0: Line too long (271/80)
W:256,0: Bad indentation. Found 10 spaces, expected 20
C:257,0: Line too long (164/80)
W:258,0: Bad indentation. Found 12 spaces, expected 24
W:259,0: Bad indentation. Found 12 spaces, expected 24
W:260,0: Bad indentation. Found 14 spaces, expected 28
C:261,0: Line too long (143/80)
W:261,0: Bad indentation. Found 16 spaces, expected 32
C:262,0: Line too long (100/80)
W:262,0: Bad indentation. Found 14 spaces, expected 28
C:263,0: Line too long (94/80)
W:263,0: Bad indentation. Found 10 spaces, expected 20
C:264,0: Line too long (114/80)
W:264,0: Bad indentation. Found 12 spaces, expected 24
C:265,0: Line too long (121/80)
W:265,0: Bad indentation. Found 8 spaces, expected 16
C:266,0: Line too long (139/80)
W:266,0: Bad indentation. Found 8 spaces, expected 16
C:267,0: Line too long (131/80)
C:268,0: Line too long (138/80)
W:270,0: Bad indentation. Found 2 spaces, expected 4
C:271,0: Line too long (85/80)
W:271,0: Bad indentation. Found 4 spaces, expected 8
W:273,0: Bad indentation. Found 4 spaces, expected 8
W:274,0: Bad indentation. Found 4 spaces, expected 8
W:275,0: Bad indentation. Found 6 spaces, expected 12
W:276,0: Bad indentation. Found 4 spaces, expected 8
W:279,0: Bad indentation. Found 2 spaces, expected 4
C:280,0: Line too long (84/80)
W:280,0: Bad indentation. Found 4 spaces, expected 8
W:282,0: Bad indentation. Found 4 spaces, expected 8
W:283,0: Bad indentation. Found 4 spaces, expected 8
W:285,0: Bad indentation. Found 2 spaces, expected 4
C:286,0: Line too long (84/80)
W:286,0: Bad indentation. Found 4 spaces, expected 8
W:288,0: Bad indentation. Found 4 spaces, expected 8
W:289,0: Bad indentation. Found 4 spaces, expected 8
W:290,0: Bad indentation. Found 6 spaces, expected 12
W:291,0: Bad indentation. Found 4 spaces, expected 8
W:293,0: Bad indentation. Found 2 spaces, expected 4
W:294,0: Bad indentation. Found 4 spaces, expected 8
W:298,0: Bad indentation. Found 4 spaces, expected 8
C:299,0: Line too long (187/80)
W:303,0: Bad indentation. Found 4 spaces, expected 8
W:304,0: Bad indentation. Found 4 spaces, expected 8
W:306,0: Bad indentation. Found 4 spaces, expected 8
W:307,0: Bad indentation. Found 6 spaces, expected 12
W:308,0: Bad indentation. Found 6 spaces, expected 12
W:309,0: Bad indentation. Found 4 spaces, expected 8
W:310,0: Bad indentation. Found 6 spaces, expected 12
W:311,0: Bad indentation. Found 6 spaces, expected 12
W:312,0: Bad indentation. Found 8 spaces, expected 16
W:313,0: Bad indentation. Found 8 spaces, expected 16
W:314,0: Bad indentation. Found 8 spaces, expected 16
W:315,0: Bad indentation. Found 8 spaces, expected 16
W:316,0: Bad indentation. Found 8 spaces, expected 16
W:317,0: Bad indentation. Found 8 spaces, expected 16
C:320,0: Line too long (82/80)
C:323,0: Line too long (85/80)
W:326,0: Bad indentation. Found 10 spaces, expected 20
W:327,0: Bad indentation. Found 10 spaces, expected 20
W:328,0: Bad indentation. Found 12 spaces, expected 24
C:329,0: Line too long (99/80)
W:329,0: Bad indentation. Found 10 spaces, expected 20
C:330,0: Line too long (138/80)
W:330,0: Bad indentation. Found 10 spaces, expected 20
C:331,0: Line too long (97/80)
W:331,0: Bad indentation. Found 10 spaces, expected 20
C:332,0: Line too long (111/80)
W:332,0: Bad indentation. Found 10 spaces, expected 20
C:333,0: Line too long (129/80)
C:334,0: Line too long (154/80)
W:334,0: Bad indentation. Found 10 spaces, expected 20
W:335,0: Bad indentation. Found 10 spaces, expected 20
W:336,0: Bad indentation. Found 12 spaces, expected 24
W:337,0: Bad indentation. Found 12 spaces, expected 24
W:338,0: Bad indentation. Found 10 spaces, expected 20
W:338,0: Unnecessary semicolon
C:339,0: Line too long (92/80)
W:339,0: Bad indentation. Found 8 spaces, expected 16
W:340,0: Bad indentation. Found 8 spaces, expected 16
W:341,0: Bad indentation. Found 10 spaces, expected 20
W:342,0: Bad indentation. Found 8 spaces, expected 16
W:343,0: Bad indentation. Found 10 spaces, expected 20
W:345,0: Bad indentation. Found 2 spaces, expected 4
C:346,0: Line too long (114/80)
W:346,0: Bad indentation. Found 4 spaces, expected 8
C:350,0: Line too long (89/80)
W:351,0: Bad indentation. Found 4 spaces, expected 8
W:352,0: Bad indentation. Found 6 spaces, expected 12
C:353,0: Line too long (89/80)
W:353,0: Bad indentation. Found 4 spaces, expected 8
C:354,0: Line too long (122/80)
W:354,0: Bad indentation. Found 6 spaces, expected 12
C:355,0: Line too long (181/80)
W:355,0: Bad indentation. Found 6 spaces, expected 12
C:356,0: Line too long (88/80)
W:356,0: Bad indentation. Found 8 spaces, expected 16
W:357,0: Bad indentation. Found 8 spaces, expected 16
C:359,0: Line too long (103/80)
W:359,0: Bad indentation. Found 8 spaces, expected 16
W:363,0: Bad indentation. Found 8 spaces, expected 16
W:364,0: Bad indentation. Found 10 spaces, expected 20
W:366,0: Bad indentation. Found 12 spaces, expected 24
W:367,0: Bad indentation. Found 14 spaces, expected 28
W:371,0: Bad indentation. Found 14 spaces, expected 28
W:372,0: Bad indentation. Found 16 spaces, expected 32
C:373,0: Line too long (110/80)
W:374,0: Bad indentation. Found 12 spaces, expected 24
C:378,0: Line too long (108/80)
W:379,0: Bad indentation. Found 14 spaces, expected 28
W:380,0: Bad indentation. Found 16 spaces, expected 32
W:381,0: Bad indentation. Found 16 spaces, expected 32
W:382,0: Bad indentation. Found 16 spaces, expected 32
W:384,0: Bad indentation. Found 16 spaces, expected 32
W:385,0: Bad indentation. Found 10 spaces, expected 20
C:386,0: Line too long (107/80)
C:387,0: Line too long (92/80)
C:388,0: Line too long (136/80)
W:388,0: Bad indentation. Found 10 spaces, expected 20
C:389,0: Line too long (141/80)
W:389,0: Bad indentation. Found 12 spaces, expected 24
W:390,0: Bad indentation. Found 10 spaces, expected 20
C:391,0: Line too long (86/80)
W:391,0: Bad indentation. Found 12 spaces, expected 24
W:392,0: Bad indentation. Found 10 spaces, expected 20
W:393,0: Bad indentation. Found 10 spaces, expected 20
C:394,0: Line too long (139/80)
W:396,0: Bad indentation. Found 10 spaces, expected 20
C:397,0: Line too long (94/80)
W:397,0: Bad indentation. Found 6 spaces, expected 12
W:398,0: Bad indentation. Found 8 spaces, expected 16
C:  1,0: Missing docstring
F:  5,0: Unable to import 'rateit.fdamodels'
F:  6,0: Unable to import 'rateit.models'
F: 11,0: Unable to import 'settings'
C: 12,0: Comma not followed by a space
from sys import stderr,stdout,stdin
                      ^^
F: 13,0: Unable to import 'rateit.utils.nlp'
C: 24,2:RecipeParser: Operator not preceded by a space
  force=False # whether to force overwrite of existing schema files
       ^
C: 25,2:RecipeParser: Operator not preceded by a space
  refine=False # whether to attempt automatic table relationship conneciton during schema composition
        ^
C: 27,2:RecipeParser: Comma not followed by a space
  file_path = os.path.join(PROJECT_ROOT,appname,'fixtures/')
                                       ^^
C: 34,2:RecipeParser: Operator not preceded by a space
  column_widths=[]
               ^
C: 35,2:RecipeParser: Operator not preceded by a space
  is_key=[]
        ^
C: 36,2:RecipeParser: Operator not preceded by a space
  is_blank=[]
          ^
C: 37,2:RecipeParser: Operator not preceded by a space
  is_null=[]
         ^
C: 38,2:RecipeParser: Operator not preceded by a space
  verbose_name=[]
              ^
C: 39,2:RecipeParser: Operator not preceded by a space
  help_text=[]
           ^
C: 40,2:RecipeParser: Operator not preceded by a space
  schemas={}
         ^
C: 43,2:RecipeParser: Operator not preceded by a space
  schema_keys=        ['column_name' ,'field_type','column_width' ,'is_key'       ,'is_null'    ,'is_blank'   ,'verbose_name','help_text']
             ^
C: 44,2:RecipeParser: Operator not preceded by a space
  field_order=        [0             ,1           ,2              ,3              ,4            ,4            ,0             ,'5:']
             ^
C: 45,2:RecipeParser: Operator not preceded by a space
  default_fields=     [''            ,''          ,0.0            ,0              ,0            ,0            ,''            ,''] # the type of the default field determines the type of the field output in the schema file, which in turn can affect the type of the database field (currently only detected for column_widths)
                ^
C: 46,2:RecipeParser: Operator not preceded by a space
  schema_translations=[{}            ,{}          ,{}             ,{'Y':1,'N':0}  ,{'Y':1,'N':0},{'Y':1,'N':0},{}            ,{}] # not suitable for str.translate() or str.replace()
                     ^
R: 48,2:RecipeParser.__init__: Too many arguments (6/5)
C: 48,2:RecipeParser.__init__: Comma not followed by a space
  def __init__(self,csv_path=file_path,revno=fda_revision_number,models_file=fda_models_file,force=False,refine=False):
                   ^^
C: 55,4:RecipeParser.__init__: Operator not preceded by a space
    self.force=force
              ^
C: 56,4:RecipeParser.__init__: Operator not preceded by a space
    self.refine=refine
               ^
C: 64,4:RecipeParser.__init__: Comma not followed by a space
    self.full_path = os.path.join(csv_path,revno)
                                          ^^
C: 66,4:RecipeParser.__init__: Comma not followed by a space
    self.fda_models_path = os.path.join(PROJECT_ROOT,self.appname,models_file)
                                                    ^^
C: 68,4:RecipeParser.__init__: Operator not preceded by a space
    ls=os.listdir(self.full_path)
      ^
C: 68,4:RecipeParser.__init__: Invalid name "ls" (should match [a-z_][a-z0-9_]{2,30}$)
C: 69,4:RecipeParser.__init__: Operator not preceded by a space
    self.file_names=[]
                   ^
C: 70,4:RecipeParser.__init__: Operator not preceded by a space
    self.numfiles=0
                 ^
C: 71,8:RecipeParser.__init__: Invalid name "fn" (should match [a-z_][a-z0-9_]{2,30}$)
C: 72,6:RecipeParser.__init__: Comma not followed by a space
      (f,e)=os.path.splitext(fn);
        ^^
C: 72,7:RecipeParser.__init__: Invalid name "f" (should match [a-z_][a-z0-9_]{2,30}$)
C: 72,9:RecipeParser.__init__: Invalid name "e" (should match [a-z_][a-z0-9_]{2,30}$)
C: 73,6:RecipeParser.__init__: Comma not followed by a space
      if os.path.isfile(os.path.join(self.full_path,fn)) and (e=='.txt' or e=='.TXT') and f.isupper():
                                                   ^^
C: 75,8:RecipeParser.__init__: Operator not preceded by a space
        self.numfiles=self.numfiles+1
                     ^
C: 76,4:RecipeParser.__init__: Operator not preceded by a space
    self.model_names=[]
                    ^
C: 77,4:RecipeParser.__init__: Operator not preceded by a space
    unordered_model_names=[]
                         ^
C: 78,4:RecipeParser.__init__: Operator not preceded by a space
    table_model_names=[]
                     ^
C: 79,8:RecipeParser.__init__: Invalid name "Ifn" (should match [a-z_][a-z0-9_]{2,30}$)
W: 78,4:RecipeParser.__init__: Unused variable 'table_model_names'
W: 77,4:RecipeParser.__init__: Unused variable 'unordered_model_names'
C: 84,4:RecipeParser.write_schemas: Comma not followed by a space
    for fmn,schema in self.schemas.items():
           ^^
C: 85,6:RecipeParser.write_schemas: Operator not preceded by a space
      schema_path=os.path.join(self.full_path,str(schema['file_name'])+'.schema')
                 ^
C: 86,6:RecipeParser.write_schemas: Comma not followed by a space
      for fieldnum,colwidth in enumerate(schema['column_width']):
                  ^^
C: 90,12:RecipeParser.write_schemas: Operator not preceded by a space
            schema['column_width'][fieldnum]=int(colwidth)
                                            ^
C: 92,8:RecipeParser.write_schemas: Comma not followed by a space
        csvw = csv.writer(outfile,dialect=fda_dialect)
                                 ^^
E: 92,42:RecipeParser.write_schemas: Undefined variable 'fda_dialect'
W: 84,8:RecipeParser.write_schemas: Unused variable 'fmn'
C:100,4:RecipeParser.read_schemas: Comma not followed by a space
    for ((i, fn), fmn) in zip(enumerate(self.file_names),self.file_model_names):
                                                        ^^
C:100,13:RecipeParser.read_schemas: Invalid name "fn" (should match [a-z_][a-z0-9_]{2,30}$)
C:101,6:RecipeParser.read_schemas: Operator not preceded by a space
      schema_path=os.path.join(self.full_path,fn+'.schema')
                 ^
C:105,10:RecipeParser.read_schemas: Comma not followed by a space
          csvr = csv.reader(infile,dialect=fda_dialect) # should the schema use the fda_dialect or something more standard like csv with commas and quotes?
                                  ^^
E:105,43:RecipeParser.read_schemas: Undefined variable 'fda_dialect'
C:106,10:RecipeParser.read_schemas: Operator not preceded by a space
          j=0
           ^
C:111,10:RecipeParser.read_schemas: Operator not preceded by a space
          schema={}
                ^
C:114,12:RecipeParser.read_schemas: Operator not preceded by a space
            j=j+1
             ^
C:117,10:RecipeParser.read_schemas: Comma not followed by a space
          for j in range(1,len(self.schema_keys)):
                          ^^
W:100,10:RecipeParser.read_schemas: Unused variable 'i'
R:125,2:RecipeParser.write_models: Too many local variables (18/15)
C:129,4:RecipeParser.write_models: Operator not preceded by a space
    ind='  ' # indentation characters
       ^
C:130,4:RecipeParser.write_models: Operator not preceded by a space
    s=''
     ^
C:130,4:RecipeParser.write_models: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:131,4:RecipeParser.write_models: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:133,4:RecipeParser.write_models: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:134,4:RecipeParser.write_models: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:135,4:RecipeParser.write_models: Comma not followed by a space
    for fmn,schema in self.schemas.items():
           ^^
C:136,6:RecipeParser.write_models: Operator not preceded by a space
      fn=schema['file_name']
        ^
C:136,6:RecipeParser.write_models: Invalid name "fn" (should match [a-z_][a-z0-9_]{2,30}$)
C:137,6:RecipeParser.write_models: Operator not preceded by a space
      schema_path=os.path.join(self.full_path,fn+'.schema')
                 ^
C:140,6:RecipeParser.write_models: Comma not followed by a space
      for j in range(0,schema['numcols']):
                      ^^
C:146,13:RecipeParser.write_models: Operator not preceded by a space
        elif schema['field_type'][j]=='A':
                                    ^^
C:164,15:RecipeParser.write_models: Operator not preceded by a space
          elif s_manager=='':
                        ^^
C:167,12:RecipeParser.write_models: Operator not preceded by a space
            unique_together=[]
                           ^
C:169,12:RecipeParser.write_models: Comma not followed by a space
            for j2 in range(0,j+1):
                             ^^
C:169,16:RecipeParser.write_models: Invalid name "j2" (should match [a-z_][a-z0-9_]{2,30}$)
C:174,16:RecipeParser.write_models: Invalid name "ut" (should match [a-z_][a-z0-9_]{2,30}$)
W:183,32:RecipeParser.write_models: Use of the `` operator
C:189,8:RecipeParser.write_models: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:191,8:RecipeParser.write_models: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
R:125,2:RecipeParser.write_models: Too many branches (15/12)
R:125,2:RecipeParser.write_models: Too many statements (56/50)
R:197,2:RecipeParser.read_tables: Too many local variables (16/15)
C:205,4:RecipeParser.read_tables: Operator not preceded by a space
    valid_fields=False # flag to indicate when the first line containing a valid set of fields has been read
                ^
C:207,4:RecipeParser.read_tables: Comma not followed by a space
    for i,fn in enumerate(self.file_names):
         ^^
C:207,10:RecipeParser.read_tables: Invalid name "fn" (should match [a-z_][a-z0-9_]{2,30}$)
C:208,6:RecipeParser.read_tables: Operator not preceded by a space
      fmn=self.file_model_names[i] # actHL: should be stored in the schemas dictionary of dictionaries
         ^
C:209,6:RecipeParser.read_tables: Operator not preceded by a space
      table_path=os.path.join(self.full_path,fn+'.table')
                ^
C:210,6:RecipeParser.read_tables: Operator not preceded by a space
      schema_path=os.path.join(self.full_path,fn+'.schema')
                 ^
C:218,12:RecipeParser.read_tables: Invalid name "l" (should match [a-z_][a-z0-9_]{2,30}$)
C:219,10:RecipeParser.read_tables: Operator not preceded by a space
          l=l.strip() # leading and trailing whitespace (including \r \n, regardless of eol for locale)
           ^
C:219,10:RecipeParser.read_tables: Invalid name "l" (should match [a-z_][a-z0-9_]{2,30}$)
C:220,10:RecipeParser.read_tables: Comma not followed by a space
          if nlp.similarity(nlp.essence(l),nlp.essence('Field name Type Description')) > 0.7:
                                          ^^
C:224,10:RecipeParser.read_tables: Operator not preceded by a space
          fields=list(self.default_fields) # without the "list()" method, assignment only creates a pointer with fields pointing to the same memory as self.default_fields
                ^
C:226,10:RecipeParser.read_tables: Operator not preceded by a space
          s=l.split(None,self.num_table_fields_before_asterisk_split-1) # careful, if you specify a whitespace character then a different algorithm runs
           ^
C:226,10:RecipeParser.read_tables: Invalid name "s" (should match [a-z_][a-z0-9_]{2,30}$)
C:234,12:RecipeParser.read_tables: Operator not preceded by a space
            if valid_fields==False:
                           ^^
C:239,14:RecipeParser.read_tables: Operator not preceded by a space
              self.schemas[fmn]['help_text'][-1]=self.schemas[fmn]['help_text'][-1]+' '+l.strip(nlp.SPACE+eol)
                                                ^
C:245,12:RecipeParser.read_tables: Operator not preceded by a space
            s[2:3]=[s[2].rstrip('*'),'Y']
                  ^
C:247,12:RecipeParser.read_tables: Operator not preceded by a space
            s[2:3]=[s[2],'N']
                  ^
C:250,12:RecipeParser.read_tables: Operator not preceded by a space
            cmd='s['+str(self.field_order[j])+']'
               ^
C:251,12:RecipeParser.read_tables: Operator not preceded by a space
            s2=eval(cmd)
              ^
C:251,12:RecipeParser.read_tables: Invalid name "s2" (should match [a-z_][a-z0-9_]{2,30}$)
C:253,14:RecipeParser.read_tables: Operator not preceded by a space
              fields[j]=' '.join(s2)
                       ^
C:255,14:RecipeParser.read_tables: Operator not preceded by a space
              fields[j]=s2
                       ^
C:258,12:RecipeParser.read_tables: Operator not preceded by a space
            valid_fields=True
                        ^
C:260,14:RecipeParser.read_tables: Comma not followed by a space
              for k,v in self.schema_translations[j].items():
                   ^^
C:260,20:RecipeParser.read_tables: Invalid name "v" (should match [a-z_][a-z0-9_]{2,30}$)
C:261,16:RecipeParser.read_tables: Operator not preceded by a space
                fields[j]=fields[j].replace(k,str(v)) # actHL: should take into account the type of the variable being translated into, somehow
                         ^
C:264,12:RecipeParser.read_tables: Operator not preceded by a space
            self.schemas[fmn]['help_text'][-1]=self.schemas[fmn]['help_text'][-1]+' '+l.strip(nlp.SPACE+eol)
                                              ^
R:197,2:RecipeParser.read_tables: Too many branches (19/12)
C:303,4:RecipeParser.refine_schemas: Operator not preceded by a space
    Nkeys={}
         ^
C:303,4:RecipeParser.refine_schemas: Invalid name "Nkeys" (should match [a-z_][a-z0-9_]{2,30}$)
C:304,4:RecipeParser.refine_schemas: Operator not preceded by a space
    Ncols={}
         ^
C:304,4:RecipeParser.refine_schemas: Invalid name "Ncols" (should match [a-z_][a-z0-9_]{2,30}$)
C:306,4:RecipeParser.refine_schemas: Comma not followed by a space
    for k,schema in self.schemas.items():
         ^^
C:309,4:RecipeParser.refine_schemas: Comma not followed by a space
    for k,schema in self.schemas.items():
         ^^
C:311,6:RecipeParser.refine_schemas: Comma not followed by a space
      for i,schema_is_key in enumerate(schema['is_key']):
           ^^
C:317,8:RecipeParser.refine_schemas: Comma not followed by a space
        for fsk,foreign_schema in self.schemas.items():
               ^^
C:327,10:RecipeParser.refine_schemas: Operator not preceded by a space
          if fsk==k and i==0 and Nkeys[k]==1:
                ^^
C:330,10:RecipeParser.refine_schemas: Comma not followed by a space
          target_likelihood += nlp.similarity(nlp.essence(schema['help_text'][i][0:32]),nlp.essence(foreign_schema['help_text'][0][0:32]))
                                                                                       ^^
C:342,13:RecipeParser.refine_schemas: Operator not preceded by a space
        elif max_target_likelihood>1 :
                                  ^
C:343,10:RecipeParser.refine_schemas: Operator not preceded by a space
          schema['is_key'][i]=str(max_target_key) #+'.'+schema['column_name']
                             ^
C:353,4:RecipeParser.csv2json: Comma not followed by a space
    for ((filenum,fmn),schema) in zip(enumerate(self.schemas),self.schemas.itervalues()):
                 ^^
C:354,6:RecipeParser.csv2json: Operator not preceded by a space
      json_rows=[] # list of dicts or list of {field names: field values} ready for output to json file using json.dumps()
               ^
C:355,11:RecipeParser.csv2json: Comma not followed by a space
      with open(os.path.join(self.full_path,schema['file_name']),'Ur') as infile: # r=read, u=universal treatement of eol characters so that they are translated into \n's regardless
                                           ^^
C:356,8:RecipeParser.csv2json: Comma not followed by a space
        dr = csv.DictReader(infile,fieldnames=schema['column_name'],dialect=fda_dialect)
                                  ^^
C:356,8:RecipeParser.csv2json: Invalid name "dr" (should match [a-z_][a-z0-9_]{2,30}$)
E:356,76:RecipeParser.csv2json: Undefined variable 'fda_dialect'
C:359,8:RecipeParser.csv2json: Comma not followed by a space
        print 'Column names for json file ({0}): {1}'.format(schema['file_name'],schema['column_name'])
                                                                                ^^
C:363,8:RecipeParser.csv2json: Comma not followed by a space
        for pk,row in enumerate(dr):
              ^^
C:363,12:RecipeParser.csv2json: Invalid name "pk" (should match [a-z_][a-z0-9_]{2,30}$)
C:364,10:RecipeParser.csv2json: Comma not followed by a space
          for colnum,nm in enumerate(schema['column_name']):
                    ^^
C:364,21:RecipeParser.csv2json: Invalid name "nm" (should match [a-z_][a-z0-9_]{2,30}$)
C:366,12:RecipeParser.csv2json: Comma not followed by a space
            if isinstance(schema['column_width'][colnum],float):
                                                        ^^
C:372,16:RecipeParser.csv2json: Operator not preceded by a space
                row[nm]=None
                       ^
C:374,12:RecipeParser.csv2json: Comma not followed by a space
            if isinstance(row[nm],str) and (
                                 ^^
                isinstance(schema['column_width'][colnum],int) or
                ( isinstance(schema['column_width'][colnum],float) and
                  schema['column_width'][colnum].is_integer() ) ):
W:381,16:RecipeParser.csv2json: String statement has no effect
C:384,16:RecipeParser.csv2json: Operator not preceded by a space
                row[nm]=row[nm].truncate(int(schema['column_width'][colnum]))
                       ^
C:397,11:RecipeParser.csv2json: Comma not followed by a space
      with open(os.path.join(self.full_path,str(schema['file_name'])+'.json'),'w') as outfile:
                                           ^^
C:398,8:RecipeParser.csv2json: Comma not followed by a space
        outfile.write(json.dumps(json_rows,indent=2,cls=NullFloatEncoder))
                                          ^^
E:398,56:RecipeParser.csv2json: Undefined variable 'NullFloatEncoder'
W:353,10:RecipeParser.csv2json: Unused variable 'filenum'
W:  5,0: Unused import fdam
W: 12,0: Unused import stdout
W:  6,0: Unused import models
W: 12,0: Unused import stdin
W:  9,0: Unused import re
W:  7,0: Unused import types
************* Module tagim.tg.template2html
E: 12,0: invalid syntax
************* Module tagim.tg.herding_metric
C: 10,0: Line too long (97/80)
C: 11,0: Line too long (92/80)
W: 41,0: Bad indentation. Found 2 spaces, expected 4
W: 47,0: Bad indentation. Found 4 spaces, expected 8
W: 57,0: Bad indentation. Found 4 spaces, expected 8
W: 58,0: Bad indentation. Found 4 spaces, expected 8
W: 60,0: Bad indentation. Found 2 spaces, expected 4
W: 61,0: Bad indentation. Found 4 spaces, expected 8
W: 63,0: Bad indentation. Found 2 spaces, expected 4
W: 64,0: Bad indentation. Found 4 spaces, expected 8
W: 65,0: Bad indentation. Found 6 spaces, expected 12
W: 66,0: Bad indentation. Found 4 spaces, expected 8
W: 67,0: Bad indentation. Found 6 spaces, expected 12
W: 68,0: Bad indentation. Found 4 spaces, expected 8
W: 69,0: Bad indentation. Found 4 spaces, expected 8
W: 70,0: Bad indentation. Found 4 spaces, expected 8
W: 71,0: Bad indentation. Found 4 spaces, expected 8
W: 72,0: Bad indentation. Found 4 spaces, expected 8
W: 73,0: Bad indentation. Found 4 spaces, expected 8
W: 74,0: Bad indentation. Found 4 spaces, expected 8
W: 75,0: Bad indentation. Found 4 spaces, expected 8
W: 76,0: Bad indentation. Found 4 spaces, expected 8
W: 77,0: Bad indentation. Found 4 spaces, expected 8
W: 78,0: Bad indentation. Found 4 spaces, expected 8
W: 79,0: Bad indentation. Found 4 spaces, expected 8
W: 80,0: Bad indentation. Found 4 spaces, expected 8
W: 81,0: Bad indentation. Found 4 spaces, expected 8
W: 82,0: Bad indentation. Found 4 spaces, expected 8
W: 83,0: Bad indentation. Found 4 spaces, expected 8
W: 84,0: Bad indentation. Found 4 spaces, expected 8
W: 85,0: Bad indentation. Found 4 spaces, expected 8
W: 86,0: Bad indentation. Found 4 spaces, expected 8
W: 87,0: Bad indentation. Found 4 spaces, expected 8
W: 93,0: Bad indentation. Found 2 spaces, expected 4
W: 94,0: Bad indentation. Found 6 spaces, expected 8
W:101,0: Bad indentation. Found 6 spaces, expected 8
W:102,0: Bad indentation. Found 8 spaces, expected 12
W:103,0: Bad indentation. Found 6 spaces, expected 8
W:104,0: Bad indentation. Found 6 spaces, expected 8
W:105,0: Bad indentation. Found 8 spaces, expected 12
W:106,0: Bad indentation. Found 6 spaces, expected 8
W:107,0: Bad indentation. Found 6 spaces, expected 8
W:108,0: Bad indentation. Found 8 spaces, expected 12
W:109,0: Bad indentation. Found 6 spaces, expected 8
W:110,0: Bad indentation. Found 6 spaces, expected 8
W:111,0: Bad indentation. Found 6 spaces, expected 8
W:112,0: Bad indentation. Found 6 spaces, expected 8
W:113,0: Bad indentation. Found 8 spaces, expected 12
W:114,0: Bad indentation. Found 8 spaces, expected 12
C:115,0: Line too long (115/80)
W:116,0: Bad indentation. Found 8 spaces, expected 12
W:117,0: Bad indentation. Found 6 spaces, expected 8
W:118,0: Bad indentation. Found 6 spaces, expected 8
W:119,0: Bad indentation. Found 6 spaces, expected 8
W:123,0: Bad indentation. Found 6 spaces, expected 8
C: 31,0: Comma not followed by a space
from sys import stderr,stdout,stdin
                      ^^
F: 33,0: Unable to import 'settings'
E: 37,0: No name 'csv2model' in module 'tg'
F: 37,0: Unable to import 'tg.csv2model' (invalid syntax (<string>, line 968))
C: 39,0:herd: Invalid name "herd" (should match [A-Z_][a-zA-Z0-9]+$)
C: 83,4:herd.read_symbol_list: Invalid name "xs" (should match [a-z_][a-z0-9_]{2,30}$)
C: 39,0:herd: Missing docstring
R: 41,2:herd.__init__: Too many arguments (12/5)
W: 41,2:herd.__init__: Dangerous default value ['GOOG', 'IBM'] as argument
W: 41,2:herd.__init__: Dangerous default value [] as argument
W: 43,16:herd.__init__: Unused argument 'sector'
W: 45,16:herd.__init__: Unused argument 'force'
W: 42,41:herd.__init__: Unused argument 'end_date'
W: 45,43:herd.__init__: Unused argument 'verbosity'
W: 42,64:herd.__init__: Unused argument 'months'
W: 42,16:herd.__init__: Unused argument 'start_date'
W: 44,33:herd.__init__: Unused argument 'models_file'
W: 44,16:herd.__init__: Unused argument 'csv_path'
W: 45,29:herd.__init__: Unused argument 'refine'
W: 46,16:herd.__init__: Unused argument 'file_names'
C: 60,2:herd.read_symbol_lists: Missing docstring
W: 68,4:herd.read_symbol_list: Redefining name 'csm' from outer scope (line 37)
W: 65,6:herd.read_symbol_list: Redefining name 'PROJECT_ROOT' from outer scope (line 33)
C: 63,2:herd.read_symbol_list: Missing docstring
W: 67,6:herd.read_symbol_list: No exception type(s) specified
F: 65,6:herd.read_symbol_list: Unable to import 'settings'
C: 67,6:herd.read_symbol_list: Invalid name "PROJECT_ROOT" (should match [a-z_][a-z0-9_]{2,30}$)
E: 68,4:herd.read_symbol_list: No name 'csv2model' in module 'tg'
F: 68,4:herd.read_symbol_list: Unable to import 'tg.csv2model' (invalid syntax (<string>, line 968))
C: 69,4:herd.read_symbol_list: Operator not preceded by a space
    self.csi=csm.Importer(PROJECT_ROOT+'/tgfinance/fixtures')
            ^
C: 85,4:herd.read_symbol_list: Operator not preceded by a space
    self.exchanges=self.xs[0,1:,-1].tolist()
                  ^
C: 86,4:herd.read_symbol_list: Operator not preceded by a space
    self.symbols=self.xs[0,1:,0].tolist()
                ^
C: 87,4:herd.read_symbol_list: Operator not preceded by a space
    self.fullsymbols=[':'.join(x) for x in zip(self.exchanges,self.symbols)]
                    ^
E:107,13:herd.get_all: Using variable 'symbols' before assignment
C:116,8:herd.get_all: Comma not followed by a space
        self.csi.set_csv(data,filename='YahooQuotes'+symbol+'.CSV',prefix='')
                             ^^
W:103,6:herd.get_all: Attribute 'end_date' defined outside __init__
W: 87,4:herd.read_symbol_list: Attribute 'fullsymbols' defined outside __init__
W: 85,4:herd.read_symbol_list: Attribute 'exchanges' defined outside __init__
W: 83,4:herd.read_symbol_list: Attribute 'xs' defined outside __init__
W:106,6:herd.get_all: Attribute 'start_date' defined outside __init__
W: 36,0: Unused import nlp
W: 33,0: Unused import PROJECT_ROOT
W: 31,0: Unused import stdout
W: 27,0: Unused import types
W: 31,0: Unused import stdin
W: 23,0: Unused import urllib
W: 29,0: Unused import eol
W: 30,0: Unused import re
W: 26,0: Unused import json
W: 31,0: Unused import stderr
W: 24,0: Unused import csv
W: 28,0: Unused import os
************* Module tagim.tg.stockquote
C: 29,0: Line too long (118/80)
C:  1,0: Missing docstring
W: 25,-1: String statement has no effect
C: 27,0:__request: Missing docstring
C: 63,0:get_price: Missing docstring
C: 67,0:get_change: Missing docstring
C: 71,0:get_volume: Missing docstring
C: 75,0:get_avg_daily_volume: Missing docstring
C: 79,0:get_stock_exchange: Missing docstring
C: 83,0:get_market_cap: Missing docstring
C: 87,0:get_book_value: Missing docstring
C: 91,0:get_ebitda: Missing docstring
C: 95,0:get_dividend_per_share: Missing docstring
C: 99,0:get_dividend_yield: Missing docstring
C:103,0:get_earnings_per_share: Missing docstring
C:107,0:get_52_week_high: Missing docstring
C:111,0:get_52_week_low: Missing docstring
C:115,0:get_50day_moving_avg: Missing docstring
C:119,0:get_200day_moving_avg: Missing docstring
C:123,0:get_price_earnings_ratio: Missing docstring
C:127,0:get_price_earnings_growth_ratio: Missing docstring
C:131,0:get_price_sales_ratio: Missing docstring
C:135,0:get_price_book_ratio: Missing docstring
C:138,0:get_short_ratio: Missing docstring
************* Module tagim.tg.csv2model
E:968,0: invalid syntax
************* Module tagim.tg.image-resize
W: 15,0: Bad indentation. Found 2 spaces, expected 4
W: 16,0: Bad indentation. Found 4 spaces, expected 8
W: 17,0: Bad indentation. Found 2 spaces, expected 4
W: 18,0: Bad indentation. Found 4 spaces, expected 8
W: 19,0: Bad indentation. Found 2 spaces, expected 4
W: 20,0: Bad indentation. Found 4 spaces, expected 8
W: 21,0: Bad indentation. Found 2 spaces, expected 4
W: 22,0: Bad indentation. Found 4 spaces, expected 8
C: 26,0: Line too long (98/80)
W: 26,0: Bad indentation. Found 2 spaces, expected 4
W: 35,0: Bad indentation. Found 2 spaces, expected 4
W: 36,0: Bad indentation. Found 4 spaces, expected 8
W: 37,0: Bad indentation. Found 2 spaces, expected 4
W: 38,0: Bad indentation. Found 2 spaces, expected 4
W: 41,0: Bad indentation. Found 2 spaces, expected 4
W: 42,0: Bad indentation. Found 2 spaces, expected 4
C: 43,0: Line too long (83/80)
W: 43,0: Bad indentation. Found 4 spaces, expected 8
W: 44,0: Bad indentation. Found 4 spaces, expected 8
C: 45,0: Line too long (105/80)
W: 45,0: Bad indentation. Found 2 spaces, expected 4
W: 46,0: Bad indentation. Found 4 spaces, expected 8
C: 47,0: Line too long (143/80)
W: 47,0: Bad indentation. Found 4 spaces, expected 8
W: 48,0: Bad indentation. Found 4 spaces, expected 8
W: 49,0: Bad indentation. Found 2 spaces, expected 4
W: 50,0: Bad indentation. Found 4 spaces, expected 8
W: 51,0: Bad indentation. Found 2 spaces, expected 4
W: 52,0: Bad indentation. Found 4 spaces, expected 8
W: 53,0: Bad indentation. Found 4 spaces, expected 8
W: 55,0: Bad indentation. Found 2 spaces, expected 4
W: 56,0: Bad indentation. Found 2 spaces, expected 4
W: 57,0: Bad indentation. Found 4 spaces, expected 8
W: 58,0: Bad indentation. Found 4 spaces, expected 8
W: 59,0: Bad indentation. Found 2 spaces, expected 4
C: 60,0: Line too long (130/80)
W: 60,0: Bad indentation. Found 2 spaces, expected 4
W: 61,0: Bad indentation. Found 2 spaces, expected 4
C: 62,0: Line too long (82/80)
W: 62,0: Bad indentation. Found 4 spaces, expected 8
W: 63,0: Bad indentation. Found 4 spaces, expected 8
W: 64,0: Bad indentation. Found 2 spaces, expected 4
W: 65,0: Bad indentation. Found 4 spaces, expected 8
W: 66,0: Bad indentation. Found 4 spaces, expected 8
W: 68,0: Bad indentation. Found 2 spaces, expected 4
W: 69,0: Bad indentation. Found 2 spaces, expected 4
W: 45,0: TODO: look for .THM and .MPG pairs (video and cover image)
W: 34,4: Redefining built-in 'file'
C:  1,0: Invalid name "image-resize" (should match (([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$)
C:  1,0: Missing docstring
C:  5,0: Invalid name "opts" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:  5,6: Invalid name "args" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:  8,0: Invalid name "directory" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C:  9,0: Invalid name "width" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 10,0: Invalid name "height" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 11,0: Invalid name "suffix" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 30,0: Invalid name "ifp" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 32,0: Invalid name "colnum" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 33,0: Operator not preceded by a space
numcols=4
       ^
C: 33,0: Invalid name "numcols" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 35,2: Operator not preceded by a space
  if numcols==(colnum-1):
            ^^
C: 41,2: Comma not followed by a space
  fn1,ext1 = os.path.splitext(fp)
     ^^
C: 42,2: Comma not followed by a space
  if ext1.lower() not in ['.jpg','.jpeg','.png','.bmp','.avi','.mpg','.mpeg']:
                                ^^
C: 45,2: Comma not followed by a space
  if ext1.lower() in ['.avi','.mpg','.mpeg']: #TODO: look for .THM and .MPG pairs (video and cover image)
                            ^^
W: 52,4: No exception type(s) specified
C: 55,2: Comma not followed by a space
  (fp,ext)=os.path.splitext(fp)
     ^^
************* Module tagim.tg.test.test-utils-script
C:  3,0: Line too long (158/80)
C: 11,0: Line too long (100/80)
C: 17,0: Line too long (134/80)
C: 18,0: Line too long (113/80)
C: 19,0: Line too long (112/80)
C: 20,0: Line too long (108/80)
C: 34,0: Line too long (114/80)
C: 35,0: Line too long (113/80)
C: 36,0: Line too long (109/80)
C:  1,0: Invalid name "test-utils-script" (should match (([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$)
C:  1,0: Missing docstring
W:  2,0: Relative import 'settings2', should be 'tagim.tg.test.settings2'
W:  2,0: Wildcard import settings2
C:  3,0: Invalid name "d2" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
W:  8,0: Relative import 'settings1', should be 'tagim.tg.test.settings1'
W:  8,0: Reimport 'settings1' (imported line 23)
C:  9,0: Invalid name "d1" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 11,0: Invalid name "d3" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 14,0: Comma not followed by a space
merge_settings(s1,d3,verbose=False)
                 ^^
C: 16,0: Comma not followed by a space
assert max(len(d1),len(d2))<=len(d3)<=(len(d1)+len(d2))
                  ^^
C: 17,0: Invalid name "msg" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
W: 23,0: Relative import 'settings1', should be 'tagim.tg.test.settings1'
W: 24,0: Relative import 'settings2', should be 'tagim.tg.test.settings2'
C: 25,0: Invalid name "s3b" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 27,0: Comma not followed by a space
merge_settings(s2b,s3b,verbose=False)
                  ^^
C: 29,0: Invalid name "d1b" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 30,0: Invalid name "d2b" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 31,0: Invalid name "d3b" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
C: 33,0: Comma not followed by a space
assert max(len(d1b),len(d2b))<=len(d3b)<=(len(d1b)+len(d2b))
                   ^^
W:  2,0: Unused import MIDDLEWARE_CLASSES from wildcard import
W:  2,0: Unused import PASSWORD_HASHERS from wildcard import
W:  2,0: Unused import INSTALLED_APPS from wildcard import
W:  2,0: Unused import LANGUAGES from wildcard import
W:  2,0: Unused import DEBUG from wildcard import
W:  2,0: Unused import DATABASES from wildcard import
W:  2,0: Unused import USE_I18N from wildcard import
W:  5,0: Unused import copy
W:  2,0: Unused import USE_L10N from wildcard import
W:  2,0: Unused import gettext from wildcard import
W:  2,0: Unused import TEMPLATE_LOADERS from wildcard import
W:  2,0: Unused import TEMPLATE_CONTEXT_PROCESSORS from wildcard import
W:  2,0: Unused import os from wildcard import
************* Module tagim.tg.test.settings1
C: 33,0: Line too long (120/80)
C: 34,0: Line too long (102/80)
C: 35,0: Line too long (87/80)
C: 36,0: Line too long (89/80)
C: 37,0: Line too long (126/80)
C: 38,0: Line too long (105/80)
C: 53,0: Line too long (92/80)
W: 53,0: TODO: use cicular copyright symbol
C:  1,0: Missing docstring
W:  7,0: Unused import posixpath
************* Module tagim.tg.test
C:  1,0: Missing docstring
************* Module tagim.tg.test.settings2
C:  3,0: Invalid name "gettext" (should match (([A-Z_][A-Z0-9_]*)|(__.*__))$)
W:  2,0: Unused import os
************* Module tagim.tg.test.test_idioms
E: 17,0: invalid syntax
R:  1,0: Similar lines in 2 files
==tagim.tg.bitcrawl:278
==tagim.tg.regex_patterns:118
QUANT_PATTERNS = dict(
    # HL: added some less common field/column separators: colon, vertical_bar
    SEP                  = r'\s*[\s,;\|:]\s*',
    DATE_SEP             = r'\s*[\s,;\|\-\:\_\/]\s*',
    # based on DATE_SEP (with \s !!) ORed with case insensitive connecting words like "to" and "'till"
    RANGE_SEP            = r"(?i)\s*(?:before|after|then|(?:(?:un)?(?:\')?til)|(?:(?:to)?[\s,;\|\-\:\_\/]{1,2}))\s*",
    TIME_SEP             = r'\s*[\s,;\|\-\:\_]\s*',
    # HL: added sign, spacing, & exponential notation: 1.2E3 or +1.2 e -3
    FLOAT                = r'[+-]?\d+(?:\.\d+)?(?:\s?[eE]\s?[+-]?\d+)?',
    FLOAT_NONEG          =  r'[+]?\d+(?:\.\d+)?(?:\s?[eE]\s?[+-]?\d+)?',
    FLOAT_NOSIGN         =      r'\d+(?:\.\d+)?(?:\s?[eE]\s?[+-]?\d+)?',
    # HL: got rid of exponential notation with an E and added x10^-4 or *10^23
    FLOAT_NOE            = r'[+-]?\d+(?:\.\d+)?(?:\s?[xX*]10\s?\^\s?[+-]?\d+)?',
    FLOAT_NONEG_NOE      =  r'[+]?\d+(?:\.\d+)?(?:\s?[xX*]10\s?\^\s?[+-]?\d+)?',
    FLOAT_NOSIGN_NOE     =      r'\d+(?:\.\d+)?(?:\s?[xX*]10\s?\^\s?[+-]?\d+)?',
    # HL: added sign and exponential notation: +1e6 -100 e +3
    INT                  = r'[+-]?\d+(?:\s?[eE]\s?[+]?\d+)?',
    INT_NONEG            =  r'[+]?\d+(?:\s?[eE]\s?[+]?\d+)?',
    INT_NOSIGN           =      r'\d+(?:\s?[eE]\s?[+]?\d+)?', # HL: exponents should always be allowed a sign
    INT_NOSIGN_2DIGIT    = r'\d\d',
    INT_NOSIGN_4DIGIT    = r'\d\d\d\d',
    INT_NOSIGN_2OR4DIGIT = r'(?:\d\d){1,2}',
    YEAR                 = r'(?i)(?:1[0-9]|2[012]|[1-9])?\d?\d(?:\s?AD|BC)?',  # 2299 BC - 2299 AD, no sign
R:  1,0: Similar lines in 2 files
==tagim.tg.replace-in-files-script:133
==tagim.tg.resolve-script:163
        if path and not o.unreal:
            path = os.path.realpath(path)
        if path and not o.abs:
            path = os.path.abspath(path)
        if path and o.norm:
            path = os.path.normcase(path)
        if path and o.base:
            path = os.path.basename(path)
        if path and o.dir:
            path = os.path.split(path)[0]
        if path and o.strip:
            path, ext = os.path.splitext(path)
        if path and o.ext:
            ext, path = os.path.splitext(path)
        #result.append(path)
        # TODO: BUG: pipes may not work output doesn't work (e.g. resolve --run cat tagim | grep tag)
        # TODO: BUG: built-in commands like cat don't work (e.g. resolve --run cat tagim)
        #			 which('cat') works fine and points to /bin/cat
        if path and o.run and which(o.run):
            output = subprocess.Popen([o.run,'{0}'.format(path)], stdout=subprocess.PIPE).communicate()[0]
        else:
            print path # std out

R:  1,0: Similar lines in 2 files
==tagim.tg.bitcrawl:350
==tagim.tg.tagim:472
        if len(y) == 2:
            if y[0] == '0':
                y = int(y) + 2000
#			else:
#				y = int(y)
#				if y > 20 and y < 100:
#					y = y + 1900
        y = int(y)
        mon = int(zero_if_none(mo.group('mon')))
        d = int(zero_if_none(mo.group('d')))
        h = int(zero_if_none(mo.group('h')))
        m = int(zero_if_none(mo.group('m')))
        s_f = float(zero_if_none(mo.group('s')))
        s = int(floor(s_f))
        us = int((s_f-s)*1000000.0)
R:  1,0: Similar lines in 2 files
==tagim.tagim-script:125
==tagim.tg.utils:481
p.add_option('-v', '--verbose',
             dest='verbose', default=True,
             action='store_true',
             help='Print status messages.', )
p.add_option('--debug',
             dest='debug', default=False,
             action='store_true',
R:  1,0: Similar lines in 2 files
==tagim.tg.replace-in-files-script:80
==tagim.tg.resolve-script:140
                )
    o,a = p.parse_args()
    return o,a

if __name__ == "__main__":
    import os.path


Report
======
3824 statements analysed.

Statistics by type
------------------

+---------+-------+-----------+-----------+------------+---------+
|type     |number |old number |difference |%documented |%badname |
+=========+=======+===========+===========+============+=========+
|module   |30     |30         |=          |53.33       |16.67    |
+---------+-------+-----------+-----------+------------+---------+
|class    |14     |14         |=          |78.57       |28.57    |
+---------+-------+-----------+-----------+------------+---------+
|method   |56     |56         |=          |75.00       |3.57     |
+---------+-------+-----------+-----------+------------+---------+
|function |249    |249        |=          |48.19       |3.61     |
+---------+-------+-----------+-----------+------------+---------+



Messages by category
--------------------

+-----------+-------+---------+-----------+
|type       |number |previous |difference |
+===========+=======+=========+===========+
|convention |2718   |2718     |=          |
+-----------+-------+---------+-----------+
|refactor   |52     |52       |=          |
+-----------+-------+---------+-----------+
|warning    |1167   |1167     |=          |
+-----------+-------+---------+-----------+
|error      |68     |68       |=          |
+-----------+-------+---------+-----------+



% errors / warnings by module
-----------------------------

+----------------------------------------+------+--------+---------+-----------+
|module                                  |error |warning |refactor |convention |
+========================================+======+========+=========+===========+
|tagim.tg.utils                          |20.59 |6.94    |25.00    |9.53       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.mail                           |11.76 |10.20   |7.69     |2.35       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.bitcrawl                       |11.76 |10.03   |23.08    |19.72      |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.tagim                          |11.76 |2.74    |1.92     |12.95      |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.nlp                            |10.29 |4.46    |7.69     |18.29      |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.recipeprocessing               |5.88  |25.62   |11.54    |8.31       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.replace-in-files-script        |5.88  |0.86    |0.00     |1.66       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.herding_metric                 |4.41  |7.20    |1.92     |0.55       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tagim-script                      |4.41  |2.49    |0.00     |5.08       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tagimgui                          |2.94  |0.17    |0.00     |0.52       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.resolve-script                 |1.47  |0.86    |0.00     |1.58       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.test.test_idioms               |1.47  |0.00    |9.62     |0.00       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.template2html                  |1.47  |0.00    |0.00     |0.00       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.preprocess                     |1.47  |0.00    |0.00     |0.00       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.memem                          |1.47  |0.00    |0.00     |0.00       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.fdacsvprocessing               |1.47  |0.00    |0.00     |0.00       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.csv2model                      |1.47  |0.00    |0.00     |0.00       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.finance                        |0.00  |15.34   |7.69     |6.62       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.image-resize                   |0.00  |3.68    |0.00     |0.85       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.looping_background_image_shuffler |0.00  |1.97    |0.00     |0.81       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.test.test-utils-script         |0.00  |1.63    |0.00     |0.85       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.recollq                        |0.00  |1.37    |0.00     |0.52       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.regex_patterns                 |0.00  |1.20    |0.00     |1.36       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.ai_ngrams                      |0.00  |1.03    |0.00     |3.79       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.tz                             |0.00  |0.69    |1.92     |1.55       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.compose_changelog                 |0.00  |0.51    |0.00     |0.26       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.compose_email                  |0.00  |0.26    |0.00     |0.85       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.__init__                       |0.00  |0.26    |0.00     |0.11       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.test.settings1                 |0.00  |0.17    |0.00     |0.29       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.set_splash_background          |0.00  |0.17    |0.00     |0.07       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.stockquote                     |0.00  |0.09    |0.00     |0.85       |
+----------------------------------------+------+--------+---------+-----------+
|tagim.tg.test.settings2                 |0.00  |0.09    |0.00     |0.04       |
+----------------------------------------+------+--------+---------+-----------+



Messages
--------

+-----------+------------+
|message id |occurrences |
+===========+============+
|C0301      |852         |
+-----------+------------+
|C0103      |820         |
+-----------+------------+
|W0311      |551         |
+-----------+------------+
|C0324      |535         |
+-----------+------------+
|C0322      |312         |
+-----------+------------+
|C0111      |160         |
+-----------+------------+
|W0511      |159         |
+-----------+------------+
|W0312      |142         |
+-----------+------------+
|W0621      |50          |
+-----------+------------+
|W0613      |43          |
+-----------+------------+
|W0612      |39          |
+-----------+------------+
|W0611      |37          |
+-----------+------------+
|E0602      |27          |
+-----------+------------+
|C0321      |24          |
+-----------+------------+
|W0301      |23          |
+-----------+------------+
|F0401      |22          |
+-----------+------------+
|W0102      |19          |
+-----------+------------+
|W0702      |17          |
+-----------+------------+
|W0404      |14          |
+-----------+------------+
|C0323      |14          |
+-----------+------------+
|R0914      |13          |
+-----------+------------+
|R0913      |13          |
+-----------+------------+
|W0614      |12          |
+-----------+------------+
|E1101      |12          |
+-----------+------------+
|W0403      |10          |
+-----------+------------+
|R0912      |10          |
+-----------+------------+
|E0611      |9           |
+-----------+------------+
|E1103      |8           |
+-----------+------------+
|W0101      |7           |
+-----------+------------+
|E0001      |6           |
+-----------+------------+
|W0622      |5           |
+-----------+------------+
|W0201      |5           |
+-----------+------------+
|W0104      |5           |
+-----------+------------+
|R0801      |5           |
+-----------+------------+
|R0915      |4           |
+-----------+------------+
|W0401      |3           |
+-----------+------------+
|W0331      |3           |
+-----------+------------+
|W0231      |3           |
+-----------+------------+
|W0141      |3           |
+-----------+------------+
|W0107      |3           |
+-----------+------------+
|W0105      |3           |
+-----------+------------+
|R0911      |3           |
+-----------+------------+
|E0601      |3           |
+-----------+------------+
|E0102      |3           |
+-----------+------------+
|W0631      |2           |
+-----------+------------+
|W0402      |2           |
+-----------+------------+
|R0903      |2           |
+-----------+------------+
|R0201      |2           |
+-----------+------------+
|W0604      |1           |
+-----------+------------+
|W0603      |1           |
+-----------+------------+
|W0406      |1           |
+-----------+------------+
|W0333      |1           |
+-----------+------------+
|W0212      |1           |
+-----------+------------+
|W0142      |1           |
+-----------+------------+
|W0109      |1           |
+-----------+------------+
|C0302      |1           |
+-----------+------------+



Global evaluation
-----------------
Your code has been rated at -1.18/10 (previous run: -1.18/10)

External dependencies
---------------------
::

    geopy (tagim.tg.tagim,tagim.tg.regex_patterns)
      \-units (tagim.tagim-script)
      \-util (tagim.tagim-script)
    tg (tagim.tg.tagim)
      \-nlp (tagim.tg.herding_metric,tagim.tg.tagim)
      \-regex_patterns (tagim.tg.tagim)
      | \-DATETIME_PATTERN (tagim.tg.tagim)
      | \-POINT_PATTERN (tagim.tg.tagim)
      | \-RANGE_PATTERN (tagim.tg.nlp)
      \-stockquote (tagim.tg.herding_metric)
      \-tagim (tagim.tg.set_splash_background)
      \-utils (tagim.tg.tagim,tagim.tg.replace-in-files-script)
        \-locate (tagim.tg.resolve-script)
        \-merge_settings (tagim.tg.test.test-utils-script)
        \-sign (tagim.tg.tagim)
        \-zero_if_none (tagim.tg.tagim)



Raw metrics
-----------

+----------+-------+------+---------+-----------+
|type      |number |%     |previous |difference |
+==========+=======+======+=========+===========+
|code      |4392   |60.32 |4392     |=          |
+----------+-------+------+---------+-----------+
|docstring |1488   |20.44 |1488     |=          |
+----------+-------+------+---------+-----------+
|comment   |780    |10.71 |780      |=          |
+----------+-------+------+---------+-----------+
|empty     |621    |8.53  |621      |=          |
+----------+-------+------+---------+-----------+



Duplication
-----------

+-------------------------+------+---------+-----------+
|                         |now   |previous |difference |
+=========================+======+=========+===========+
|nb duplicated lines      |74    |74       |=          |
+-------------------------+------+---------+-----------+
|percent duplicated lines |0.962 |0.962    |=          |
+-------------------------+------+---------+-----------+



